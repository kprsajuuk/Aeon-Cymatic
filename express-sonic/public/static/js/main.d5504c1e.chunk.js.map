{"version":3,"sources":["pages/music/Music.module.scss","redux/action/index.js","redux/reducer/searchMusic.js","redux/reducer/index.js","utils/index.js","pages/music/AudioControl.jsx","settings/Pagination.js","lib/MusicAction.jsx","pages/music/MusicList.jsx","lib/LoadingImg.jsx","pages/music/AlbumList.jsx","pages/music/ArtistList.jsx","pages/music/PlayList.jsx","pages/music/Music.jsx","pages/main/Main.jsx","App.js","serviceWorker.js","index.js","pages/music/AudioControl.module.scss","pages/main/Main.module.scss"],"names":["module","exports","searchMusic","searchKey","searchType","type","initialState","state","action","Object","assign","combineReducers","DownloadBlob","data","name","fileName","blob","Blob","objectUrl","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","GetDuration","str","unit","duration","moment","hour","hours","minute","minutes","second","seconds","toString","length","AudioControl","audioSource","current","paused","volume","loop","visual","actMenuVisible","extendVisible","initAudio","props","src","audioCtx","window","AudioContext","webkitAudioContext","createMediaElementSource","querySelector","analyser","createAnalyser","fftSize","connect","destination","source","setState","interval","setInterval","isNaN","audio","clearInterval","playMusic","Math","floor","removeEventListener","onTimeUpdate","addEventListener","progressBar","onmousedown","onDragProgress","onEndEvent","drawVisualEffect","array","Uint8Array","frequencyBinCount","getByteFrequencyData","c_width","canvas","width","c_height","height","ctx","clearRect","rec_width","i","rec_height","fillRect","animationEnd","animationEnded","requestAnimationFrame","clearTimeout","animationEndTimer","play","pauseMusic","pause","setTimeout","newCurrent","currentTime","onPlay","onVolumeChange","v","event","preventDefault","totalWidth","getElementById","offsetWidth","offsetX","onmousemove","e","onmouseup","onAudioEnd","next","onDownload","suffix","audioData","onVisualChange","this","container","clientWidth","clientHeight","getContext","fillStyle","prevProps","prevState","snapshot","extendAction","className","style","extend","info","join","artist","StepBackwardOutlined","onClick","StepForwardOutlined","ActMenu","key","Item","disabled","checkedChildren","unCheckedChildren","onChange","Volume","volumePop","slider","vertical","value","audioControl","content","placement","onVisibleChange","interface","boxShadow","id","item","shape","size","icon","CaretRightOutlined","PauseOutlined","progress","round","NotificationOutlined","cursor","overlay","visible","canvasContainer","Component","Pagination","defaultCurrent","defaultPageSize","hideOnSinglePage","pageSize","pageSizeOptions","showSizeChanger","showTotal","total","range","MusicAction","btnList","indexOf","title","PlayCircleOutlined","PlusCircleOutlined","onAddList","CloudDownloadOutlined","MusicList","loading","musicList","keyword","pagination","onSearch","fetchMusicList","onUpdate","onAlbumClick","record","onAlbum","onArtistClick","onArtist","limit","page","Axios","get","params","then","res","success","songs","notification","error","message","columns","dataIndex","render","text","album","table","dataSource","scroll","y","innerHeight","rowKey","LoadingImg","imageErr","minHeight","minWidth","minWIdth","spinning","alt","opacity","onLoad","onError","onDragStart","AlbumList","albumInfo","onAddAlbum","fetchAlbumDetail","albumId","img","emphasize","company","publishTime","format","DashOutlined","TabPane","artistList","hotList","albumList","artistInfo","fetchArtistDetail","artistId","fetchArtistAlbum","albums","albumSize","musicColumns","albumColumns","tabPosition","tab","PlayList","editMod","listType","customPagination","recentPagination","onRemove","onModChange","onPositionChange","num","customList","recentList","currentType","rowAct","onArrow","CloseOutlined","SyncOutlined","spin","tableColIcon","playList","header","activeKey","rowClassName","ArrowAction","CaretUpOutlined","CaretDownOutlined","arrow","Music","audioSrc","currentPlayList","playMod","playingList","updatePlayList","records","maxLength","list","JSON","parse","localStorage","getItem","result","forEach","index","splice","push","pop","setItem","stringify","fetchPlay","warning","max","responseType","fetchDownload","TabExtra","music","tabBarExtraContent","forceRender","Search","Option","Main","onTest","console","log","dispatch","main","topBar","left","defaultValue","select","target","App","exact","path","component","Boolean","location","hostname","match","store","createStore","reducer","ReactDOM","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"kKACAA,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,OAAS,sBAAsB,MAAQ,qBAAqB,OAAS,sBAAsB,KAAO,oBAAoB,KAAO,oBAAoB,MAAQ,qBAAqB,MAAQ,qBAAqB,KAAO,oBAAoB,UAAY,yBAAyB,SAAW,wBAAwB,OAAS,sBAAsB,MAAQ,uB,mHCCvXC,EAAc,SAACC,EAAWC,GACnC,MAAO,CAACC,KAHgB,eAGIF,YAAWC,eCDrCE,EAAe,CACpBH,UAAW,GACXC,WAAY,IAeEF,EAZK,WAAmC,IAAlCK,EAAiC,uDAAzBD,EAAcE,EAAW,uCACrD,OAAQA,EAAOH,MACd,IDT0B,eCUzB,OAAOI,OAAOC,OAAO,GAAIH,EAAO,CAC/BJ,UAAWK,EAAOL,UAClBC,WAAYI,EAAOJ,aAErB,QACC,OAAOG,ICZKI,cAAgB,CAC9BT,gB,+TCFKU,EAAe,SAACC,GAAmB,IAAbC,EAAY,uDAAP,GACzBC,EAAWD,GAAQ,OACnBE,EAAO,IAAIC,KAAK,CAACJ,EAAKA,OACtBK,EAAYC,IAAIC,gBAAgBJ,GAChCK,EAAIC,SAASC,cAAc,KAC/BF,EAAEG,KAAON,EACTG,EAAEI,SAAWV,EACbO,SAASI,KAAKC,YAAYN,GAC1BA,EAAEO,QACFN,SAASI,KAAKG,YAAYR,GAC1BF,IAAIW,gBAAgBZ,IAGlBa,EAAc,SAACC,GAA8B,IAAzBC,EAAwB,uDAAnB,eACvBC,EAAWC,IAAOD,SAASF,EAAKC,GAChCG,EAAOF,EAASG,QAAU,EAAIH,EAASG,QAAU,IAAM,GACvDC,EAASJ,EAASK,UAAY,IAC9BC,EAASN,EAASO,UAAUC,WAGhC,OAFIJ,EAAOK,OAAS,IAAGL,EAAS,IAAMA,GAClCE,EAAOG,OAAS,IAAGH,EAAS,IAAMA,GAC/BJ,EAAOE,EAASE,G,iBChBNI,E,4MACjBrC,MAAQ,CACJsC,YAAa,GACbX,SAAU,OACVY,QAAS,OACTC,QAAQ,EACRC,OAAQ,IACRC,MAAM,EACNC,QAAQ,EACRC,gBAAgB,EAChBC,eAAe,G,EAsBnBC,UAAY,WACR,IAAIrC,EAAO,IAAIC,KAAK,CAAC,EAAKqC,MAAMC,IAAI1C,OAC/B,EAAK2C,WACN,EAAKA,SAAW,IAAKC,OAAOC,cAAgBD,OAAOE,oBACnD,EAAKd,YAAc,EAAKW,SAASI,yBAAyBtC,SAASuC,cAAc,UACjF,EAAKC,SAAW,EAAKN,SAASO,iBAC9B,EAAKD,SAASE,QAAU,IACxB,EAAKnB,YAAYoB,QAAQ,EAAKH,UAC9B,EAAKA,SAASG,QAAQ,EAAKT,SAASU,cAExC,IAAIC,EAAShD,IAAIC,gBAAgBJ,GACjC,EAAKoD,SAAS,CAACvB,YAAasB,IAAS,WACjC,IAAIE,EAAWC,aAAY,WAClBC,MAAM,EAAKC,MAAMtC,YAClBuC,cAAcJ,GACd,EAAKK,YACL,EAAKN,SAAS,CACVlC,SAAUyC,KAAKC,MAAM,EAAKJ,MAAMtC,eAGzC,KACH,EAAKsC,MAAMK,oBAAoB,aAAc,EAAKC,cAClD,EAAKN,MAAMO,iBAAiB,aAAc,EAAKD,cAC/C,EAAKE,YAAYC,YAAc,EAAKC,eACpC,EAAKV,MAAMK,oBAAoB,QAAS,EAAKM,YAC7C,EAAKX,MAAMO,iBAAiB,QAAS,EAAKI,gB,EAIlDC,iBAAmB,WACf,IAAIC,EAAQ,IAAIC,WAAW,EAAKxB,SAASyB,mBACzC,EAAKzB,SAAS0B,qBAAqBH,GACnC,IAAII,EAAU,EAAKC,OAAOC,MACtBC,EAAW,EAAKF,OAAOG,OAG3B,GADA,EAAKC,IAAIC,UAAU,EAAG,EAAGN,EAASG,GAC9B,EAAKrF,MAAM2C,OAAO,CAElB,IADA,IAAI8C,EAAYP,EAAU,EAAIJ,EAAM1C,OAC3BsD,EAAE,EAAGA,EAAEZ,EAAM1C,OAAQsD,IAAI,CAC9B,IAAIC,EAAcb,EAAMY,GAAG,IAAML,EAAY,GAC7C,EAAKE,IAAIK,SAASH,EAAYC,EAAGL,EAAWM,EAAwB,GAAZF,EAAiBE,GACzE,EAAKJ,IAAIK,SAASV,EAAUO,EAAYC,EAAGL,EAAWM,EAAwB,GAAZF,EAAiBE,GAElF,EAAKE,cAGN,EAAKC,gBAAiB,EACtB,EAAKP,IAAIC,UAAU,EAAG,EAAGN,EAASG,IAHlCnC,OAAO6C,sBAAsB,EAAKlB,oB,EAQ9CV,UAAY,WACR6B,aAAa,EAAKC,mBAClB,EAAKJ,cAAe,EACpB,EAAK5B,MAAMiC,OACX,EAAKrC,SAAS,CAACrB,QAAQ,IACnB,EAAKsD,iBACL,EAAKA,gBAAiB,EACtB5C,OAAO6C,sBAAsB,EAAKlB,oB,EAI1CsB,WAAa,WACT,EAAKlC,MAAMmC,QACX,EAAKH,kBAAoBI,YAAW,kBAAI,EAAKR,cAAe,IAAM,KAClE,EAAKhC,SAAS,CAACrB,QAAQ,K,EAG3B+B,aAAe,WAAO,IACZhC,EAAY,EAAKvC,MAAjBuC,QACF+D,EAAalC,KAAKC,MAAM,EAAKJ,MAAMsC,aACnCD,IAAe/D,GACf,EAAKsB,SAAS,CAACtB,QAAS+D,K,EAIhCE,OAAS,WACD,EAAKvC,MAAMzB,OACX,EAAK2B,YAEL,EAAKgC,c,EAIbM,eAAiB,SAACC,GACd,EAAK7C,SAAS,CAACpB,OAAQiE,IAAI,WACvB,EAAKzC,MAAMxB,OAAS,EAAKzC,MAAMyC,OAAS,Q,EAIhDkC,eAAiB,SAACgC,GACdA,EAAMC,iBACN,IAAIC,EAAa9F,SAAS+F,eAAe,eAAeC,YAExD,EAAK9C,MAAMsC,YAAc,EAAKtC,MAAMtC,SAAWgF,EAAMK,QAAUH,EAC/D,EAAKpC,YAAYwC,YAAe,SAAAC,GAC5B,EAAKjD,MAAMsC,YAAc,EAAKtC,MAAMtC,SAAWuF,EAAEF,QAAUH,GAE/D9F,SAASI,KAAKgG,UAAY,WACtB,EAAK1C,YAAYwC,YAAc,KAC/BlG,SAASI,KAAKgG,UAAY,O,EAIlCvC,WAAa,WACT,EAAKX,MAAMmC,QACX,EAAKgB,WAAW,I,EAGpBA,WAAa,WAAe,IAAdC,EAAa,uDAAN,EACjB,EAAKpD,MAAMsC,YAAc,EACrB,EAAKvG,MAAM0C,KACX,EAAKyB,aAEL,EAAKgC,aACL,EAAKtC,SAAS,CAACrB,QAAQ,IACvB,EAAKO,MAAMqE,WAAWC,K,EAI9BC,WAAa,WACT,IAAIC,EAAyC,OAAhC,EAAKxE,MAAMyE,UAAU5D,OAAkB,OAAS,OAC7DvD,EAAa,EAAK0C,MAAMC,IAAK,EAAKD,MAAMyE,UAAUjH,KAAOgH,I,EAG7DE,eAAiB,SAACf,GACd,EAAK7C,SAAS,CAAClB,OAAQ+D,IAAI,WACnBA,IAAM,EAAK1G,MAAMwC,QACjBU,OAAO6C,sBAAsB,EAAKlB,sB,kEAnJ1C6C,KAAKzD,MAAQlD,SAAS+F,eAAe,YACrCY,KAAKjD,YAAc1D,SAAS+F,eAAe,eAC3CY,KAAK5B,gBAAiB,EAEtB4B,KAAKvC,OAASpE,SAAS+F,eAAe,eACtC,IAAIa,EAAY5G,SAAS+F,eAAe,mBACxCY,KAAKvC,OAAOC,MAAQuC,EAAUC,YAC9BF,KAAKvC,OAAOG,OAASqC,EAAUE,aAC/BH,KAAKnC,IAAMmC,KAAKvC,OAAO2C,WAAW,MAClCJ,KAAKnC,IAAIwC,UAAY,2B,yCAGNC,EAAWC,EAAWC,GACjCR,KAAK3E,MAAMC,MAAQgF,EAAUhF,KAC7B0E,KAAK5E,c,+BA0IH,IAAD,SACqF4E,KAAK1H,MAAvFwC,EADH,EACGA,OAAQb,EADX,EACWA,SAAUY,EADrB,EACqBA,QAASE,EAD9B,EAC8BA,OAAQH,EADtC,EACsCA,YAAaM,EADnD,EACmDA,eAAgBC,EADnE,EACmEA,cAClEsF,EACF,yBAAKC,UAAWC,IAAMC,QAClB,yBAAKF,UAAW,CAACC,IAAME,KAAM,YAAYC,KAAK,MAA9C,6BACWd,KAAK3E,MAAMyE,UAAUjH,KAArB,UAA+BmH,KAAK3E,MAAMyE,UAAUjH,KAApD,cAA8DmH,KAAK3E,MAAMyE,UAAUiB,QAAW,UAEzG,yBAAKL,UAAWC,IAAMpI,QAClB,kBAACyI,EAAA,EAAD,CAAsBN,UAAU,OAAOO,QAAS,kBAAI,EAAKvB,YAAY,MACrE,kBAACwB,EAAA,EAAD,CAAqBR,UAAU,OAAOO,QAAS,kBAAI,EAAKvB,WAAW,QAIzEyB,EACF,uBAAMF,QAAS,SAACzB,GAAmB,gBAAVA,EAAE4B,KAAuB,EAAKjF,SAAS,CAACjB,gBAAgB,MAC7E,sBAAMmG,KAAN,CAAWD,IAAI,cAAcE,UAAW1G,EAAaqG,QAASjB,KAAKJ,YAAnE,gBAGA,sBAAMyB,KAAN,CAAWD,IAAI,WACX,0CACM,uBAAQG,gBAAgB,SAAIC,kBAAkB,SACtCC,SAAU,SAACzC,GAAD,OAAK,EAAK7C,SAAS,CAACnB,KAAMgE,SAGtD,sBAAMqC,KAAN,CAAWD,IAAI,aACX,0CACM,uBAAQG,gBAAgB,SAAIC,kBAAkB,SACtCC,SAAUzB,KAAKD,oBAKnC2B,EACF,yBAAKhB,UAAWC,IAAMgB,WAClB,uBAAQjB,UAAWC,IAAMiB,OAAQC,UAAQ,EAACC,MAAO/G,EAAQ0G,SAAUzB,KAAKjB,kBAIhF,OACI,yBAAK2B,UAAWC,IAAMoB,cAClB,uBAASC,QAASvB,EAAcwB,UAAU,aAChCC,gBAAiB,SAAClD,GAAD,OAAK,EAAK7C,SAAS,CAAChB,cAAe6D,MAC1D,uBAAO0B,UAAWC,IAAMwB,UAAWxB,MAAO,CAACyB,UAAWjH,EAAgB,kBAAoB,SACtF,2BAAOkH,GAAG,WAAW/G,IAAKV,IAC1B,yBAAK8F,UAAWC,IAAM2B,MAClB,uBAAQC,MAAM,SAAStB,QAASjB,KAAKlB,OAAQ0D,KAAK,QAAQlB,UAAW1G,EAC7D6H,KAAM3H,EAAS,kBAAC4H,EAAA,EAAD,MAAyB,kBAACC,EAAA,EAAD,SAEpD,yBAAKjC,UAAWC,IAAM2B,MAAOxI,EAAYe,EAAS,WAAlD,IAA+Df,EAAYG,EAAU,YACrF,yBAAKyG,UAAWC,IAAM5D,aAClB,yBAAKsF,GAAG,cAAc3B,UAAWC,IAAM9F,SACnC,yBAAKwH,GAAG,qBAAqB3B,UAAWC,IAAMiC,SAC1CjC,MAAO,CAACjD,MAAOhB,KAAKmG,MAAM,IAAIhI,EAAQZ,EAAU,GAAG,MAAO,OAItE,yBAAKyG,UAAWC,IAAM2B,MAClB,uBAASL,UAAU,SAASD,QAASN,GACjC,kBAACoB,EAAA,EAAD,CAAsBnC,MAAO,CAACoC,OAAQ,eAG9C,yBAAKrC,UAAWC,IAAM2B,MAClB,uBAAUU,QAAS7B,EAAS8B,QAAS/H,EAC7BgH,gBAAiB,SAAClD,GAAD,OAAK,EAAK7C,SAAS,CAACjB,eAAgB8D,MACzD,uBAAQwD,KAAK,SAAb,oBAKhB,yBAAK9B,UAAWC,IAAMuC,iBAClB,yBAAKb,GAAG,kBAAkB1B,MAAO,CAAC/C,OAAQ,OAAQF,MAAO,SACrD,4BAAQ2E,GAAG,uB,GA7OOc,a,iBCU3BC,EAhBI,WACf,MAAO,CACHC,eAAgB,EAChBC,gBAAiB,GACjBC,kBAAkB,EAClB1I,QAAS,EACT2I,SAAU,GACVC,gBAAiB,CAAC,KAAM,KAAM,KAAM,OACpCC,iBAAiB,EACjBC,UAAW,SAAUC,EAAOC,GACxB,MAAM,SAAN,OAAWD,EAAX,WAEJA,MAAO,I,2CCRME,E,4MACjBxL,MAAQ,CACJyL,QAAS,EAAK1I,MAAM0I,SAAW,CAAC,OAAQ,MAAO,a,iEAGhCzD,EAAWC,EAAWC,GACjCR,KAAK3E,MAAM0I,UAAYzD,EAAUyD,SACjC/D,KAAK7D,SAAS,CAAC4H,QAAS/D,KAAK3E,MAAM0I,SAAW,CAAC,OAAQ,MAAO,gB,+BAI5D,IACEA,EAAY/D,KAAK1H,MAAjByL,QACR,OACI,6BACKA,EAAQC,QAAQ,SAAW,GAAK,uBAASC,MAAM,gBAC5C,kBAACC,EAAA,EAAD,CAAoBxD,UAAU,OAAOO,QAASjB,KAAK3E,MAAMyD,UAE5DiF,EAAQC,QAAQ,QAAU,GAAK,uBAASC,MAAM,4BAC3C,kBAACE,EAAA,EAAD,CAAoBzD,UAAU,OAAOO,QAASjB,KAAK3E,MAAM+I,aAE5DL,EAAQC,QAAQ,aAAe,GAAK,uBAASC,MAAM,gBAChD,kBAACI,EAAA,EAAD,CAAuB3D,UAAU,OAAOO,QAASjB,KAAK3E,MAAMuE,mB,GAtBvCuD,a,iBCOnCmB,E,4MACFhM,MAAQ,CACJiM,SAAS,EACTC,UAAW,GACXC,QAAS,GACTrM,KAAM,MACNmE,MAAO,GACPmI,WAAYtB,IACZtD,UAAW,I,EASf6E,SAAW,SAACF,EAASrM,GACjB,EAAK+D,SAAS,CACVsI,QAASA,EACTrM,KAAMA,EACNsM,WAAW,2BAAK,EAAKpM,MAAMoM,YAAjB,IAA6B7J,QAAS,MACjD,WAAO,EAAK+J,oBACf,EAAKvJ,MAAMwJ,Y,EAGfC,aAAe,SAACC,GACZ,EAAK1J,MAAM2J,QAAQD,I,EAGvBE,cAAgB,SAACF,GACb,EAAK1J,MAAM6J,SAASH,I,EAGxBjG,OAAS,SAACiG,GACN,EAAK1J,MAAMyD,OAAOiG,EAAO1C,GAAI0C,I,EAGjCX,UAAY,SAACW,GACT,EAAK1J,MAAM+I,UAAUW,I,EAGzBnF,WAAa,SAACmF,GACV,EAAK1J,MAAMuE,WAAWmF,EAAO1C,GAAI0C,I,EAGrCH,eAAiB,WAAO,IAAD,EACmB,EAAKtM,MAAnCoM,EADW,EACXA,WAAYD,EADD,EACCA,QAASrM,EADV,EACUA,KACzB+M,EAAQT,EAAWlB,SACnB4B,EAAOV,EAAW7J,QACtB,EAAKsB,SAAS,CAACoI,SAAS,IACxBc,IAAMC,IAAI,UAAW,CAACC,OAAQ,CAACrJ,OAAQ9D,EAAMqM,QAASA,EAASU,MAAOA,EAAOC,KAAMA,KAC9EI,MAAK,SAAAC,GACF,EAAKtJ,SAAS,CAACoI,SAAS,IACpBkB,EAAI7M,KAAK8M,QACT,EAAKvJ,SAAS,CACVqI,UAAWiB,EAAI7M,KAAK+M,MACpBjB,WAAW,2BAAKA,GAAN,IAAkBd,MAAO6B,EAAI7M,KAAKgL,UAGhDgC,EAAA,EAAaC,MAAM,CAACC,QAAS,oDAAa7L,SAAU,W,iEAjDjDqG,EAAWC,EAAWC,GACjCR,KAAK3E,MAAMpD,cAAgBqI,EAAUrI,aAAe+H,KAAK3E,MAAMpD,aAC/D+H,KAAK2E,SAAS3E,KAAK3E,MAAMpD,YAAYC,UAAW8H,KAAK3E,MAAMpD,YAAYE,c,+BAoDrE,IAAD,OACCoM,EAAUvE,KAAK3E,MAAMkJ,SAAWvE,KAAK1H,MAAMiM,QAC3CwB,EAAU,CACZ,CAAC9B,MAAO,qBAAO+B,UAAW,OAAQ5E,IAAK,QACvC,CAAC6C,MAAO,eAAM+B,UAAW,WAAY5E,IAAK,WAAY1D,MAAO,GAAIuI,OAAQ,SAACC,GAAD,OAAW,6BAAMpM,EAAYoM,MACtG,CAACjC,MAAO,eAAM+B,UAAW,SAAU5E,IAAK,SACpC6E,OAAQ,SAACC,EAAMnB,GAAP,OACJ,0BAAMrE,UAAU,OAAOO,QAAS,kBAAI,EAAKgE,cAAcF,KAClDA,EAAOhE,UAEpB,CAACkD,MAAO,eAAM+B,UAAW,QAAS5E,IAAK,QACnC6E,OAAQ,SAACC,EAAMnB,GAAP,OACJ,0BAAMrE,UAAU,OAAOO,QAAS,kBAAI,EAAK6D,aAAaC,KAAtD,SACMA,EAAOoB,MADb,YAGR,CAAClC,MAAO,eAAM+B,UAAW,KAAM5E,IAAK,SAAU1D,MAAO,IACjDuI,OAAQ,SAACC,EAAMnB,GAAP,OAAmB,kBAAC,EAAD,CAAajG,OAAQ,WAAK,EAAKA,OAAOiG,IACzBX,UAAW,WAAK,EAAKA,UAAUW,IAC/BnF,WAAY,kBAAI,EAAKA,WAAWmF,SAGhF,OACI,yBAAKrE,UAAWC,IAAMyF,OAClB,uBAAOC,WAAYrG,KAAK1H,MAAMkM,UACvBD,QAASA,EACTG,WAAY1E,KAAK1H,MAAMoM,WACvBjD,SAAU,SAACiD,GACP,EAAKvI,SAAS,CACVuI,WAAW,2BACJ,EAAKpM,MAAMoM,YADR,IAEN7J,QAAS6J,EAAW7J,QACpB2I,SAAUkB,EAAWlB,aAE1B,WAAO,EAAKoB,qBAEnB0B,OAAQ,CAACC,EAAE/K,OAAOgL,YAAY,KAC9BhE,KAAK,QACLuD,QAASA,EAASU,OAAO,Y,GAtGxBtD,aA4GTnH,eA9GS,SAAA1D,GAAU,OAAOA,IA8G1B0D,CAAyBsI,G,+CCpHnBoC,G,4MACjBpO,MAAQ,CACJiM,SAAS,EACToC,UAAU,G,iEAGKrG,EAAWC,EAAWC,GACjCR,KAAK3E,MAAMC,MAAQgF,EAAUhF,KAC7B0E,KAAK7D,SAAS,CAACoI,SAAS,EAAMoC,UAAU,M,+BAItC,IAAD,SACyB3G,KAAK1H,MAA3BiM,EADH,EACGA,QAASoC,EADZ,EACYA,SACjB,OACI,yBAAKhG,MAAO,CAACiG,UAAW5G,KAAK3E,MAAMuL,WAAa,EAAGC,SAAU7G,KAAK3E,MAAMyL,UAAY,IAChF,wBAAMnG,MAAO,CAACjD,MAAO,OAAQkJ,UAAW5G,KAAK3E,MAAMuL,WAAa,GAAIG,SAAUxC,IAC5D,IAAboC,GACG,yBAAKrL,IAAK0E,KAAK3E,MAAMC,IAAK0L,IAAKhH,KAAK3E,MAAM2L,KAAO,OAC5CrG,MAAO,CAACsG,QAAS1C,EAAU,IAAM,IAAK7G,MAAO,QAC7CwJ,OAAQ,WAAK,EAAK/K,SAAS,CAACoI,SAAS,KACrC4C,QAAS,kBAAI,EAAKhL,SAAS,CAACwK,UAAU,EAAMpC,SAAS,KACrD6C,YAAa,SAAA5H,GAAC,OAAEA,EAAEN,qBAEb,IAAbyH,GAAqB,mC,GAxBFxD,aCQnBkE,G,4MACjB/O,MAAQ,CACJiM,SAAS,EACTG,WAAYtB,IACZoB,UAAW,GACX8C,UAAW,I,EASfxI,OAAS,SAACiG,GACN,EAAK1J,MAAMyD,OAAOiG,EAAO1C,GAAI0C,I,EAGjCX,UAAY,SAACW,GACT,EAAK1J,MAAM+I,UAAUW,I,EAGzBwC,WAAa,WACT,EAAKlM,MAAMkM,WAAW,EAAKjP,MAAMkM,Y,EAGrC5E,WAAa,SAACmF,GACV,EAAK1J,MAAMuE,WAAWmF,EAAO1C,GAAI0C,I,EAGrCE,cAAgB,SAACF,GACb,EAAK1J,MAAM6J,SAASH,I,EAGxByC,iBAAmB,WACf,EAAKrL,SAAS,CAACoI,SAAS,EAAM+C,UAAW,KACzCjC,IAAMC,IAAI,cAAe,CAACC,OAAQ,CAAClD,GAAI,EAAKhH,MAAM8K,MAAMsB,QAASvL,OAAQ,EAAKb,MAAM8K,MAAMjK,UACrFsJ,MAAK,SAAAC,GACF,EAAKtJ,SAAS,CAACoI,SAAS,IACpBkB,EAAI7M,KAAK8M,QACT,EAAKvJ,SAAS,CACVqI,UAAWiB,EAAI7M,KAAK+M,MACpB2B,UAAW7B,EAAI7M,KAAKuN,QAGxBP,EAAA,EAAaC,MAAM,CAACC,QAAS,oDAAa7L,SAAU,W,iEArCjDqG,EAAWC,EAAWC,GACjCR,KAAK3E,MAAM8K,MAAMsB,UAAYnH,EAAU6F,MAAMsB,SAC7CzH,KAAKwH,qB,+BAwCH,IAAD,OACCjD,EAAUvE,KAAK3E,MAAMkJ,SAAWvE,KAAK1H,MAAMiM,QACzC+C,EAActH,KAAK1H,MAAnBgP,UACFvB,EAAU,CACZ,CAAC9B,MAAO,qBAAO+B,UAAW,OAAQ5E,IAAK,QACvC,CAAC6C,MAAO,eAAM+B,UAAW,WAAY5E,IAAK,WAAY1D,MAAO,GAAIuI,OAAQ,SAACC,GAAD,OAAW,6BAAMpM,EAAYoM,MACtG,CAACjC,MAAO,eAAM+B,UAAW,SAAU5E,IAAK,SACpC6E,OAAQ,SAACC,EAAMnB,GAAP,OACJ,0BAAMrE,UAAU,OAAOO,QAAS,kBAAI,EAAKgE,cAAcF,KAAUA,EAAOhE,UAEhF,CAACkD,MAAO,eAAM+B,UAAW,KAAM5E,IAAK,SAAU1D,MAAO,IACjDuI,OAAQ,SAACC,EAAMnB,GAAP,OAAmB,kBAAC,EAAD,CAAajG,OAAQ,WAAK,EAAKA,OAAOiG,IACzBX,UAAW,WAAK,EAAKA,UAAUW,IAC/BnF,WAAY,kBAAI,EAAKA,WAAWmF,SAIhF,OACI,yBAAKrE,UAAWC,IAAMwF,OACjBnG,KAAK3E,MAAM8K,MAAMsB,SAAW,yBAAK/G,UAAWC,IAAME,MAC/C,kBAAC,GAAD,CAAY+F,UAAW,IAAKtL,IAAKgM,EAAUI,MAC3C,yBAAKhH,UAAWC,IAAMgH,WAAtB,SAAmCL,EAAUzO,KAA7C,UACA,8CAAUyO,EAAUvG,QACpB,8CAAUuG,EAAUM,SACpB,0DAAY1N,IAAOoN,EAAUO,aAAaC,OAAO,eACjD,uBAAS9F,QACL,uBAASiC,MAAM,sEACX,kBAACE,EAAA,EAAD,CAAoBzD,UAAU,OAAOO,QAASjB,KAAKuH,eAEvD,kBAACQ,GAAA,EAAD,CAAcrH,UAAU,WAGhC,yBAAKA,UAAWC,IAAMyF,OAClB,uBAAOC,WAAYrG,KAAK1H,MAAMkM,UACvBD,QAASA,EACTG,WAAY1E,KAAK1H,MAAMoM,WACvBjD,SAAU,SAACiD,GACP,EAAKvI,SAAS,CACVuI,WAAW,2BACJ,EAAKpM,MAAMoM,YADR,IAEN7J,QAAS6J,EAAW7J,QACpB2I,SAAUkB,EAAWlB,cAIjC8C,OAAQ,CAACC,EAAE/K,OAAOgL,YAAY,KAC9BhE,KAAK,QACLuD,QAASA,EAASU,OAAO,a,GAjGbtD,aCD/B6E,G,IAAAA,QAEaC,G,4MACjB3P,MAAQ,CACJiM,SAAS,EACTG,WAAYtB,IACZ8E,QAAS,GACTC,UAAW,GACXC,WAAY,I,EAUhBtJ,OAAS,SAACiG,GACN,EAAK1J,MAAMyD,OAAOiG,EAAO1C,GAAI0C,I,EAGjCX,UAAY,SAACW,GACT,EAAK1J,MAAM+I,UAAUW,I,EAGzBnF,WAAa,SAACmF,GACV,EAAK1J,MAAMuE,WAAWmF,EAAO1C,GAAI0C,I,EAGrCD,aAAe,SAACC,GACf,EAAK1J,MAAM2J,QAAQD,I,EAGpBsD,kBAAoB,WAChB,EAAKlM,SAAS,CAACoI,SAAS,EAAM6D,WAAY,KAC1C/C,IAAMC,IAAI,eAAgB,CAACC,OAAQ,CAAClD,GAAI,EAAKhH,MAAM0F,OAAOuH,SAAUpM,OAAQ,EAAKb,MAAM0F,OAAO7E,UACzFsJ,MAAK,SAAAC,GACF,EAAKtJ,SAAS,CAACoI,SAAS,IACpBkB,EAAI7M,KAAK8M,QACT,EAAKvJ,SAAS,CACb+L,QAASzC,EAAI7M,KAAK+M,MAClByC,WAAY3C,EAAI7M,KAAKmI,SAGtB6E,EAAA,EAAaC,MAAM,CAACC,QAAS,4EAAiB7L,SAAU,W,EAKxEsO,iBAAmB,WAAO,IACjB7D,EAAe,EAAKpM,MAApBoM,WACJS,EAAQT,EAAWlB,SACnB4B,EAAOV,EAAW7J,QACnB,EAAKsB,SAAS,CAACoI,SAAS,IACxBc,IAAMC,IAAI,eAAgB,CAACC,OAAQ,CAAClD,GAAI,EAAKhH,MAAM0F,OAAOuH,SAAUnD,MAAOA,EAAOC,KAAMA,EAAMlJ,OAAQ,EAAKb,MAAM0F,OAAO7E,UACnHsJ,MAAK,SAAAC,GACF,EAAKtJ,SAAS,CAACoI,SAAS,IACpBkB,EAAI7M,KAAK8M,QACT,EAAKvJ,SAAS,CACbgM,UAAW1C,EAAI7M,KAAK4P,OACpB9D,WAAW,2BAAKA,GAAN,IAAkBd,MAAO6B,EAAI7M,KAAK6P,cAG7C7C,EAAA,EAAaC,MAAM,CAACC,QAAS,4EAAiB7L,SAAU,W,iEArDrDqG,EAAWC,EAAWC,GACjCR,KAAK3E,MAAM0F,OAAOuH,WAAahI,EAAUS,OAAOuH,WAChDtI,KAAKqI,oBACLrI,KAAKuI,sB,+BAuDH,IAAD,OACChE,EAAUvE,KAAK3E,MAAMkJ,SAAWvE,KAAK1H,MAAMiM,QACzC6D,EAAepI,KAAK1H,MAApB8P,WACFM,EAAe,CACjB,CAACzE,MAAO,qBAAO+B,UAAW,OAAQ5E,IAAK,QACvC,CAAC6C,MAAO,eAAM+B,UAAW,WAAY5E,IAAK,WAAY1D,MAAO,GAAIuI,OAAQ,SAACC,GAAD,OAAW,6BAAMpM,EAAYoM,MACtG,CAACjC,MAAO,eAAM+B,UAAW,QAAS5E,IAAK,QACtC6E,OAAQ,SAACC,EAAMnB,GAAP,OACP,0BAAMrE,UAAU,OAAOO,QAAS,kBAAI,EAAK6D,aAAaC,KAAtD,SAAiEA,EAAOoB,MAAxE,YAEF,CAAClC,MAAO,eAAM+B,UAAW,KAAM5E,IAAK,SAAU1D,MAAO,IACjDuI,OAAQ,SAACC,EAAMnB,GAAP,OAAmB,kBAAC,EAAD,CAAajG,OAAQ,WAAK,EAAKA,OAAOiG,IACzBX,UAAW,WAAK,EAAKA,UAAUW,IAC/BnF,WAAY,kBAAI,EAAKA,WAAWmF,SAI1E4D,EAAe,CACjB,CAAC1E,MAAO,qBAAO+B,UAAW,QAAS5E,IAAK,QACvC6E,OAAQ,SAACC,EAAMnB,GAAP,OACP,0BAAMrE,UAAU,OAAOO,QAAS,kBAAI,EAAK6D,aAAaC,KAAtD,SAAiEmB,EAAjE,YAEF,CAACjC,MAAO,2BAAQ+B,UAAW,cAAe5E,IAAK,cAAe6E,OAAQ,SAACC,GAAD,OAAWhM,IAAOgM,GAAM4B,OAAO,gBACrG,CAAC7D,MAAO,eAAM+B,UAAW,UAAW5E,IAAK,WACzC,CAAC6C,MAAO,2BAAQ+B,UAAW,OAAQ5E,IAAK,SAG5C,OACI,yBAAKV,UAAWC,IAAMwF,OACjBnG,KAAK3E,MAAM0F,OAAOuH,UAAY,yBAAK5H,UAAWC,IAAME,MACpD,kBAAC,GAAD,CAAY+F,UAAW,IAAKtL,IAAK8M,EAAWV,MACzC,yBAAKhH,UAAWC,IAAMgH,WAAYS,EAAWvP,OAEjD,uBAAMT,KAAK,OAAOwQ,YAAY,OAAOpG,KAAK,SAC7C,kBAACwF,GAAD,CAASa,IAAI,QAAQzH,IAAI,SACvB,uBAAOiF,WAAYrG,KAAK1H,MAAM4P,QACpB3D,QAASA,EACTG,YAAY,EACZ4B,OAAQ,CAACC,EAAE/K,OAAOgL,YAAY,KAC9BhE,KAAK,QACLuD,QAAS2C,EAAcjC,OAAO,QAE1C,kBAACuB,GAAD,CAASa,IAAI,eAAKzH,IAAI,SACnB,uBAAOiF,WAAYrG,KAAK1H,MAAM6P,UACrB5D,QAASA,EACTG,WAAY1E,KAAK1H,MAAMoM,WACvBjD,SAAU,SAACiD,GACN,EAAKvI,SAAS,CACVuI,WAAW,2BACJ,EAAKpM,MAAMoM,YADR,IAEN7J,QAAS6J,EAAW7J,QACpB2I,SAAUkB,EAAWlB,aAE1B,WAAO,EAAK+E,uBAEpB/F,KAAK,QACL8D,OAAQ,CAACC,EAAE/K,OAAOgL,YAAY,KAC9BT,QAAS4C,EAAclC,OAAO,mB,GA5HftD,a,wCCJhC6E,G,IAAAA,QAEac,G,4MACjBxQ,MAAQ,CACJiM,SAAS,EACTwE,SAAS,EACTC,SAAU,aACVC,iBAAkB7F,IAClB8F,iBAAkB9F,K,EAStB+F,SAAW,SAACpE,GAAY,IACZiE,EAAa,EAAK1Q,MAAlB0Q,SACR,EAAK3N,MAAMwJ,SAASmE,EAAU,SAAUjE,I,EAG5CjG,OAAS,SAACiG,GACN,EAAK1J,MAAMyD,OAAOiG,EAAO1C,GAAI0C,EAAQ,EAAKzM,MAAM0Q,W,EAGpD5E,UAAY,SAACW,GACT,EAAK1J,MAAM+I,UAAUW,I,EAGzBnF,WAAa,SAACmF,GACV,EAAK1J,MAAMuE,WAAWmF,EAAO1C,GAAI0C,I,EAGrCE,cAAgB,SAACF,GACb,EAAK1J,MAAM6J,SAASH,I,EAGxBqE,YAAc,SAACpK,GACX,EAAK3D,MAAM+N,YAAYpK,I,EAG3BqK,iBAAmB,SAACtE,EAAQuE,GAAS,IACzBN,EAAa,EAAK1Q,MAAlB0Q,SACR,EAAK3N,MAAMwJ,SAASmE,EAAU,OAAQjE,EAAQuE,I,8GA9B/BhJ,EAAWC,EAAWC,M,+BAiC/B,IAAD,SACsDR,KAAK3E,MAAxDkO,EADH,EACGA,WAAYC,EADf,EACeA,WAAYC,EAD3B,EAC2BA,YAAa3J,EADxC,EACwCA,UADxC,EAEyBE,KAAK1H,MAA3ByQ,EAFH,EAEGA,QAASC,EAFZ,EAEYA,SACXzE,EAAUvE,KAAK3E,MAAMkJ,SAAWvE,KAAK1H,MAAMiM,QAC3CwB,EAAU,CACZ,CAAC9B,MAAO,GAAI+B,UAAW,OAAQ5E,IAAK,SAAU1D,MAAO,GACjDuI,OAAQ,SAACC,EAAMnB,GAAP,OACJ,6BACKgE,GACG,yBAAKrI,UAAWC,IAAM+I,QAClB,kBAAC,GAAD,CAAaC,QAAS,SAACL,GAAD,OAAO,EAAKD,iBAAiB,CAACtE,GAASuE,MAC7D,kBAACM,GAAA,EAAD,CAAelJ,UAAU,OAAOO,QAAS,kBAAI,EAAKkI,SAAS,CAACpE,WAKhF,CAACd,MAAO,GAAI+B,UAAW,OAAQ5E,IAAK,UAAW1D,MAAO,GAClDuI,OAAQ,SAACC,EAAMnB,GAAP,OACJ,6BACKiE,IAAaS,GAAe1E,EAAO1C,KAAOvC,EAAUuC,IACrD,kBAACwH,GAAA,EAAD,CAAcC,MAAI,EAACpJ,UAAWC,IAAMoJ,kBAGhD,CAAC9F,MAAO,qBAAO+B,UAAW,OAAQ5E,IAAK,QACvC,CAAC6C,MAAO,eAAM+B,UAAW,WAAY5E,IAAK,WAAY1D,MAAO,GAAIuI,OAAQ,SAACC,GAAD,OAAW,6BAAMpM,EAAYoM,MACtG,CAACjC,MAAO,eAAM+B,UAAW,SAAU5E,IAAK,SACpC6E,OAAQ,SAACC,EAAMnB,GAAP,OACJ,0BAAMrE,UAAU,OAAOO,QAAS,kBAAI,EAAKgE,cAAcF,KAAUA,EAAOhE,UAEhF,CAACkD,MAAO,eAAM+B,UAAW,KAAM5E,IAAK,SAAU1D,MAAO,IACjDuI,OAAQ,SAACC,EAAMnB,GAAP,OACJ,kBAAC,EAAD,CAAahB,QAAsB,eAAbiF,EAA4B,CAAC,OAAQ,YAAc,CAAC,OAAQ,MAAO,YAC5ElK,OAAQ,WAAK,EAAKA,OAAOiG,IACzBX,UAAW,WAAK,EAAKA,UAAUW,IAC/BnF,WAAY,kBAAI,EAAKA,WAAWmF,SAIzD,OACI,yBAAKrE,UAAWC,IAAMqJ,UAClB,yBAAKtJ,UAAWC,IAAMsJ,QAClB,yBAAKvJ,UAAWC,IAAM2B,MAClB,yBAAK5B,UAAWC,IAAMuF,MAAtB,gBACA,uBAAQ1D,KAAK,SAASf,SAAU,SAACzC,GAAD,OAAK,EAAK7C,SAAS,CAAC4M,QAAS/J,QAEjE,yBAAK0B,UAAWC,IAAM2B,MAClB,yBAAK5B,UAAWC,IAAMuF,MAAtB,4BACA,uBAAQ1D,KAAK,SAASf,SAAU,SAACzC,GAAD,OAAK,EAAKoK,YAAYpK,EAAI,OAAS,aAG3E,uBAAM5G,KAAK,OAAOwQ,YAAY,OAAOpG,KAAK,QAAQ0H,UAAWlK,KAAK1H,MAAM0Q,SAClEvH,SAAU,SAACzC,GAAD,OAAK,EAAK7C,SAAS,CAAC6M,SAAUhK,MAC1C,kBAAC,GAAD,CAAS6J,IAAI,eAAKzH,IAAI,cAClB,yBAAKV,UAAWC,IAAMyF,OAClB,uBAAOC,WAAYkD,EACZhF,QAASA,EACT4F,aAAc,SAACpF,GACX,OAAQiE,IAAaS,GAAe1E,EAAO1C,KAAOvC,EAAUuC,GAAM,eAAiB,IAEvFqC,WAAY1E,KAAK1H,MAAM2Q,iBACvBxH,SAAU,SAACiD,GACP,EAAKvI,SAAS,CACV8M,iBAAiB,2BACV,EAAK3Q,MAAM2Q,kBADF,IAEZpO,QAAS6J,EAAW7J,QACpB2I,SAAUkB,EAAWlB,cAIjC8C,OAAQ,CAACC,EAAE/K,OAAOgL,YAAY,KAC9BhE,KAAK,QACLuD,QAASA,EAASU,OAAO,SAGxC,kBAAC,GAAD,CAASoC,IAAI,2BAAOzH,IAAI,cACpB,yBAAKV,UAAWC,IAAMyF,OAClB,uBAAOC,WAAYmD,EACZjF,QAASA,EACT4F,aAAc,SAACpF,GACX,OAAQiE,IAAaS,GAAe1E,EAAO1C,KAAOvC,EAAUuC,GAAM,eAAiB,IAEvFqC,WAAY1E,KAAK1H,MAAM4Q,iBACvBzH,SAAU,SAACiD,GACP,EAAKvI,SAAS,CACV+M,iBAAiB,2BACV,EAAK5Q,MAAM4Q,kBADF,IAEZrO,QAAS6J,EAAW7J,QACpB2I,SAAUkB,EAAWlB,cAIjC8C,OAAQ,CAACC,EAAE/K,OAAOgL,YAAY,KAC9BhE,KAAK,QACLuD,QAASA,EAASU,OAAO,e,GA1ItBtD,aAmJhCiH,G,4MACF9R,MAAQ,G,uDACC,IAAD,OACJ,OACI,6BACI,kBAAC+R,GAAA,EAAD,CAAiBpJ,QAAS,kBAAI,EAAK5F,MAAMsO,SAAS,IAAIjJ,UAAU,SAChE,kBAAC4J,GAAA,EAAD,CAAmBrJ,QAAS,kBAAI,EAAK5F,MAAMsO,QAAQ,IAAIjJ,UAAW,CAACC,IAAM4J,MAAO,QAAQzJ,KAAK,Y,GANnFqC,aClJlB6E,G,IAAAA,QAEawC,G,4MACjBlS,MAAQ,CACJuQ,IAAK,QACLtE,SAAS,EACTkG,SAAU,GACV3K,UAAW,GACXqG,MAAO,GACPpF,OAAQ,GACRyI,WAAY,GACZD,WAAY,GACZmB,gBAAiB,aACjBC,QAAS,aACTC,YAAa,I,EAUjBC,eAAiB,SAAC7B,EAAUzQ,EAAQuS,GAAkC,IAAzBxB,EAAwB,uDAApB,EAAGyB,EAAiB,wDAAN,EACvDC,EAAOC,KAAKC,MAAM1P,OAAO2P,aAAaC,QAAQpC,KAAc,GAC5DqC,EAAS,GA+Bb,GA9BAP,EAAQQ,SAAQ,SAAAvG,GACZ,IAAIwG,GAAS,EAMb,OALAP,EAAKM,SAAQ,SAAChJ,EAAMtE,GACZsE,EAAKD,KAAO0C,EAAO1C,KACnBkJ,EAAQvN,MAGRzF,GACJ,IAAK,SACGgT,GAAS,GAAGP,EAAKQ,OAAOD,EAAO,GACnC,MACJ,IAAK,OACc,IAAXA,GAAcP,EAAKS,KAAK1G,GAC5B,MACJ,IAAK,QACGwG,GAAS,GACTP,EAAKQ,OAAOD,EAAO,GAEvBP,EAAKQ,OAAO,EAAG,EAAGzG,GAClB,MACJ,IAAK,OACGwG,GAAS,IACTP,EAAKQ,OAAOD,EAAO,GACnBP,EAAKQ,OAAOD,EAAQjC,EAAK,EAAGvE,QAOxCgG,GAAa,GAAKC,EAAKtQ,OAAS,EAChC,KAAMsQ,EAAKtQ,OAASqQ,GAChBC,EAAKU,MAGblQ,OAAO2P,aAAaQ,QAAQ3C,EAAUiC,KAAKW,UAAUZ,IACrDK,EAAOrC,GAAYgC,EACnB,EAAK7O,SAAL,eAAkBkP,K,EAGtBrG,QAAU,SAACmB,GACP,EAAKhK,SAAS,CAAC0M,IAAK,QAAS1C,MAAOA,K,EAGxCjB,SAAW,SAACnE,GACR,EAAK5E,SAAS,CAAC0M,IAAK,SAAU9H,OAAQA,K,EAG1CjC,OAAS,SAACuD,EAAI0C,GAAmC,IAA3BiE,EAA0B,uDAAjB,aAC3B,EAAK6B,eAAe,aAAc,QAAS,CAAC9F,GAAS,EAAG,IACxD,EAAK5I,SAAS,CAACuO,gBAAiB1B,IAChC,EAAK6C,UAAUxJ,EAAI0C,I,EAGvBX,UAAY,SAACW,GAAY,IACbwE,EAAe,EAAKjR,MAApBiR,WACJgC,GAAS,EACbhC,EAAW+B,SAAQ,SAAChJ,EAAMtE,GAClBsE,EAAKD,KAAO0C,EAAO1C,KAAIkJ,EAAQvN,MAEnCuN,GAAS,EACT3F,EAAA,EAAakG,QAAQ,CAAChG,QAAS,6CAAW7L,SAAU,KAEpD,EAAK4Q,eAAe,aAAc,MAAO,CAAC9F,IAC1Ca,EAAA,EAAaF,QAAQ,CAACI,QAAS,2BAAQ7L,SAAU,M,EAIzDsN,WAAa,SAACuD,GACV,EAAKD,eAAe,aAAc,MAAOC,GACzClF,EAAA,EAAaF,QAAQ,CAACI,QAAS,2BAAQ7L,SAAU,K,EAGrDyF,WAAa,WAAa,IAAZC,EAAW,uDAAN,EACf,GAA2B,SAAvB,EAAKrH,MAAMqS,SAA+B,IAAThL,EAAW,CAC5C,IAAIqL,EAAOC,KAAKC,MAAM1P,OAAO2P,aAAaC,QAAQ,EAAK9S,MAAMoS,mBAAqB,GAC9Ea,GAAS,EAIb,GAHAP,EAAKM,SAAQ,SAAChJ,EAAMtE,GACZsE,EAAKD,KAAO,EAAK/J,MAAMwH,UAAUuC,KAAIkJ,EAAQvN,MAEjDuN,GAAS,EAAE,EACXA,GAAS5L,GAAQ,EAAI,GAAK,IACbqL,EAAKtQ,SAAQ6Q,EAAQ,GAC9BA,EAAQ,IAAGA,EAAQ7O,KAAKqP,IAAIf,EAAKtQ,OAAS,EAAG,IACjD,IAAIqK,EAASiG,EAAKO,GACdxG,GAAQ,EAAK8G,UAAU9G,EAAO1C,GAAI0C,M,EAKlD8G,UAAY,SAACxJ,EAAI0C,GACb,EAAK5I,SAAS,CAACoI,SAAS,EAAMzE,UAAWiF,EAAQ0F,SAAU,KAC3DpF,IAAMC,IAAI,YAAa,CACnBC,OAAQ,CAAClD,GAAIA,EAAInG,OAAQ6I,EAAO7I,QAChC8P,aAAc,SACfxG,MAAK,SAAAC,GACJ,EAAKtJ,SAAS,CAACoI,SAAS,IACpBkB,EAAI7M,KAAK4J,KAAO,GAChB,EAAKrG,SAAS,CAACsO,SAAUhF,IAEzBG,EAAA,EAAaC,MAAM,CAACC,QAAS,oDAAa7L,SAAU,W,EAKhEgS,cAAgB,SAAC5J,EAAI0C,GACjB,EAAK5I,SAAS,CAACoI,SAAS,IACxBc,IAAMC,IAAI,YAAa,CACnBC,OAAQ,CAAClD,GAAIA,EAAInG,OAAQ6I,EAAO7I,QAChC8P,aAAc,SACfxG,MAAK,SAAAC,GAEJ,GADA,EAAKtJ,SAAS,CAACoI,SAAS,IACpBkB,EAAI7M,KAAK4J,KAAO,GAAG,CACnB,IAAI3C,EAA2B,OAAlBkF,EAAO7I,OAAkB,OAAS,OAC/CvD,EAAa8M,EAAKV,EAAOlM,KAAKgH,QAE9B+F,EAAA,EAAaC,MAAM,CAACC,QAAS,oDAAa7L,SAAU,W,kEA7H5D+F,KAAK7D,SAAS,CACVqN,WAAYyB,KAAKC,MAAM1P,OAAO2P,aAAaC,QAAQ,gBAAkB,GACrE7B,WAAY0B,KAAKC,MAAM1P,OAAO2P,aAAaC,QAAQ,gBAAkB,O,+BAgInE,IAAD,SAC4EpL,KAAK1H,MAA9EiM,EADH,EACGA,QAASoG,EADZ,EACYA,QAASnB,EADrB,EACqBA,WAAYD,EADjC,EACiCA,WAAYzJ,EAD7C,EAC6CA,UAAW4K,EADxD,EACwDA,gBACvDwB,EACF,kBAAC,EAAD,CAAc5Q,IAAK0E,KAAK1H,MAAMmS,SAAU3K,UAAWA,EAAW6K,QAASA,EACzDjL,WAAYM,KAAKN,aAEnC,OACI,yBAAKgB,UAAWC,IAAMwL,OAClB,uBAAMjC,UAAWlK,KAAK1H,MAAMuQ,IAAKuD,mBAAoBF,EAC7CzK,SAAU,SAACzC,GAAD,OAAK,EAAK7C,SAAS,CAAC0M,IAAK7J,MACvC,kBAAC,GAAD,CAAS6J,IAAI,eAAKzH,IAAI,QAAQiL,aAAW,GACrC,kBAAC,EAAD,CAAW9H,QAASA,EACTM,SAAU,kBAAI,EAAK1I,SAAS,CAAC0M,IAAK,WAClC/J,OAAQkB,KAAKlB,OAAQsF,UAAWpE,KAAKoE,UAAWxE,WAAYI,KAAKiM,cACjEjH,QAAShF,KAAKgF,QAASE,SAAUlF,KAAKkF,YAErD,kBAAC,GAAD,CAAS2D,IAAI,eAAKzH,IAAI,QAAQiL,aAAW,GACrC,kBAAC,GAAD,CAAW9H,QAASA,EACT4B,MAAOnG,KAAK1H,MAAM6N,MAClBrH,OAAQkB,KAAKlB,OAAQsF,UAAWpE,KAAKoE,UAAWxE,WAAYI,KAAKiM,cACjE/G,SAAUlF,KAAKkF,SAAUqC,WAAYvH,KAAKuH,cAEzD,kBAAC,GAAD,CAASsB,IAAI,eAAKzH,IAAI,SAASiL,aAAW,GACtC,kBAAC,GAAD,CAAY9H,QAASA,EACTxD,OAAQf,KAAK1H,MAAMyI,OACnBjC,OAAQkB,KAAKlB,OAAQsF,UAAWpE,KAAKoE,UAAWxE,WAAYI,KAAKiM,cACjEjH,QAAShF,KAAKgF,WAE9B,kBAAC,GAAD,CAAS6D,IAAI,2BAAOzH,IAAI,OAAOiL,aAAW,GACtC,kBAAC,GAAD,CAAU9H,QAASA,EACTiF,WAAYA,EACZD,WAAYA,EACZE,YAAaiB,EAAiB5K,UAAWA,EACzChB,OAAQkB,KAAKlB,OAAQsF,UAAWpE,KAAKoE,UAAWxE,WAAYI,KAAKiM,cACjE/G,SAAUlF,KAAKkF,SAAUL,SAAU7E,KAAK6K,eACxCzB,YAAa,SAACpK,GAAD,OAAK,EAAK7C,SAAS,CAACwO,QAAS3L,c,GArLzCmE,a,oBCL3BmJ,G,IAAAA,OACAC,G,IAAAA,OAIFC,G,4MACFlU,MAAQ,CACJmM,QAAS,GACTtM,WAAY,O,EAGhBsU,OAAS,WACLpH,IAAMC,IAAI,SACLE,MAAK,SAAAC,GACFiH,QAAQC,IAAIlH,O,EAOxBd,SAAW,WAAO,IAAD,EACmB,EAAKrM,MAA7BmM,EADK,EACLA,QAAStM,EADJ,EACIA,WACjB,EAAKkD,MAAMuR,SAAS3U,EAAYwM,EAAStM,K,oGAGnC,IAAD,OACL,OACI,yBAAKuI,UAAWC,KAAMkM,MACrB,yBAAKnM,UAAWC,KAAMmM,QACf,yBAAKpM,UAAWC,KAAMqB,SAClB,yBAAKtB,UAAWC,KAAMoM,MAClB,yBAAKrM,UAAWC,KAAMsD,OAAtB,QACA,uBAAQ+I,aAAa,MAAMvL,SAAU,SAACzC,GAAD,OAAK,EAAK7C,SAAS,CAAChE,WAAY6G,KAAK0B,UAAWC,KAAMsM,QACvF,kBAACV,GAAD,CAAQzK,MAAM,OAAd,sBACA,kBAACyK,GAAD,CAAQzK,MAAM,MAAd,mBAEJ,kBAACwK,GAAD,CAAQ3H,SAAU3E,KAAK2E,SAAU7C,MAAO9B,KAAK1H,MAAMmM,QAC3ChD,SAAU,SAACzC,GAAD,OAAK,EAAK7C,SAAS,CAACsI,QAASzF,EAAEkO,OAAOpL,cAIvE,yBAAKpB,UAAWC,KAAMV,WACf,yBAAKS,UAAWC,KAAMqB,SAClB,kBAAC,GAAD,a,GAvCLmB,aA+CJnH,gBAjDS,SAAA1D,GAAU,OAAOA,IAiD1B0D,CAAyBwQ,I,0BC3CzBW,OAZf,WACE,OACE,yBAAKzM,UAAU,OACb,kBAAC,KAAD,KACE,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAO0M,OAAK,EAACC,KAAM,CAAC,KAAMC,UAAWd,SCE7Be,QACW,cAA7B/R,OAAOgS,SAASC,UAEe,UAA7BjS,OAAOgS,SAASC,UAEhBjS,OAAOgS,SAASC,SAASC,MACvB,2DCTN,IAAIC,GAAQC,YAAYC,GAExBC,IAAS7H,OACL,kBAAC,IAAD,CAAU0H,MAAOA,IACb,kBAAC,GAAD,OAENtU,SAAS+F,eAAe,SDoHpB,kBAAmB2O,WACrBA,UAAUC,cAAcC,MACrBzI,MAAK,SAAA0I,GACJA,EAAaC,gBAEdC,OAAM,SAAAvI,GACL6G,QAAQ7G,MAAMA,EAAMC,a,mBExI5B/N,EAAOC,QAAU,CAAC,aAAe,mCAAmC,UAAY,gCAAgC,YAAc,kCAAkC,QAAU,8BAA8B,SAAW,+BAA+B,KAAO,2BAA2B,OAAS,6BAA6B,KAAO,2BAA2B,OAAS,6BAA6B,UAAY,gCAAgC,OAAS,6BAA6B,gBAAkB,wC,mBCAteD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,OAAS,qBAAqB,QAAU,sBAAsB,KAAO,mBAAmB,OAAS,qBAAqB,MAAQ,oBAAoB,UAAY,2B","file":"static/js/main.d5504c1e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"music\":\"Music_music__fGJET\",\"header\":\"Music_header__3FQjm\",\"input\":\"Music_input__ppksE\",\"select\":\"Music_select__1_nuN\",\"item\":\"Music_item__z25Ha\",\"text\":\"Music_text__24N9U\",\"table\":\"Music_table__2cEYm\",\"album\":\"Music_album__SJsWL\",\"info\":\"Music_info__2fYIL\",\"emphasize\":\"Music_emphasize__1hjVZ\",\"playList\":\"Music_playList__16Gs8\",\"rowAct\":\"Music_rowAct__14gL0\",\"arrow\":\"Music_arrow__3O0Av\"};","export const SEARCH_MUSIC = 'SEARCH_MUSIC';\r\n\r\nexport const searchMusic = (searchKey, searchType) => {\r\n    return {type: SEARCH_MUSIC, searchKey, searchType}\r\n};","import { SEARCH_MUSIC } from \"../action\";\r\n\r\nconst initialState = {\r\n\tsearchKey: '',\r\n\tsearchType: '',\r\n};\r\n\r\nconst searchMusic = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase SEARCH_MUSIC:\r\n\t\t\treturn Object.assign({}, state, {\r\n\t\t\t\tsearchKey: action.searchKey,\r\n\t\t\t\tsearchType: action.searchType,\r\n\t\t\t});\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default searchMusic;","import { combineReducers } from 'redux';\r\nimport searchMusic from './searchMusic';\r\n\r\nexport default combineReducers({\r\n\tsearchMusic\r\n})","import moment from 'moment';\r\n\r\nconst DownloadBlob = (data, name='') => {\r\n    let fileName = name || 'test';\r\n    let blob = new Blob([data.data]);\r\n    let objectUrl = URL.createObjectURL(blob);\r\n    let a = document.createElement('a');\r\n    a.href = objectUrl;\r\n    a.download = fileName;\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n    URL.revokeObjectURL(objectUrl);\r\n};\r\n\r\nconst GetDuration = (str, unit='milliseconds') => {\r\n    let duration = moment.duration(str, unit);\r\n    let hour = duration.hours() > 1 ? duration.hours() + 'h' : '';\r\n    let minute = duration.minutes() + ':';\r\n    let second = duration.seconds().toString();\r\n    if (minute.length < 3){minute = '0' + minute}\r\n    if (second.length < 2){second = '0' + second}\r\n    return hour + minute + second;\r\n}\r\n\r\nconst getParams = (url) => {\r\n    try {\r\n        url = url.match(/\\?([^#]+)/)[1];\r\n        url = decodeURIComponent(url);\r\n        let obj = {}, arr = url.split('&');\r\n        for (let i = 0; i < arr.length; i++) {\r\n            let subArr = arr[i].split('=');\r\n            obj[subArr[0]] = subArr[1];\r\n        }\r\n        return obj;\r\n    } catch (err) {\r\n        return null;\r\n    }\r\n};\r\n\r\nexport {\r\n    DownloadBlob,\r\n    GetDuration,\r\n    getParams\r\n}","import React, { Component } from \"react\";\r\nimport { Menu, Dropdown, Space, Popover, Slider, Switch, Button } from 'antd';\r\nimport { CaretRightOutlined, PauseOutlined, NotificationOutlined, StepBackwardOutlined, StepForwardOutlined } from '@ant-design/icons';\r\nimport { GetDuration, DownloadBlob } from '@/utils'\r\nimport style from './AudioControl.module.scss';\r\n\r\nexport default class AudioControl extends Component{\r\n    state = {\r\n        audioSource: '',\r\n        duration: '0:00',\r\n        current: '0:00',\r\n        paused: true,\r\n        volume: 100,\r\n        loop: false,\r\n        visual: false,\r\n        actMenuVisible: false,\r\n        extendVisible: false,\r\n    };\r\n\r\n    componentDidMount(){\r\n        this.audio = document.getElementById('audioTag');\r\n        this.progressBar = document.getElementById('progressBar');\r\n        this.animationEnded = true;\r\n\r\n        this.canvas = document.getElementById('audioCanvas');\r\n        let container = document.getElementById('canvasContainer');\r\n        this.canvas.width = container.clientWidth;\r\n        this.canvas.height = container.clientHeight;\r\n        this.ctx = this.canvas.getContext('2d');\r\n        this.ctx.fillStyle = 'rgba(229, 206, 0, 0.3)';\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot){\r\n        if (this.props.src !== prevProps.src){\r\n            this.initAudio();\r\n        }\r\n    }\r\n\r\n    initAudio = () => {\r\n        let blob = new Blob([this.props.src.data]);\r\n        if (!this.audioCtx){\r\n            this.audioCtx = new (window.AudioContext || window.webkitAudioContext)();\r\n            this.audioSource = this.audioCtx.createMediaElementSource(document.querySelector('audio'));\r\n            this.analyser = this.audioCtx.createAnalyser();\r\n            this.analyser.fftSize = 256;\r\n            this.audioSource.connect(this.analyser);\r\n            this.analyser.connect(this.audioCtx.destination);\r\n        }\r\n        let source = URL.createObjectURL(blob);\r\n        this.setState({audioSource: source}, () => {\r\n            let interval = setInterval(()=>{\r\n                if (!isNaN(this.audio.duration)){\r\n                    clearInterval(interval);\r\n                    this.playMusic();\r\n                    this.setState({\r\n                        duration: Math.floor(this.audio.duration),\r\n                    })\r\n                }\r\n            }, 100);\r\n            this.audio.removeEventListener('timeupdate', this.onTimeUpdate);\r\n            this.audio.addEventListener('timeupdate', this.onTimeUpdate);\r\n            this.progressBar.onmousedown = this.onDragProgress;\r\n            this.audio.removeEventListener('ended', this.onEndEvent);\r\n            this.audio.addEventListener('ended', this.onEndEvent);\r\n        })\r\n    };\r\n\r\n    drawVisualEffect = () => {\r\n        let array = new Uint8Array(this.analyser.frequencyBinCount);\r\n        this.analyser.getByteFrequencyData(array);\r\n        let c_width = this.canvas.width;\r\n        let c_height = this.canvas.height;\r\n\r\n        this.ctx.clearRect(0, 0, c_width, c_height);\r\n        if (this.state.visual){\r\n            let rec_width = c_width / 2 / array.length;\r\n            for (let i=0; i<array.length; i++){\r\n                let rec_height = (array[i]/256 * c_height) * 0.3;\r\n                this.ctx.fillRect(rec_width * i, c_height - rec_height, rec_width * 0.7, rec_height)\r\n                this.ctx.fillRect(c_width - rec_width * i, c_height - rec_height, rec_width * 0.7, rec_height)\r\n            }\r\n            if (!this.animationEnd){\r\n                window.requestAnimationFrame(this.drawVisualEffect);\r\n            } else {\r\n                this.animationEnded = true;\r\n                this.ctx.clearRect(0, 0, c_width, c_height);\r\n            }\r\n        }\r\n    };\r\n\r\n    playMusic = () => {\r\n        clearTimeout(this.animationEndTimer);\r\n        this.animationEnd = false;\r\n        this.audio.play();\r\n        this.setState({paused: false});\r\n        if (this.animationEnded){\r\n            this.animationEnded = false;\r\n            window.requestAnimationFrame(this.drawVisualEffect);\r\n        }\r\n    };\r\n\r\n    pauseMusic = () => {\r\n        this.audio.pause();\r\n        this.animationEndTimer = setTimeout(()=>this.animationEnd = true, 2000);\r\n        this.setState({paused: true})\r\n    };\r\n\r\n    onTimeUpdate = () => {\r\n        let { current } = this.state;\r\n        let newCurrent = Math.floor(this.audio.currentTime);\r\n        if (newCurrent !== current){\r\n            this.setState({current: newCurrent})\r\n        }\r\n    };\r\n\r\n    onPlay = () => {\r\n        if (this.audio.paused){\r\n            this.playMusic();\r\n        } else {\r\n            this.pauseMusic();\r\n        }\r\n    };\r\n\r\n    onVolumeChange = (v) => {\r\n        this.setState({volume: v}, () => {\r\n            this.audio.volume = this.state.volume / 100;\r\n        })\r\n    };\r\n\r\n    onDragProgress = (event) => {\r\n        event.preventDefault();\r\n        let totalWidth = document.getElementById('progressBar').offsetWidth;\r\n\r\n        this.audio.currentTime = this.audio.duration * event.offsetX / totalWidth;\r\n        this.progressBar.onmousemove = (e => {\r\n            this.audio.currentTime = this.audio.duration * e.offsetX / totalWidth\r\n        });\r\n        document.body.onmouseup = () => {\r\n            this.progressBar.onmousemove = null;\r\n            document.body.onmouseup = null;\r\n        }\r\n    };\r\n\r\n    onEndEvent = () => {\r\n        this.audio.pause();\r\n        this.onAudioEnd(0);\r\n    };\r\n\r\n    onAudioEnd = (next = 0) => {\r\n        this.audio.currentTime = 0;\r\n        if (this.state.loop){\r\n            this.playMusic();\r\n        } else {\r\n            this.pauseMusic();\r\n            this.setState({paused: true});\r\n            this.props.onAudioEnd(next);\r\n        }\r\n    };\r\n\r\n    onDownload = () => {\r\n        let suffix = this.props.audioData.source === 'qq' ? '.m4a' : '.mp3';\r\n        DownloadBlob(this.props.src, this.props.audioData.name + suffix);\r\n    };\r\n\r\n    onVisualChange = (v) => {\r\n        this.setState({visual: v}, () => {\r\n            if (v && !this.state.paused){\r\n                window.requestAnimationFrame(this.drawVisualEffect);\r\n            }\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const { paused, duration, current, volume, audioSource, actMenuVisible, extendVisible } = this.state;\r\n        const extendAction = (\r\n            <div className={style.extend}>\r\n                <div className={[style.info, 'ellipsis'].join(' ')}>\r\n                    当前播放: {this.props.audioData.name ? `${this.props.audioData.name} - ${this.props.audioData.artist}` : '无'}\r\n                </div>\r\n                <div className={style.action}>\r\n                    <StepBackwardOutlined className='link' onClick={()=>this.onAudioEnd(-1)}/>\r\n                    <StepForwardOutlined className='link' onClick={()=>this.onAudioEnd(1)}/>\r\n                </div>\r\n            </div>\r\n        );\r\n        const ActMenu = (\r\n            <Menu onClick={(e)=>{if (e.key === 'downloadBtn'){this.setState({actMenuVisible: false})}}}>\r\n                <Menu.Item key='downloadBtn' disabled={!audioSource} onClick={this.onDownload}>\r\n                    下载\r\n                </Menu.Item>\r\n                <Menu.Item key='loopBtn'>\r\n                    <Space>\r\n                        循环<Switch checkedChildren=\"开\" unCheckedChildren=\"关\"\r\n                                  onChange={(v)=>this.setState({loop: v})}/>\r\n                    </Space>\r\n                </Menu.Item>\r\n                <Menu.Item key='visualBtn'>\r\n                    <Space>\r\n                        效果<Switch checkedChildren=\"开\" unCheckedChildren=\"关\"\r\n                                  onChange={this.onVisualChange}/>\r\n                    </Space>\r\n                </Menu.Item>\r\n            </Menu>\r\n        );\r\n        const Volume = (\r\n            <div className={style.volumePop}>\r\n                <Slider className={style.slider} vertical value={volume} onChange={this.onVolumeChange}/>\r\n            </div>\r\n        );\r\n\r\n        return (\r\n            <div className={style.audioControl}>\r\n                <Popover content={extendAction} placement=\"bottomLeft\"\r\n                          onVisibleChange={(v)=>this.setState({extendVisible: v})}>\r\n                    <Space className={style.interface} style={{boxShadow: extendVisible ? '0 0 5px #e5ce00' : 'none'}}>\r\n                        <audio id=\"audioTag\" src={audioSource}></audio>\r\n                        <div className={style.item}>\r\n                            <Button shape=\"circle\" onClick={this.onPlay} size='small' disabled={!audioSource}\r\n                                    icon={paused ? <CaretRightOutlined /> : <PauseOutlined />} />\r\n                        </div>\r\n                        <div className={style.item}>{GetDuration(current, 'seconds')}/{GetDuration(duration, 'seconds')}</div>\r\n                        <div className={style.progressBar}>\r\n                            <div id='progressBar' className={style.current}>\r\n                                <div id='currentProgressBar' className={style.progress}\r\n                                    style={{width: Math.round(100*current/duration, 0)+'%' || '0%'}}>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className={style.item}>\r\n                            <Popover placement=\"bottom\" content={Volume}>\r\n                                <NotificationOutlined style={{cursor: 'pointer'}}/>\r\n                            </Popover>\r\n                        </div>\r\n                        <div className={style.item}>\r\n                            <Dropdown overlay={ActMenu} visible={actMenuVisible}\r\n                                    onVisibleChange={(v)=>this.setState({actMenuVisible: v})}>\r\n                                <Button size='small'>更多</Button>\r\n                            </Dropdown>\r\n                        </div>\r\n                    </Space>\r\n                </Popover>\r\n                <div className={style.canvasContainer}>\r\n                    <div id='canvasContainer' style={{height: '100%', width: '100%'}}>\r\n                        <canvas id='audioCanvas'/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","const Pagination = () => {\r\n    return {\r\n        defaultCurrent: 1,\r\n        defaultPageSize: 10,\r\n        hideOnSinglePage: false,\r\n        current: 1,\r\n        pageSize: 10,\r\n        pageSizeOptions: ['10', '20', '50', '100'],\r\n        showSizeChanger: true,\r\n        showTotal: function (total, range) {\r\n            return `共${total}条`;\r\n        },\r\n        total: 0\r\n    };\r\n};\r\n\r\nexport default Pagination;","import React, {Component} from 'react';\r\nimport { Tooltip } from 'antd';\r\nimport { PlusCircleOutlined, PlayCircleOutlined, CloudDownloadOutlined  } from '@ant-design/icons';\r\n\r\nexport default class MusicAction extends Component{\r\n    state = {\r\n        btnList: this.props.btnList || ['play', 'add', 'download']\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.btnList !== prevProps.btnList){\r\n            this.setState({btnList: this.props.btnList || ['play', 'add', 'download']})\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { btnList } = this.state;\r\n        return (\r\n            <div>\r\n                {btnList.indexOf('play') >= 0 && <Tooltip title='播放'>\r\n                    <PlayCircleOutlined className='link' onClick={this.props.onPlay}/>\r\n                </Tooltip>}\r\n                {btnList.indexOf('add') >= 0 && <Tooltip title='加入歌单'>\r\n                    <PlusCircleOutlined className='link' onClick={this.props.onAddList}/>\r\n                </Tooltip>}\r\n                {btnList.indexOf('download') >= 0 && <Tooltip title='下载'>\r\n                    <CloudDownloadOutlined className='link' onClick={this.props.onDownload}/>\r\n                </Tooltip>}\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport { Table, notification } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport Axios from 'axios';\r\nimport Pagination from '@/settings/Pagination';\r\nimport MusicAction from \"@/lib/MusicAction\";\r\nimport { GetDuration } from \"@/utils\";\r\nimport style from './Music.module.scss';\r\n\r\nconst mapStateToProps = state => {return state};\r\n\r\nclass MusicList extends Component{\r\n    state = {\r\n        loading: false,\r\n        musicList: [],\r\n        keyword: '',\r\n        type: 'net',\r\n        audio: '',\r\n        pagination: Pagination(),\r\n        audioData: {},\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.searchMusic !== prevProps.searchMusic && this.props.searchMusic){\r\n            this.onSearch(this.props.searchMusic.searchKey, this.props.searchMusic.searchType);\r\n        }\r\n    }\r\n\r\n    onSearch = (keyword, type) => {\r\n        this.setState({\r\n            keyword: keyword,\r\n            type: type,\r\n            pagination: {...this.state.pagination, current: 1}\r\n        }, () => {this.fetchMusicList()});\r\n        this.props.onUpdate();\r\n    };\r\n\r\n    onAlbumClick = (record) => {\r\n        this.props.onAlbum(record);\r\n    };\r\n\r\n    onArtistClick = (record) => {\r\n        this.props.onArtist(record);\r\n    };\r\n\r\n    onPlay = (record) => {\r\n        this.props.onPlay(record.id, record)\r\n    };\r\n\r\n    onAddList = (record) => {\r\n        this.props.onAddList(record);\r\n    };\r\n\r\n    onDownload = (record) => {\r\n        this.props.onDownload(record.id, record)\r\n    };\r\n\r\n    fetchMusicList = () => {\r\n        const { pagination, keyword, type } = this.state;\r\n        let limit = pagination.pageSize;\r\n        let page = pagination.current;\r\n        this.setState({loading: true});\r\n        Axios.get('/search', {params: {source: type, keyword: keyword, limit: limit, page: page}})\r\n            .then(res => { \r\n                this.setState({loading: false});\r\n                if (res.data.success){\r\n                    this.setState({\r\n                        musicList: res.data.songs,\r\n                        pagination: {...pagination, total: res.data.total},\r\n                    })\r\n                } else {\r\n                    notification.error({message: '网络错误 获取失败', duration: null})\r\n                }\r\n            })\r\n    };\r\n\r\n    render() {\r\n        const loading = this.props.loading || this.state.loading;\r\n        const columns = [\r\n            {title: '歌曲名', dataIndex: 'name', key: 'name'},\r\n            {title: '时长', dataIndex: 'duration', key: 'duration', width: 75, render: (text) => (<div>{GetDuration(text)}</div>)},\r\n            {title: '歌手', dataIndex: 'artist', key: 'artist', \r\n                render: (text, record) => (\r\n                    <span className='link' onClick={()=>this.onArtistClick(record)}>\r\n                        {record.artist}</span>\r\n                )},\r\n            {title: '专辑', dataIndex: 'album', key: 'album', \r\n                render: (text, record) => (\r\n                    <span className='link' onClick={()=>this.onAlbumClick(record)}>\r\n                        《{record.album}》</span>\r\n                )},\r\n            {title: '操作', dataIndex: 'id', key: 'action', width: 150,\r\n                render: (text, record) => (<MusicAction onPlay={()=>{this.onPlay(record)}}\r\n                                                        onAddList={()=>{this.onAddList(record)}}\r\n                                                        onDownload={()=>this.onDownload(record)}/>\r\n                )},\r\n        ];\r\n        return (\r\n            <div className={style.table}>\r\n                <Table dataSource={this.state.musicList}\r\n                       loading={loading}\r\n                       pagination={this.state.pagination}\r\n                       onChange={(pagination) => {\r\n                           this.setState({\r\n                               pagination: {\r\n                                   ...this.state.pagination,\r\n                                   current: pagination.current,\r\n                                   pageSize: pagination.pageSize\r\n                               }\r\n                           }, () => {this.fetchMusicList()})\r\n                       }}\r\n                       scroll={{y:window.innerHeight-268}}\r\n                       size='small'\r\n                       columns={columns} rowKey='id'/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(MusicList)","import React, {Component} from 'react';\r\nimport { Spin, Empty } from 'antd';\r\n\r\nexport default class LoadingImg extends Component{\r\n    state = {\r\n        loading: true,\r\n        imageErr: false,\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.src !== prevProps.src){\r\n            this.setState({loading: true, imageErr: false})\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { loading, imageErr } = this.state;\r\n        return (\r\n            <div style={{minHeight: this.props.minHeight || 0, minWidth: this.props.minWIdth || 0}}>\r\n                <Spin style={{width: '100%', minHeight: this.props.minHeight || 0}} spinning={loading}>\r\n                    {imageErr === false && \r\n                        <img src={this.props.src} alt={this.props.alt || 'logo'} \r\n                             style={{opacity: loading ? '0' : '1', width: \"100%\"}}\r\n                             onLoad={()=>{this.setState({loading: false})}}\r\n                             onError={()=>this.setState({imageErr: true, loading: false})}\r\n                             onDragStart={e=>e.preventDefault()}\r\n                             />}\r\n                    {imageErr === true && <Empty />}\r\n                </Spin>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport { Table, notification, Tooltip, Popover } from 'antd';\r\nimport { PlusCircleOutlined, DashOutlined } from '@ant-design/icons';\r\nimport Axios from 'axios';\r\nimport moment from 'moment';\r\nimport Pagination from '@/settings/Pagination';\r\nimport LoadingImg from '@/lib/LoadingImg';\r\nimport MusicAction from \"@/lib/MusicAction\";\r\nimport { GetDuration } from \"@/utils\";\r\nimport style from \"./Music.module.scss\";\r\n\r\nexport default class AlbumList extends Component{\r\n    state = {\r\n        loading: false,\r\n        pagination: Pagination(),\r\n        musicList: [],\r\n        albumInfo: {},\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.album.albumId !== prevProps.album.albumId){\r\n            this.fetchAlbumDetail();\r\n        }\r\n    }\r\n\r\n    onPlay = (record) => {\r\n        this.props.onPlay(record.id, record)\r\n    };\r\n\r\n    onAddList = (record) => {\r\n        this.props.onAddList(record);\r\n    };\r\n\r\n    onAddAlbum = () => {\r\n        this.props.onAddAlbum(this.state.musicList);\r\n    };\r\n\r\n    onDownload = (record) => {\r\n        this.props.onDownload(record.id, record)\r\n    };\r\n\r\n    onArtistClick = (record) => {\r\n        this.props.onArtist(record);\r\n    };\r\n\r\n    fetchAlbumDetail = () => {\r\n        this.setState({loading: true, albumInfo: {}});\r\n        Axios.get('/albumMusic', {params: {id: this.props.album.albumId, source: this.props.album.source}})\r\n            .then(res => {\r\n                this.setState({loading: false});\r\n                if (res.data.success){\r\n                    this.setState({\r\n                        musicList: res.data.songs,\r\n                        albumInfo: res.data.album,\r\n                    })\r\n                } else {\r\n                    notification.error({message: '网络错误 获取失败', duration: null})\r\n                }\r\n            })\r\n    };\r\n\r\n    render() {\r\n        const loading = this.props.loading || this.state.loading;\r\n        const { albumInfo } = this.state;\r\n        const columns = [\r\n            {title: '歌曲名', dataIndex: 'name', key: 'name'},\r\n            {title: '时长', dataIndex: 'duration', key: 'duration', width: 75, render: (text) => (<div>{GetDuration(text)}</div>)},\r\n            {title: '歌手', dataIndex: 'artist', key: 'artist', \r\n                render: (text, record) => (\r\n                    <span className='link' onClick={()=>this.onArtistClick(record)}>{record.artist}</span>\r\n                )},\r\n            {title: '操作', dataIndex: 'id', key: 'action', width: 150,\r\n                render: (text, record) => (<MusicAction onPlay={()=>{this.onPlay(record)}}\r\n                                                        onAddList={()=>{this.onAddList(record)}}\r\n                                                        onDownload={()=>this.onDownload(record)}/>\r\n                )},\r\n        ];\r\n\r\n        return (\r\n            <div className={style.album}>\r\n                {this.props.album.albumId && <div className={style.info}>\r\n                    <LoadingImg minHeight={100} src={albumInfo.img}/>\r\n                    <div className={style.emphasize}>《{albumInfo.name}》</div>\r\n                    <div>歌手: {albumInfo.artist}</div>\r\n                    <div>公司: {albumInfo.company}</div>\r\n                    <div>发行时间: {moment(albumInfo.publishTime).format('YYYY-MM-DD')}</div>\r\n                    <Popover content={\r\n                        <Tooltip title='添加专辑中的歌曲到歌单'>\r\n                            <PlusCircleOutlined className='link' onClick={this.onAddAlbum}/>\r\n                        </Tooltip>}>\r\n                        <DashOutlined className='link'/>\r\n                    </Popover>\r\n                </div>}\r\n                <div className={style.table}>\r\n                    <Table dataSource={this.state.musicList}\r\n                           loading={loading}\r\n                           pagination={this.state.pagination}\r\n                           onChange={(pagination) => {\r\n                               this.setState({\r\n                                   pagination: {\r\n                                       ...this.state.pagination,\r\n                                       current: pagination.current,\r\n                                       pageSize: pagination.pageSize\r\n                                   }\r\n                               })\r\n                           }}\r\n                           scroll={{y:window.innerHeight-268}}\r\n                           size='small'\r\n                           columns={columns} rowKey='id'/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport { Table, notification, Tabs } from 'antd';\r\nimport Axios from 'axios';\r\nimport moment from 'moment';\r\nimport Pagination from '@/settings/Pagination';\r\nimport LoadingImg from '@/lib/LoadingImg';\r\nimport MusicAction from \"@/lib/MusicAction\";\r\nimport { GetDuration } from \"@/utils\";\r\nimport style from \"./Music.module.scss\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nexport default class artistList extends Component{\r\n    state = {\r\n        loading: false,\r\n        pagination: Pagination(),\r\n        hotList: [],\r\n        albumList: [],\r\n        artistInfo: {},\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.artist.artistId !== prevProps.artist.artistId){\r\n            this.fetchArtistDetail();\r\n            this.fetchArtistAlbum();\r\n        }\r\n    }\r\n\r\n    onPlay = (record) => {\r\n        this.props.onPlay(record.id, record)\r\n    };\r\n\r\n    onAddList = (record) => {\r\n        this.props.onAddList(record);\r\n    };\r\n\r\n    onDownload = (record) => {\r\n        this.props.onDownload(record.id, record)\r\n    };\r\n\r\n    onAlbumClick = (record) => {\r\n    \tthis.props.onAlbum(record);\r\n    };\r\n\r\n    fetchArtistDetail = () => {\r\n        this.setState({loading: true, artistInfo: {}});\r\n        Axios.get('/artistMusic', {params: {id: this.props.artist.artistId, source: this.props.artist.source}})\r\n            .then(res => {\r\n                this.setState({loading: false});\r\n                if (res.data.success){\r\n                   \tthis.setState({\r\n                   \t\thotList: res.data.songs,\r\n                   \t\tartistInfo: res.data.artist,\r\n                   \t})\r\n                } else {\r\n                    notification.error({message: '网络错误 获取歌手信息失败', duration: null})\r\n                }\r\n            })\r\n    };\r\n\r\n    fetchArtistAlbum = () => {\r\n    \tconst { pagination } = this.state;\r\n    \tlet limit = pagination.pageSize;\r\n    \tlet page = pagination.current;\r\n        this.setState({loading: true});\r\n        Axios.get('/artistAlbum', {params: {id: this.props.artist.artistId, limit: limit, page: page, source: this.props.artist.source}})\r\n            .then(res => {\r\n                this.setState({loading: false});\r\n                if (res.data.success){\r\n                   \tthis.setState({\r\n                   \t\talbumList: res.data.albums,\r\n                   \t\tpagination: {...pagination, total: res.data.albumSize}\r\n                   \t})\r\n                } else {\r\n                    notification.error({message: '网络错误 获取歌手专辑失败', duration: null})\r\n                }\r\n            })\r\n    };\r\n\r\n    render() {\r\n        const loading = this.props.loading || this.state.loading;\r\n        const { artistInfo } = this.state;\r\n        const musicColumns = [\r\n            {title: '歌曲名', dataIndex: 'name', key: 'name'},\r\n            {title: '时长', dataIndex: 'duration', key: 'duration', width: 75, render: (text) => (<div>{GetDuration(text)}</div>)},\r\n            {title: '专辑', dataIndex: 'album', key: 'album', \r\n            \trender: (text, record) => (\r\n            \t\t<span className='link' onClick={()=>this.onAlbumClick(record)}>《{record.album}》</span>\r\n            \t)},\r\n            {title: '操作', dataIndex: 'id', key: 'action', width: 150,\r\n                render: (text, record) => (<MusicAction onPlay={()=>{this.onPlay(record)}}\r\n                                                        onAddList={()=>{this.onAddList(record)}}\r\n                                                        onDownload={()=>this.onDownload(record)}/>\r\n                )},\r\n        ];\r\n\r\n        const albumColumns = [\r\n            {title: '专辑名', dataIndex: 'album', key: 'album', \r\n            \trender: (text, record) => (\r\n            \t\t<span className='link' onClick={()=>this.onAlbumClick(record)}>《{text}》</span>\r\n            \t)},\r\n            {title: '发行日期', dataIndex: 'publishTime', key: 'publishTime', render: (text) => (moment(text).format('YYYY-MM-DD'))},\r\n            {title: '公司', dataIndex: 'company', key: 'company'},\r\n            {title: '歌曲数量', dataIndex: 'size', key: 'size'},\r\n        ];\r\n\r\n        return (\r\n            <div className={style.album}>\r\n                {this.props.artist.artistId && <div className={style.info}>\r\n                \t<LoadingImg minHeight={100} src={artistInfo.img}/>\r\n                    <div className={style.emphasize}>{artistInfo.name}</div>\r\n                </div>}\r\n                <Tabs type=\"card\" tabPosition='left' size='small'>\r\n\t\t          \t<TabPane tab=\"Top50\" key=\"music\">\r\n\t\t            \t<Table dataSource={this.state.hotList}\r\n\t\t                       loading={loading}\r\n\t\t                       pagination={false}\r\n\t\t                       scroll={{y:window.innerHeight-268}}\r\n\t\t                       size='small'\r\n\t\t                       columns={musicColumns} rowKey='id'/>\r\n\t\t          \t</TabPane>\r\n\t\t          \t<TabPane tab=\"专辑\" key=\"album\">\r\n\t\t          \t  \t<Table dataSource={this.state.albumList}\r\n\t\t                       loading={loading}\r\n\t\t                       pagination={this.state.pagination}\r\n\t\t                       onChange={(pagination) => {\r\n\t\t                            this.setState({\r\n\t\t                                pagination: {\r\n\t\t                                    ...this.state.pagination,\r\n\t\t                                    current: pagination.current,\r\n\t\t                                    pageSize: pagination.pageSize\r\n\t\t                                }\r\n\t\t                            }, () => {this.fetchArtistAlbum()})\r\n\t\t                       }}\r\n\t\t                       size='small'\r\n\t\t                       scroll={{y:window.innerHeight-268}}\r\n\t\t                       columns={albumColumns} rowKey='albumId'/>\r\n\t\t         \t</TabPane>\r\n\t\t        </Tabs>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport { Table, Tabs, Switch } from 'antd';\r\nimport { CloseOutlined, SyncOutlined, CaretUpOutlined, CaretDownOutlined } from '@ant-design/icons';\r\nimport Pagination from '@/settings/Pagination';\r\nimport MusicAction from \"@/lib/MusicAction\";\r\nimport { GetDuration } from \"@/utils\";\r\nimport style from './Music.module.scss';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nexport default class PlayList extends Component{\r\n    state = {\r\n        loading: false,\r\n        editMod: false,\r\n        listType: 'customList',\r\n        customPagination: Pagination(),\r\n        recentPagination: Pagination(),\r\n    };\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n    }\r\n\r\n    onRemove = (record) => {\r\n        const { listType } = this.state;\r\n        this.props.onUpdate(listType, 'remove', record);\r\n    };\r\n\r\n    onPlay = (record) => {\r\n        this.props.onPlay(record.id, record, this.state.listType)\r\n    };\r\n\r\n    onAddList = (record) => {\r\n        this.props.onAddList(record);\r\n    };\r\n\r\n    onDownload = (record) => {\r\n        this.props.onDownload(record.id, record)\r\n    };\r\n\r\n    onArtistClick = (record) => {\r\n        this.props.onArtist(record);\r\n    };\r\n\r\n    onModChange = (v) => {\r\n        this.props.onModChange(v);\r\n    };\r\n\r\n    onPositionChange = (record, num) => {\r\n        const { listType } = this.state;\r\n        this.props.onUpdate(listType, 'move', record, num);\r\n    }\r\n\r\n    render() {\r\n        const { customList, recentList, currentType, audioData } = this.props;\r\n        const { editMod, listType } = this.state;\r\n        const loading = this.props.loading || this.state.loading;\r\n        const columns = [\r\n            {title: '', dataIndex: 'name', key: 'remove', width: 64,\r\n                render: (text, record) => (\r\n                    <div>\r\n                        {editMod && \r\n                            <div className={style.rowAct}>\r\n                                <ArrowAction onArrow={(num)=>this.onPositionChange([record], num)}/>\r\n                                <CloseOutlined className='link' onClick={()=>this.onRemove([record])}/>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                )},\r\n            {title: '', dataIndex: 'name', key: 'playing', width: 30,\r\n                render: (text, record) => (\r\n                    <div>\r\n                        {listType === currentType && record.id === audioData.id &&\r\n                        <SyncOutlined spin className={style.tableColIcon}/>}\r\n                    </div>\r\n                )},\r\n            {title: '歌曲名', dataIndex: 'name', key: 'name'},\r\n            {title: '时长', dataIndex: 'duration', key: 'duration', width: 75, render: (text) => (<div>{GetDuration(text)}</div>)},\r\n            {title: '歌手', dataIndex: 'artist', key: 'artist',\r\n                render: (text, record) => (\r\n                    <span className='link' onClick={()=>this.onArtistClick(record)}>{record.artist}</span>\r\n                )},\r\n            {title: '操作', dataIndex: 'id', key: 'action', width: 150,\r\n                render: (text, record) => (\r\n                    <MusicAction btnList={listType === 'customList' ? ['play', 'download'] : ['play', 'add', 'download']}\r\n                                 onPlay={()=>{this.onPlay(record)}}\r\n                                 onAddList={()=>{this.onAddList(record)}}\r\n                                 onDownload={()=>this.onDownload(record)}/>\r\n                )},\r\n        ];\r\n\r\n        return (\r\n            <div className={style.playList}>\r\n                <div className={style.header}>\r\n                    <div className={style.item}>\r\n                        <div className={style.text}>编辑</div>\r\n                        <Switch size='middle' onChange={(v)=>this.setState({editMod: v})}/>\r\n                    </div>\r\n                    <div className={style.item}>\r\n                        <div className={style.text}>列表播放</div>\r\n                        <Switch size='middle' onChange={(v)=>this.onModChange(v ? 'list' : 'solo')}/>\r\n                    </div>\r\n                </div>\r\n                <Tabs type=\"card\" tabPosition='left' size='small' activeKey={this.state.listType}\r\n                      onChange={(v)=>this.setState({listType: v})}>\r\n                    <TabPane tab=\"歌单\" key=\"customList\">\r\n                        <div className={style.table}>\r\n                            <Table dataSource={customList}\r\n                                   loading={loading}\r\n                                   rowClassName={(record) => {\r\n                                       return (listType === currentType && record.id === audioData.id) ? 'highlightRow' : ''\r\n                                   }}\r\n                                   pagination={this.state.customPagination}\r\n                                   onChange={(pagination) => {\r\n                                       this.setState({\r\n                                           customPagination: {\r\n                                               ...this.state.customPagination,\r\n                                               current: pagination.current,\r\n                                               pageSize: pagination.pageSize\r\n                                           }\r\n                                       })\r\n                                   }}\r\n                                   scroll={{y:window.innerHeight-268}}\r\n                                   size='small'\r\n                                   columns={columns} rowKey='id'/>\r\n                        </div>\r\n                    </TabPane>\r\n                    <TabPane tab=\"最近播放\" key=\"recentList\">\r\n                        <div className={style.table}>\r\n                            <Table dataSource={recentList}\r\n                                   loading={loading}\r\n                                   rowClassName={(record) => {\r\n                                       return (listType === currentType && record.id === audioData.id) ? 'highlightRow' : ''\r\n                                   }}\r\n                                   pagination={this.state.recentPagination}\r\n                                   onChange={(pagination) => {\r\n                                       this.setState({\r\n                                           recentPagination: {\r\n                                               ...this.state.recentPagination,\r\n                                               current: pagination.current,\r\n                                               pageSize: pagination.pageSize\r\n                                           }\r\n                                       })\r\n                                   }}\r\n                                   scroll={{y:window.innerHeight-268}}\r\n                                   size='small'\r\n                                   columns={columns} rowKey='id'/>\r\n                        </div>\r\n                    </TabPane>\r\n                </Tabs>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass ArrowAction extends Component{\r\n    state = {};\r\n    render(){\r\n        return (\r\n            <div>\r\n                <CaretUpOutlined onClick={()=>this.props.onArrow(-1)} className='link'/>\r\n                <CaretDownOutlined onClick={()=>this.props.onArrow(1)} className={[style.arrow, 'link'].join(' ')}/>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport Axios from 'axios';\r\nimport AudioControl from \"./AudioControl\";\r\nimport MusicList from \"./MusicList\";\r\nimport AlbumList from \"./AlbumList\";\r\nimport ArtistList from \"./ArtistList\";\r\nimport PlayList from \"./PlayList\";\r\nimport { notification, Tabs } from 'antd';\r\nimport { DownloadBlob } from \"@/utils\";\r\nimport style from './Music.module.scss';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nexport default class Music extends Component{\r\n    state = {\r\n        tab: 'music',\r\n        loading: false,\r\n        audioSrc: '',\r\n        audioData: {},\r\n        album: {},\r\n        artist: {},\r\n        recentList: [],\r\n        customList: [],\r\n        currentPlayList: 'recentList',\r\n        playMod: 'soloSingle',\r\n        playingList: [],\r\n    };\r\n\r\n    componentDidMount(){\r\n        this.setState({\r\n            recentList: JSON.parse(window.localStorage.getItem('recentList')) || [],\r\n            customList: JSON.parse(window.localStorage.getItem('customList')) || [],\r\n        })\r\n    }\r\n\r\n    updatePlayList = (listType, action, records, num=0, maxLength=-1) => {\r\n        let list = JSON.parse(window.localStorage.getItem(listType)) || [];\r\n        let result = {};\r\n        records.forEach(record => {\r\n            let index = -1;\r\n            list.forEach((item, i) => {\r\n                if (item.id === record.id){\r\n                    index = i;\r\n                }\r\n            });\r\n            switch (action) {\r\n                case 'remove':\r\n                    if (index >= 0){list.splice(index, 1)}\r\n                    break;\r\n                case 'add':\r\n                    if (index === -1){list.push(record)}\r\n                    break;\r\n                case 'toTop':\r\n                    if (index >= 0){\r\n                        list.splice(index, 1)\r\n                    }\r\n                    list.splice(0, 0, record);\r\n                    break;\r\n                case 'move':\r\n                    if (index >= 0){\r\n                        list.splice(index, 1)\r\n                        list.splice(index + num, 0, record);\r\n                    }\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        });\r\n        if (maxLength >= 0 && list.length > 0){\r\n            while(list.length > maxLength){\r\n                list.pop();\r\n            }\r\n        }\r\n        window.localStorage.setItem(listType, JSON.stringify(list));\r\n        result[listType] = list;\r\n        this.setState({...result})\r\n    };\r\n\r\n    onAlbum = (album) => {\r\n        this.setState({tab: 'album', album: album});\r\n    };\r\n\r\n    onArtist = (artist) => {\r\n        this.setState({tab: 'artist', artist: artist})\r\n    };\r\n\r\n    onPlay = (id, record, listType='recentList') => {\r\n        this.updatePlayList('recentList', 'toTop', [record], 0, 50);\r\n        this.setState({currentPlayList: listType});\r\n        this.fetchPlay(id, record);\r\n    };\r\n\r\n    onAddList = (record) => {\r\n        const { customList } = this.state;\r\n        let index = -1;\r\n        customList.forEach((item, i) => {\r\n            if (item.id === record.id){index = i}\r\n        });\r\n        if (index >= 0){\r\n            notification.warning({message: '歌曲已在歌单中', duration: 4})\r\n        } else {\r\n            this.updatePlayList('customList', 'add', [record]);\r\n            notification.success({message: '添加成功', duration: 4});\r\n        }\r\n    };\r\n\r\n    onAddAlbum = (records) => {\r\n        this.updatePlayList('customList', 'add', records);\r\n        notification.success({message: '添加成功', duration: 4})\r\n    };\r\n\r\n    onAudioEnd = (next=0) => {\r\n        if (this.state.playMod === 'list' || next !== 0){\r\n            let list = JSON.parse(window.localStorage.getItem(this.state.currentPlayList)) || [];\r\n            let index = -1;\r\n            list.forEach((item, i) => {\r\n                if (item.id === this.state.audioData.id){index = i}\r\n            });\r\n            if (index >= 0){\r\n                index += next >= 0 ? 1 : -1;\r\n                if (index >= list.length){index = 0}\r\n                if (index < 0){index = Math.max(list.length - 1, 0)}\r\n                let record = list[index];\r\n                if (record){this.fetchPlay(record.id, record)}\r\n            }\r\n        }\r\n    };\r\n\r\n    fetchPlay = (id, record) => {\r\n        this.setState({loading: true, audioData: record, audioSrc: ''});\r\n        Axios.get('/download', {\r\n            params: {id: id, source: record.source},\r\n            responseType: 'blob'\r\n        }).then(res => {\r\n            this.setState({loading: false});\r\n            if (res.data.size > 17){\r\n                this.setState({audioSrc: res})\r\n            } else {\r\n                notification.error({message: '网络错误 获取失败', duration: null})\r\n            }\r\n        })\r\n    };\r\n\r\n    fetchDownload = (id, record) => {\r\n        this.setState({loading: true});\r\n        Axios.get('/download', {\r\n            params: {id: id, source: record.source},\r\n            responseType: 'blob'\r\n        }).then(res => {\r\n            this.setState({loading: false});\r\n            if (res.data.size > 17){\r\n                let suffix = record.source === 'qq' ? '.m4a' : '.mp3';\r\n                DownloadBlob(res, record.name+suffix);\r\n            } else {\r\n                notification.error({message: '网络错误 获取失败', duration: null})\r\n            }\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const { loading, playMod, recentList, customList, audioData, currentPlayList } = this.state;\r\n        const TabExtra = (\r\n            <AudioControl src={this.state.audioSrc} audioData={audioData} playMod={playMod}\r\n                          onAudioEnd={this.onAudioEnd}/>\r\n        );\r\n        return (\r\n            <div className={style.music}>\r\n                <Tabs activeKey={this.state.tab} tabBarExtraContent={TabExtra}\r\n                        onChange={(v)=>this.setState({tab: v})}>\r\n                    <TabPane tab=\"歌曲\" key=\"music\" forceRender>\r\n                        <MusicList loading={loading}\r\n                                   onUpdate={()=>this.setState({tab: 'music'})}\r\n                                   onPlay={this.onPlay} onAddList={this.onAddList} onDownload={this.fetchDownload}\r\n                                   onAlbum={this.onAlbum} onArtist={this.onArtist}/>\r\n                    </TabPane>\r\n                    <TabPane tab=\"专辑\" key=\"album\" forceRender>\r\n                        <AlbumList loading={loading}\r\n                                   album={this.state.album}\r\n                                   onPlay={this.onPlay} onAddList={this.onAddList} onDownload={this.fetchDownload}\r\n                                   onArtist={this.onArtist} onAddAlbum={this.onAddAlbum}/>\r\n                    </TabPane>\r\n                    <TabPane tab=\"歌手\" key=\"artist\" forceRender>\r\n                        <ArtistList loading={loading} \r\n                                    artist={this.state.artist}\r\n                                    onPlay={this.onPlay} onAddList={this.onAddList} onDownload={this.fetchDownload}\r\n                                    onAlbum={this.onAlbum}/>\r\n                    </TabPane>\r\n                    <TabPane tab=\"播放列表\" key=\"play\" forceRender>\r\n                        <PlayList loading={loading}\r\n                                  recentList={recentList}\r\n                                  customList={customList}\r\n                                  currentType={currentPlayList} audioData={audioData}\r\n                                  onPlay={this.onPlay} onAddList={this.onAddList} onDownload={this.fetchDownload}\r\n                                  onArtist={this.onArtist} onUpdate={this.updatePlayList}\r\n                                  onModChange={(v)=>this.setState({playMod: v})}/>\r\n                    </TabPane>\r\n                </Tabs>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport { Input, Select } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { searchMusic } from \"@/redux/action\";\r\nimport Axios from 'axios';\r\nimport Music from '@/pages/music/Music';\r\nimport style from './Main.module.scss';\r\n\r\nconst { Search } = Input;\r\nconst { Option } = Select;\r\n\r\nconst mapStateToProps = state => {return state};\r\n\r\nclass Main extends Component{\r\n    state = {\r\n        keyword: '',\r\n        searchType: 'net',\r\n    };\r\n\r\n    onTest = () => {\r\n        Axios.get('/test')\r\n            .then(res => { \r\n                console.log(res);\r\n            })\r\n    };\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    onSearch = () => {\r\n        const { keyword, searchType } = this.state;\r\n        this.props.dispatch(searchMusic(keyword, searchType))\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className={style.main}>\r\n            \t<div className={style.topBar}>\r\n                    <div className={style.content}>\r\n                        <div className={style.left}>\r\n                            <div className={style.title}>AEON</div>\r\n                            <Select defaultValue='net' onChange={(v)=>this.setState({searchType: v})} className={style.select}>\r\n                                <Option value='net'>网易云</Option>\r\n                                <Option value='qq'>qq音乐</Option>\r\n                            </Select>\r\n                            <Search onSearch={this.onSearch} value={this.state.keyword}\r\n                                    onChange={(v)=>this.setState({keyword: v.target.value})}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            \t<div className={style.container}>\r\n                    <div className={style.content}>\r\n                        <Music/>\r\n                    </div>\r\n            \t</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Main)","import React from 'react';\r\nimport Main from '@/pages/main/Main';\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Switch>\r\n            <Route exact path={['/']} component={Main}/>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\nimport reducer from '@/redux/reducer';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nlet store = createStore(reducer)\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"audioControl\":\"AudioControl_audioControl__rRqIk\",\"interface\":\"AudioControl_interface__2iZqh\",\"progressBar\":\"AudioControl_progressBar__2aVWM\",\"current\":\"AudioControl_current__3gBvm\",\"progress\":\"AudioControl_progress__2ov18\",\"item\":\"AudioControl_item__3NqAn\",\"extend\":\"AudioControl_extend__1zbSb\",\"info\":\"AudioControl_info__PEacG\",\"action\":\"AudioControl_action__2On8S\",\"volumePop\":\"AudioControl_volumePop__GlZzl\",\"slider\":\"AudioControl_slider__2bAGg\",\"canvasContainer\":\"AudioControl_canvasContainer__O5V3j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Main_main__Xwbxl\",\"topBar\":\"Main_topBar__HP7XZ\",\"content\":\"Main_content__1bvps\",\"left\":\"Main_left__37EnX\",\"select\":\"Main_select__3xpVn\",\"title\":\"Main_title__314LA\",\"container\":\"Main_container__1Xcdn\"};"],"sourceRoot":""}