{"version":3,"sources":["pages/music/Music.module.scss","redux/action/index.js","redux/reducer/searchMusic.js","redux/reducer/index.js","utils/index.js","pages/music/AudioControl.jsx","settings/Pagination.js","lib/MusicAction.jsx","pages/music/MusicList.jsx","lib/LoadingImg.jsx","pages/music/AlbumList.jsx","pages/music/ArtistList.jsx","pages/music/PlayList.jsx","pages/music/Music.jsx","pages/main/Main.jsx","App.js","serviceWorker.js","index.js","pages/music/AudioControl.module.scss","pages/main/Main.module.scss"],"names":["module","exports","searchMusic","searchKey","searchType","type","initialState","state","action","Object","assign","combineReducers","DownloadBlob","data","name","fileName","blob","Blob","objectUrl","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","GetDuration","str","unit","duration","moment","hour","hours","minute","minutes","second","seconds","toString","length","AudioControl","audioSource","current","paused","volume","loop","actMenuVisible","extendVisible","initAudio","props","src","source","setState","interval","setInterval","isNaN","audio","clearInterval","play","Math","floor","removeEventListener","onTimeUpdate","addEventListener","progressBar","onmousedown","onDrageProgress","onAudioEnd","newCurrent","currentTime","onPlay","pause","onVolumeChange","v","event","preventDefault","totalWidth","getElementById","offsetWidth","offsetX","onmousemove","e","onmouseup","next","onDownload","audioData","this","prevProps","prevState","snapshot","extendAction","className","style","extend","info","join","artist","StepBackwardOutlined","onClick","StepForwardOutlined","ActMenu","key","Item","disabled","checkedChildren","unCheckedChildren","onChange","Volume","volumePop","slider","vertical","value","audioControl","content","placement","onVisibleChange","interface","boxShadow","id","item","shape","size","icon","CaretRightOutlined","PauseOutlined","progress","width","round","NotificationOutlined","cursor","overlay","visible","Component","Pagination","defaultCurrent","defaultPageSize","hideOnSinglePage","pageSize","pageSizeOptions","showSizeChanger","showTotal","total","range","MusicAction","btnList","indexOf","title","PlayCircleOutlined","PlusCircleOutlined","onAddList","CloudDownloadOutlined","MusicList","loading","musicList","keyword","pagination","onSearch","fetchMusicList","onUpdate","onAlbumClick","record","onAlbum","onArtistClick","onArtist","limit","page","Axios","get","params","then","res","success","songs","notification","error","message","columns","dataIndex","render","text","album","table","dataSource","scroll","y","window","innerHeight","rowKey","connect","LoadingImg","imageErr","minHeight","minWidth","minWIdth","spinning","alt","opacity","onLoad","onError","onDragStart","AlbumList","albumInfo","onAddAlbum","fetchAlbumDetail","albumId","img","emphasize","company","publishTime","format","DashOutlined","TabPane","artistList","hotList","albumList","artistInfo","fetchArtistDetail","artistId","fetchArtistAlbum","albums","albumSize","musicColumns","albumColumns","tabPosition","tab","PlayList","editMod","listType","onRemove","onModChange","customList","recentList","currentType","CloseOutlined","SyncOutlined","spin","tableColIcon","header","activeKey","rowClassName","Music","audioSrc","currentPlayList","playMod","playingList","updatePlayList","records","list","JSON","parse","localStorage","getItem","result","forEach","index","i","splice","push","setItem","stringify","fetchPlay","warning","max","responseType","fetchDownload","TabExtra","music","tabBarExtraContent","forceRender","Search","Option","Main","onTest","console","log","dispatch","main","topBar","left","defaultValue","select","target","container","App","exact","path","component","Boolean","location","hostname","match","store","createStore","reducer","ReactDOM","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.e27ac3d8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"music\":\"Music_music__14wUe\",\"header\":\"Music_header__3qRWq\",\"input\":\"Music_input__GEO7_\",\"select\":\"Music_select__39bZb\",\"item\":\"Music_item__TzQve\",\"text\":\"Music_text__1wcOp\",\"table\":\"Music_table__68FKM\",\"album\":\"Music_album__1NAmb\",\"info\":\"Music_info__1kELK\",\"emphasize\":\"Music_emphasize__3tqAg\"};","export const SEARCH_MUSIC = 'SEARCH_MUSIC';\r\n\r\nexport const searchMusic = (searchKey, searchType) => {\r\n    return {type: SEARCH_MUSIC, searchKey, searchType}\r\n};","import { SEARCH_MUSIC } from \"../action\";\r\n\r\nconst initialState = {\r\n\tsearchKey: '',\r\n\tsearchType: '',\r\n};\r\n\r\nconst searchMusic = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase SEARCH_MUSIC:\r\n\t\t\treturn Object.assign({}, state, {\r\n\t\t\t\tsearchKey: action.searchKey,\r\n\t\t\t\tsearchType: action.searchType,\r\n\t\t\t});\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default searchMusic;","import { combineReducers } from 'redux';\r\nimport searchMusic from './searchMusic';\r\n\r\nexport default combineReducers({\r\n\tsearchMusic\r\n})","import moment from 'moment';\r\n\r\nconst DownloadBlob = (data, name='') => {\r\n    let fileName = name || 'test';\r\n    let blob = new Blob([data.data]);\r\n    let objectUrl = URL.createObjectURL(blob);\r\n    let a = document.createElement('a');\r\n    a.href = objectUrl;\r\n    a.download = fileName;\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n    URL.revokeObjectURL(objectUrl);\r\n};\r\n\r\nconst GetDuration = (str, unit='milliseconds') => {\r\n    let duration = moment.duration(str, unit);\r\n    let hour = duration.hours() > 1 ? duration.hours() + 'h' : '';\r\n    let minute = duration.minutes() + ':';\r\n    let second = duration.seconds().toString();\r\n    if (minute.length < 3){minute = '0' + minute}\r\n    if (second.length < 2){second = '0' + second}\r\n    return hour + minute + second;\r\n}\r\n\r\nconst getParams = (url) => {\r\n    try {\r\n        url = url.match(/\\?([^#]+)/)[1];\r\n        url = decodeURIComponent(url);\r\n        let obj = {}, arr = url.split('&');\r\n        for (let i = 0; i < arr.length; i++) {\r\n            let subArr = arr[i].split('=');\r\n            obj[subArr[0]] = subArr[1];\r\n        }\r\n        return obj;\r\n    } catch (err) {\r\n        return null;\r\n    }\r\n};\r\n\r\nexport {\r\n    DownloadBlob,\r\n    GetDuration,\r\n    getParams\r\n}","import React, { Component } from \"react\";\r\nimport { Menu, Dropdown, Space, Popover, Slider, Switch, Button } from 'antd';\r\nimport { CaretRightOutlined, PauseOutlined, NotificationOutlined, StepBackwardOutlined, StepForwardOutlined } from '@ant-design/icons';\r\nimport { GetDuration, DownloadBlob } from '@/utils'\r\nimport style from './AudioControl.module.scss';\r\n\r\nexport default class AudioControl extends Component{\r\n    state = {\r\n        audioSource: '',\r\n        duration: '0:00',\r\n        current: '0:00',\r\n        paused: true,\r\n        volume: 100,\r\n        loop: false,\r\n        actMenuVisible: false,\r\n        extendVisible: false,\r\n    };\r\n\r\n    componentDidMount(){\r\n        this.audio = document.getElementById('audioTag');\r\n        this.progressBar = document.getElementById('progressBar');\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot){\r\n        if (this.props.src !== prevProps.src){\r\n            this.initAudio();\r\n        }\r\n    }\r\n\r\n    initAudio = () => {\r\n        let blob = new Blob([this.props.src.data]);\r\n        let source = URL.createObjectURL(blob);\r\n        this.setState({audioSource: source}, () => {\r\n            let interval = setInterval(()=>{\r\n                if (!isNaN(this.audio.duration)){\r\n                    clearInterval(interval);\r\n                    this.audio.play();\r\n                    this.setState({\r\n                        duration: Math.floor(this.audio.duration),\r\n                        paused: false\r\n                    })\r\n                }\r\n            }, 100);\r\n            this.audio.removeEventListener('timeupdate', this.onTimeUpdate);\r\n            this.audio.addEventListener('timeupdate', this.onTimeUpdate);\r\n            this.progressBar.onmousedown = this.onDrageProgress;\r\n            this.audio.addEventListener('ended', ()=>this.onAudioEnd(0));\r\n        })\r\n        \r\n    };\r\n\r\n    onTimeUpdate = () => {\r\n        let { current } = this.state;\r\n        let newCurrent = Math.floor(this.audio.currentTime);\r\n        if (newCurrent !== current){\r\n            this.setState({current: newCurrent})\r\n        }\r\n    };\r\n\r\n    onPlay = () => {\r\n        if (this.audio.paused){\r\n            this.audio.play();\r\n        } else {\r\n            this.audio.pause();\r\n        }\r\n        this.setState({paused: this.audio.paused});\r\n    };\r\n\r\n    onVolumeChange = (v) => {\r\n        this.setState({volume: v}, () => {\r\n            this.audio.volume = this.state.volume / 100;\r\n        })\r\n    };\r\n\r\n    onDrageProgress = (event) => {\r\n        event.preventDefault();\r\n        let totalWidth = document.getElementById('progressBar').offsetWidth;\r\n\r\n        this.audio.currentTime = this.audio.duration * event.offsetX / totalWidth;\r\n        this.progressBar.onmousemove = (e => {\r\n            this.audio.currentTime = this.audio.duration * e.offsetX / totalWidth\r\n        });\r\n        document.body.onmouseup = () => {\r\n            this.progressBar.onmousemove = null;\r\n            document.body.onmouseup = null;\r\n        }\r\n    };\r\n\r\n    onAudioEnd = (next = 0) => {\r\n        this.audio.currentTime = 0;\r\n        if (this.state.loop){\r\n            this.audio.play();\r\n        } else {\r\n            this.audio.pause();\r\n            this.setState({paused: true});\r\n            this.props.onAudioEnd(next);\r\n        }\r\n    };\r\n\r\n    onDownload = () => {\r\n        DownloadBlob(this.props.src, this.props.audioData.name + '.mp3');\r\n    };\r\n\r\n    render() {\r\n        const { paused, duration, current, volume, audioSource, actMenuVisible, extendVisible } = this.state;\r\n        const extendAction = (\r\n            <div className={style.extend}>\r\n                <div className={[style.info, 'ellipsis'].join(' ')}>\r\n                    当前播放: {this.props.audioData.name ? `${this.props.audioData.name} - ${this.props.audioData.artist}` : '无'}\r\n                </div>\r\n                <div className={style.action}>\r\n                    <StepBackwardOutlined className='link' onClick={()=>this.onAudioEnd(-1)}/>\r\n                    <StepForwardOutlined className='link' onClick={()=>this.onAudioEnd(1)}/>\r\n                </div>\r\n            </div>\r\n        );\r\n        const ActMenu = (\r\n            <Menu onClick={(e)=>{if (e.key !== 'loopBtn'){this.setState({actMenuVisible: false})}}}>\r\n                <Menu.Item key='downloadBtn' disabled={!audioSource} onClick={this.onDownload}>\r\n                    下载\r\n                </Menu.Item>\r\n                <Menu.Item key='loopBtn'>\r\n                    <Space>\r\n                        循环<Switch checkedChildren=\"开\" unCheckedChildren=\"关\"\r\n                                    onChange={(v)=>this.setState({loop: v})}/>\r\n                    </Space>\r\n                </Menu.Item>\r\n            </Menu>\r\n        );\r\n        const Volume = (\r\n            <div className={style.volumePop}>\r\n                <Slider className={style.slider} vertical value={volume} onChange={this.onVolumeChange}/>\r\n            </div>\r\n        );\r\n\r\n        return (\r\n            <div className={style.audioControl}>\r\n                <Popover content={extendAction} placement=\"bottomLeft\"\r\n                          onVisibleChange={(v)=>this.setState({extendVisible: v})}>\r\n                    <Space className={style.interface} style={{boxShadow: extendVisible ? '0 0 5px #e5ce00' : 'none'}}>\r\n                        <audio id=\"audioTag\" src={audioSource}></audio>\r\n                        <div className={style.item}>\r\n                            <Button shape=\"circle\" onClick={this.onPlay} size='small' disabled={!audioSource}\r\n                                    icon={paused ? <CaretRightOutlined /> : <PauseOutlined />} />\r\n                        </div>\r\n                        <div className={style.item}>{GetDuration(current, 'seconds')}/{GetDuration(duration, 'seconds')}</div>\r\n                        <div className={style.progressBar}>\r\n                            <div id='progressBar' className={style.current}>\r\n                                <div id='currentProgressBar' className={style.progress}\r\n                                    style={{width: Math.round(100*current/duration, 0)+'%' || '0%'}}>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className={style.item}>\r\n                            <Popover placement=\"bottom\" content={Volume}>\r\n                                <NotificationOutlined style={{cursor: 'pointer'}}/>\r\n                            </Popover>\r\n                        </div>\r\n                        <div className={style.item}>\r\n                            <Dropdown overlay={ActMenu} visible={actMenuVisible}\r\n                                    onVisibleChange={(v)=>this.setState({actMenuVisible: v})}>\r\n                                <Button size='small'>更多</Button>\r\n                            </Dropdown>\r\n                        </div>\r\n                    </Space>\r\n                </Popover>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","const Pagination = () => {\r\n    return {\r\n        defaultCurrent: 1,\r\n        defaultPageSize: 10,\r\n        hideOnSinglePage: false,\r\n        current: 1,\r\n        pageSize: 10,\r\n        pageSizeOptions: ['10', '20', '50', '100'],\r\n        showSizeChanger: true,\r\n        showTotal: function (total, range) {\r\n            return `共${total}条`;\r\n        },\r\n        total: 0\r\n    };\r\n};\r\n\r\nexport default Pagination;","import React, {Component} from 'react';\r\nimport { Tooltip } from 'antd';\r\nimport { PlusCircleOutlined, PlayCircleOutlined, CloudDownloadOutlined  } from '@ant-design/icons';\r\n\r\nexport default class MusicAction extends Component{\r\n    state = {\r\n        btnList: this.props.btnList || ['play', 'add', 'download']\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.btnList !== prevProps.btnList){\r\n            this.setState({btnList: this.props.btnList || ['play', 'add', 'download']})\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { btnList } = this.state;\r\n        return (\r\n            <div>\r\n                {btnList.indexOf('play') >= 0 && <Tooltip title='播放'>\r\n                    <PlayCircleOutlined className='link' onClick={this.props.onPlay}/>\r\n                </Tooltip>}\r\n                {btnList.indexOf('add') >= 0 && <Tooltip title='加入歌单'>\r\n                    <PlusCircleOutlined className='link' onClick={this.props.onAddList}/>\r\n                </Tooltip>}\r\n                {btnList.indexOf('download') >= 0 && <Tooltip title='下载'>\r\n                    <CloudDownloadOutlined className='link' onClick={this.props.onDownload}/>\r\n                </Tooltip>}\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport { Table, notification } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport Axios from 'axios';\r\nimport Pagination from '@/settings/Pagination';\r\nimport MusicAction from \"@/lib/MusicAction\";\r\nimport { GetDuration } from \"@/utils\";\r\nimport style from './Music.module.scss';\r\n\r\nconst mapStateToProps = state => {return state};\r\n\r\nclass MusicList extends Component{\r\n    state = {\r\n        loading: false,\r\n        musicList: [],\r\n        keyword: '',\r\n        type: 'net',\r\n        audio: '',\r\n        pagination: Pagination(),\r\n        audioData: {},\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.searchMusic !== prevProps.searchMusic && this.props.searchMusic){\r\n            this.onSearch(this.props.searchMusic.searchKey, this.props.searchMusic.searchType);\r\n        }\r\n    }\r\n\r\n    onSearch = (keyword, type) => {\r\n        this.setState({\r\n            keyword: keyword,\r\n            type: type,\r\n            pagination: {...this.state.pagination, current: 1}\r\n        }, () => {this.fetchMusicList()});\r\n        this.props.onUpdate();\r\n    };\r\n\r\n    onAlbumClick = (record) => {\r\n        this.props.onAlbum(record);\r\n    };\r\n\r\n    onArtistClick = (record) => {\r\n        this.props.onArtist(record);\r\n    };\r\n\r\n    onPlay = (record) => {\r\n        this.props.onPlay(record.id, record)\r\n    };\r\n\r\n    onAddList = (record) => {\r\n        this.props.onAddList(record);\r\n    };\r\n\r\n    onDownload = (record) => {\r\n        this.props.onDownload(record.id, record)\r\n    };\r\n\r\n    fetchMusicList = () => {\r\n        const { pagination, keyword, type } = this.state;\r\n        let limit = pagination.pageSize;\r\n        let page = pagination.current;\r\n        this.setState({loading: true});\r\n        Axios.get('/search', {params: {source: type, keyword: keyword, limit: limit, page: page}})\r\n            .then(res => { \r\n                this.setState({loading: false});\r\n                if (res.data.success){\r\n                    this.setState({\r\n                        musicList: res.data.songs,\r\n                        pagination: {...pagination, total: res.data.total},\r\n                    })\r\n                } else {\r\n                    notification.error({message: '网络错误 获取失败', duration: null})\r\n                }\r\n            })\r\n    };\r\n\r\n    render() {\r\n        const loading = this.props.loading || this.state.loading;\r\n        const columns = [\r\n            {title: '歌曲名', dataIndex: 'name', key: 'name'},\r\n            {title: '时长', dataIndex: 'duration', key: 'duration', width: 75, render: (text) => (<div>{GetDuration(text)}</div>)},\r\n            {title: '歌手', dataIndex: 'artist', key: 'artist', \r\n                render: (text, record) => (\r\n                    <span className='link' onClick={()=>this.onArtistClick(record)}>\r\n                        {record.artist}</span>\r\n                )},\r\n            {title: '专辑', dataIndex: 'album', key: 'album', \r\n                render: (text, record) => (\r\n                    <span className='link' onClick={()=>this.onAlbumClick(record)}>\r\n                        《{record.album}》</span>\r\n                )},\r\n            {title: '操作', dataIndex: 'id', key: 'action', width: 150,\r\n                render: (text, record) => (<MusicAction onPlay={()=>{this.onPlay(record)}}\r\n                                                        onAddList={()=>{this.onAddList(record)}}\r\n                                                        onDownload={()=>this.onDownload(record)}/>\r\n                )},\r\n        ];\r\n        return (\r\n            <div className={style.table}>\r\n                <Table dataSource={this.state.musicList}\r\n                       loading={loading}\r\n                       pagination={this.state.pagination}\r\n                       onChange={(pagination) => {\r\n                           this.setState({\r\n                               pagination: {\r\n                                   ...this.state.pagination,\r\n                                   current: pagination.current,\r\n                                   pageSize: pagination.pageSize\r\n                               }\r\n                           }, () => {this.fetchMusicList()})\r\n                       }}\r\n                       scroll={{y:window.innerHeight-268}}\r\n                       size='small'\r\n                       columns={columns} rowKey='id'/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(MusicList)","import React, {Component} from 'react';\r\nimport { Spin, Empty } from 'antd';\r\n\r\nexport default class LoadingImg extends Component{\r\n    state = {\r\n        loading: true,\r\n        imageErr: false,\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.src !== prevProps.src){\r\n            this.setState({loading: true, imageErr: false})\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { loading, imageErr } = this.state;\r\n        return (\r\n            <div style={{minHeight: this.props.minHeight || 0, minWidth: this.props.minWIdth || 0}}>\r\n                <Spin style={{width: '100%', minHeight: this.props.minHeight || 0}} spinning={loading}>\r\n                    {imageErr === false && \r\n                        <img src={this.props.src} alt={this.props.alt || 'logo'} \r\n                             style={{opacity: loading ? '0' : '1', width: \"100%\"}}\r\n                             onLoad={()=>{this.setState({loading: false})}}\r\n                             onError={()=>this.setState({imageErr: true, loading: false})}\r\n                             onDragStart={e=>e.preventDefault()}\r\n                             />}\r\n                    {imageErr === true && <Empty />}\r\n                </Spin>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport { Table, notification, Tooltip, Popover } from 'antd';\r\nimport { PlusCircleOutlined, DashOutlined } from '@ant-design/icons';\r\nimport Axios from 'axios';\r\nimport moment from 'moment';\r\nimport Pagination from '@/settings/Pagination';\r\nimport LoadingImg from '@/lib/LoadingImg';\r\nimport MusicAction from \"@/lib/MusicAction\";\r\nimport { GetDuration } from \"@/utils\";\r\nimport style from \"./Music.module.scss\";\r\n\r\nexport default class AlbumList extends Component{\r\n    state = {\r\n        loading: false,\r\n        pagination: Pagination(),\r\n        musicList: [],\r\n        albumInfo: {},\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.album.albumId !== prevProps.album.albumId){\r\n            this.fetchAlbumDetail();\r\n        }\r\n    }\r\n\r\n    onPlay = (record) => {\r\n        this.props.onPlay(record.id, record)\r\n    };\r\n\r\n    onAddList = (record) => {\r\n        this.props.onAddList(record);\r\n    };\r\n\r\n    onAddAlbum = () => {\r\n        this.props.onAddAlbum(this.state.musicList);\r\n    };\r\n\r\n    onDownload = (record) => {\r\n        this.props.onDownload(record.id, record)\r\n    };\r\n\r\n    onArtistClick = (record) => {\r\n        this.props.onArtist(record);\r\n    };\r\n\r\n    fetchAlbumDetail = () => {\r\n        this.setState({loading: true, albumInfo: {}});\r\n        Axios.get('/albumMusic', {params: {id: this.props.album.albumId, source: this.props.album.source}})\r\n            .then(res => {\r\n                this.setState({loading: false});\r\n                if (res.data.success){\r\n                    this.setState({\r\n                        musicList: res.data.songs,\r\n                        albumInfo: res.data.album,\r\n                    })\r\n                } else {\r\n                    notification.error({message: '网络错误 获取失败', duration: null})\r\n                }\r\n            })\r\n    };\r\n\r\n    render() {\r\n        const loading = this.props.loading || this.state.loading;\r\n        const { albumInfo } = this.state;\r\n        const columns = [\r\n            {title: '歌曲名', dataIndex: 'name', key: 'name'},\r\n            {title: '时长', dataIndex: 'duration', key: 'duration', width: 75, render: (text) => (<div>{GetDuration(text)}</div>)},\r\n            {title: '歌手', dataIndex: 'artist', key: 'artist', \r\n                render: (text, record) => (\r\n                    <span className='link' onClick={()=>this.onArtistClick(record)}>{record.artist}</span>\r\n                )},\r\n            {title: '操作', dataIndex: 'id', key: 'action', width: 150,\r\n                render: (text, record) => (<MusicAction onPlay={()=>{this.onPlay(record)}}\r\n                                                        onAddList={()=>{this.onAddList(record)}}\r\n                                                        onDownload={()=>this.onDownload(record)}/>\r\n                )},\r\n        ];\r\n\r\n        return (\r\n            <div className={style.album}>\r\n                {this.props.album.albumId && <div className={style.info}>\r\n                    <LoadingImg minHeight={100} src={albumInfo.img}/>\r\n                    <div className={style.emphasize}>《{albumInfo.name}》</div>\r\n                    <div>歌手: {albumInfo.artist}</div>\r\n                    <div>公司: {albumInfo.company}</div>\r\n                    <div>发行时间: {moment(albumInfo.publishTime).format('YYYY-MM-DD')}</div>\r\n                    <Popover content={\r\n                        <Tooltip title='添加专辑中的歌曲到歌单'>\r\n                            <PlusCircleOutlined className='link' onClick={this.onAddAlbum}/>\r\n                        </Tooltip>}>\r\n                        <DashOutlined className='link'/>\r\n                    </Popover>\r\n                </div>}\r\n                <Table dataSource={this.state.musicList}\r\n                       loading={loading}\r\n                       pagination={this.state.pagination}\r\n                       onChange={(pagination) => {\r\n                           this.setState({\r\n                               pagination: {\r\n                                   ...this.state.pagination,\r\n                                   current: pagination.current,\r\n                                   pageSize: pagination.pageSize\r\n                               }\r\n                           })\r\n                       }}\r\n                       scroll={{y:window.innerHeight-268}}\r\n                       size='small'\r\n                       columns={columns} rowKey='id'/>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport { Table, notification, Tabs } from 'antd';\r\nimport Axios from 'axios';\r\nimport moment from 'moment';\r\nimport Pagination from '@/settings/Pagination';\r\nimport LoadingImg from '@/lib/LoadingImg';\r\nimport MusicAction from \"@/lib/MusicAction\";\r\nimport { GetDuration } from \"@/utils\";\r\nimport style from \"./Music.module.scss\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nexport default class artistList extends Component{\r\n    state = {\r\n        loading: false,\r\n        pagination: Pagination(),\r\n        hotList: [],\r\n        albumList: [],\r\n        artistInfo: {},\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.artist.artistId !== prevProps.artist.artistId){\r\n            this.fetchArtistDetail();\r\n            this.fetchArtistAlbum();\r\n        }\r\n    }\r\n\r\n    onPlay = (record) => {\r\n        this.props.onPlay(record.id, record)\r\n    };\r\n\r\n    onAddList = (record) => {\r\n        this.props.onAddList(record);\r\n    };\r\n\r\n    onDownload = (record) => {\r\n        this.props.onDownload(record.id, record)\r\n    };\r\n\r\n    onAlbumClick = (record) => {\r\n    \tthis.props.onAlbum(record);\r\n    };\r\n\r\n    fetchArtistDetail = () => {\r\n        this.setState({loading: true, artistInfo: {}});\r\n        Axios.get('/artistMusic', {params: {id: this.props.artist.artistId, source: this.props.artist.source}})\r\n            .then(res => {\r\n                this.setState({loading: false});\r\n                if (res.data.success){\r\n                   \tthis.setState({\r\n                   \t\thotList: res.data.songs,\r\n                   \t\tartistInfo: res.data.artist,\r\n                   \t})\r\n                } else {\r\n                    notification.error({message: '网络错误 获取歌手信息失败', duration: null})\r\n                }\r\n            })\r\n    };\r\n\r\n    fetchArtistAlbum = () => {\r\n    \tconst { pagination } = this.state;\r\n    \tlet limit = pagination.pageSize;\r\n    \tlet page = pagination.current;\r\n        this.setState({loading: true});\r\n        Axios.get('/artistAlbum', {params: {id: this.props.artist.artistId, limit: limit, page: page, source: this.props.artist.source}})\r\n            .then(res => {\r\n                this.setState({loading: false});\r\n                if (res.data.success){\r\n                   \tthis.setState({\r\n                   \t\talbumList: res.data.albums,\r\n                   \t\tpagination: {...pagination, total: res.data.albumSize}\r\n                   \t})\r\n                } else {\r\n                    notification.error({message: '网络错误 获取歌手专辑失败', duration: null})\r\n                }\r\n            })\r\n    };\r\n\r\n    render() {\r\n        const loading = this.props.loading || this.state.loading;\r\n        const { artistInfo } = this.state;\r\n        const musicColumns = [\r\n            {title: '歌曲名', dataIndex: 'name', key: 'name'},\r\n            {title: '时长', dataIndex: 'duration', key: 'duration', width: 75, render: (text) => (<div>{GetDuration(text)}</div>)},\r\n            {title: '专辑', dataIndex: 'album', key: 'album', \r\n            \trender: (text, record) => (\r\n            \t\t<span className='link' onClick={()=>this.onAlbumClick(record)}>《{record.album}》</span>\r\n            \t)},\r\n            {title: '操作', dataIndex: 'id', key: 'action', width: 150,\r\n                render: (text, record) => (<MusicAction onPlay={()=>{this.onPlay(record)}}\r\n                                                        onAddList={()=>{this.onAddList(record)}}\r\n                                                        onDownload={()=>this.onDownload(record)}/>\r\n                )},\r\n        ];\r\n\r\n        const albumColumns = [\r\n            {title: '专辑名', dataIndex: 'album', key: 'album', \r\n            \trender: (text, record) => (\r\n            \t\t<span className='link' onClick={()=>this.onAlbumClick(record)}>《{text}》</span>\r\n            \t)},\r\n            {title: '发行日期', dataIndex: 'publishTime', key: 'publishTime', render: (text) => (moment(text).format('YYYY-MM-DD'))},\r\n            {title: '公司', dataIndex: 'company', key: 'company'},\r\n            {title: '歌曲数量', dataIndex: 'size', key: 'size'},\r\n        ];\r\n\r\n        return (\r\n            <div className={style.album}>\r\n                {this.props.artist.artistId && <div className={style.info}>\r\n                \t<LoadingImg minHeight={100} src={artistInfo.img}/>\r\n                    <div className={style.emphasize}>{artistInfo.name}</div>\r\n                </div>}\r\n                <Tabs type=\"card\" tabPosition='left' size='small'>\r\n\t\t          \t<TabPane tab=\"Top50\" key=\"music\">\r\n\t\t            \t<Table dataSource={this.state.hotList}\r\n\t\t                       loading={loading}\r\n\t\t                       pagination={false}\r\n\t\t                       scroll={{y:window.innerHeight-268}}\r\n\t\t                       size='small'\r\n\t\t                       columns={musicColumns} rowKey='id'/>\r\n\t\t          \t</TabPane>\r\n\t\t          \t<TabPane tab=\"专辑\" key=\"album\">\r\n\t\t          \t  \t<Table dataSource={this.state.albumList}\r\n\t\t                       loading={loading}\r\n\t\t                       pagination={this.state.pagination}\r\n\t\t                       onChange={(pagination) => {\r\n\t\t                            this.setState({\r\n\t\t                                pagination: {\r\n\t\t                                    ...this.state.pagination,\r\n\t\t                                    current: pagination.current,\r\n\t\t                                    pageSize: pagination.pageSize\r\n\t\t                                }\r\n\t\t                            }, () => {this.fetchArtistAlbum()})\r\n\t\t                       }}\r\n\t\t                       size='small'\r\n\t\t                       scroll={{y:window.innerHeight-268}}\r\n\t\t                       columns={albumColumns} rowKey='albumId'/>\r\n\t\t         \t</TabPane>\r\n\t\t        </Tabs>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport { Table, Tabs, Switch } from 'antd';\r\nimport { CloseOutlined, SyncOutlined } from '@ant-design/icons';\r\nimport MusicAction from \"@/lib/MusicAction\";\r\nimport { GetDuration } from \"@/utils\";\r\nimport style from './Music.module.scss';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nexport default class PlayList extends Component{\r\n    state = {\r\n        loading: false,\r\n        editMod: false,\r\n        listType: 'customList',\r\n    };\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n    }\r\n\r\n    onRemove = (record) => {\r\n        const { listType } = this.state;\r\n        this.props.onUpdate(listType, 'remove', record);\r\n    };\r\n\r\n    onPlay = (record) => {\r\n        this.props.onPlay(record.id, record, this.state.listType)\r\n    };\r\n\r\n    onAddList = (record) => {\r\n        this.props.onAddList(record);\r\n    };\r\n\r\n    onDownload = (record) => {\r\n        this.props.onDownload(record.id, record)\r\n    };\r\n\r\n    onArtistClick = (record) => {\r\n        this.props.onArtist(record);\r\n    };\r\n\r\n    onModChange = (v) => {\r\n        this.props.onModChange(v);\r\n    };\r\n\r\n    render() {\r\n        const { customList, recentList, currentType, audioData } = this.props;\r\n        const { editMod, listType } = this.state;\r\n        const loading = this.props.loading || this.state.loading;\r\n        const columns = [\r\n            {title: '', dataIndex: 'name', key: 'remove', width: 30,\r\n                render: (text, record) => (\r\n                    <div>\r\n                        {editMod ? <CloseOutlined className='link' onClick={()=>this.onRemove([record])}/> : ''}\r\n                    </div>\r\n                )},\r\n            {title: '', dataIndex: 'name', key: 'playing', width: 30,\r\n                render: (text, record) => (\r\n                    <div>\r\n                        {listType === currentType && record.id === audioData.id &&\r\n                        <SyncOutlined spin className={style.tableColIcon}/>}\r\n                    </div>\r\n                )},\r\n            {title: '歌曲名', dataIndex: 'name', key: 'name'},\r\n            {title: '时长', dataIndex: 'duration', key: 'duration', width: 75, render: (text) => (<div>{GetDuration(text)}</div>)},\r\n            {title: '歌手', dataIndex: 'artist', key: 'artist',\r\n                render: (text, record) => (\r\n                    <span className='link' onClick={()=>this.onArtistClick(record)}>{record.artist}</span>\r\n                )},\r\n            {title: '操作', dataIndex: 'id', key: 'action', width: 150,\r\n                render: (text, record) => (\r\n                    <MusicAction btnList={listType === 'customList' ? ['play', 'download'] : ['play', 'add', 'download']}\r\n                                 onPlay={()=>{this.onPlay(record)}}\r\n                                 onAddList={()=>{this.onAddList(record)}}\r\n                                 onDownload={()=>this.onDownload(record)}/>\r\n                )},\r\n        ];\r\n\r\n        return (\r\n            <div>\r\n                <div className={style.header}>\r\n                    <div className={style.item}>\r\n                        <div className={style.text}>编辑</div>\r\n                        <Switch size='middle' onChange={(v)=>this.setState({editMod: v})}/>\r\n                    </div>\r\n                    <div className={style.item}>\r\n                        <div className={style.text}>列表播放</div>\r\n                        <Switch size='middle' onChange={(v)=>this.onModChange(v ? 'list' : 'solo')}/>\r\n                    </div>\r\n                </div>\r\n                <Tabs type=\"card\" tabPosition='left' size='small' activeKey={this.state.listType}\r\n                      onChange={(v)=>this.setState({listType: v})}>\r\n                    <TabPane tab=\"歌单\" key=\"customList\">\r\n                        <Table dataSource={customList}\r\n                               loading={loading}\r\n                               rowClassName={(record) => {\r\n                                   return (listType === currentType && record.id === audioData.id) ? 'highlightRow' : ''\r\n                               }}\r\n                               scroll={{y:window.innerHeight-268}}\r\n                               size='small'\r\n                               columns={columns} rowKey='id'/>\r\n                    </TabPane>\r\n                    <TabPane tab=\"最近播放\" key=\"recentList\">\r\n                        <Table dataSource={recentList}\r\n                               loading={loading}\r\n                               rowClassName={(record) => {\r\n                                   return (listType === currentType && record.id === audioData.id) ? 'highlightRow' : ''\r\n                               }}\r\n                               scroll={{y:window.innerHeight-268}}\r\n                               size='small'\r\n                               columns={columns} rowKey='id'/>\r\n                    </TabPane>\r\n                </Tabs>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport Axios from 'axios';\r\nimport AudioControl from \"./AudioControl\";\r\nimport MusicList from \"./MusicList\";\r\nimport AlbumList from \"./AlbumList\";\r\nimport ArtistList from \"./ArtistList\";\r\nimport PlayList from \"./PlayList\";\r\nimport { notification, Tabs } from 'antd';\r\nimport { DownloadBlob } from \"@/utils\";\r\nimport style from './Music.module.scss';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nexport default class Music extends Component{\r\n    state = {\r\n        tab: 'music',\r\n        loading: false,\r\n        audioSrc: '',\r\n        audioData: {},\r\n        album: {},\r\n        artist: {},\r\n        recentList: [],\r\n        customList: [],\r\n        currentPlayList: 'recentList',\r\n        playMod: 'soloSingle',\r\n        playingList: [],\r\n    };\r\n\r\n    componentDidMount(){\r\n        this.setState({\r\n            recentList: JSON.parse(window.localStorage.getItem('recentList')) || [],\r\n            customList: JSON.parse(window.localStorage.getItem('customList')) || [],\r\n        })\r\n    }\r\n\r\n    updatePlayList = (listType, action, records) => {\r\n        let list = JSON.parse(window.localStorage.getItem(listType)) || [];\r\n        let result = {};\r\n        records.forEach(record => {\r\n            let index = -1;\r\n            list.forEach((item, i) => {\r\n                if (item.id === record.id){\r\n                    index = i;\r\n                }\r\n            });\r\n            switch (action) {\r\n                case 'remove':\r\n                    if (index >= 0){list.splice(index, 1)}\r\n                    break;\r\n                case 'add':\r\n                    if (index === -1){list.push(record)}\r\n                    break;\r\n                case 'toTop':\r\n                    if (index >= 0){list.splice(index, 1)}\r\n                    list.splice(0, 0, record);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        });\r\n        window.localStorage.setItem(listType, JSON.stringify(list));\r\n        result[listType] = list;\r\n        this.setState({...result})\r\n    };\r\n\r\n    onAlbum = (album) => {\r\n        this.setState({tab: 'album', album: album});\r\n    };\r\n\r\n    onArtist = (artist) => {\r\n        this.setState({tab: 'artist', artist: artist})\r\n    };\r\n\r\n    onPlay = (id, record, listType='recentList') => {\r\n        this.updatePlayList('recentList', 'toTop', [record]);\r\n        this.setState({currentPlayList: listType});\r\n        this.fetchPlay(id, record);\r\n    };\r\n\r\n    onAddList = (record) => {\r\n        const { customList } = this.state;\r\n        let index = -1;\r\n        customList.forEach((item, i) => {\r\n            if (item.id === record.id){index = i}\r\n        });\r\n        if (index >= 0){\r\n            notification.warning({message: '歌曲已在歌单中', duration: 4})\r\n        } else {\r\n            this.updatePlayList('customList', 'add', [record]);\r\n            notification.success({message: '添加成功', duration: 4});\r\n        }\r\n    };\r\n\r\n    onAddAlbum = (records) => {\r\n        this.updatePlayList('customList', 'add', records);\r\n        notification.success({message: '添加成功', duration: 4})\r\n    };\r\n\r\n    onAudioEnd = (next=0) => {\r\n        if (this.state.playMod === 'list' || next !== 0){\r\n            let list = JSON.parse(window.localStorage.getItem(this.state.currentPlayList)) || [];\r\n            let index = -1;\r\n            list.forEach((item, i) => {\r\n                if (item.id === this.state.audioData.id){index = i}\r\n            });\r\n            if (index >= 0){\r\n                index += next >= 0 ? 1 : -1;\r\n                if (index >= list.length){index = 0}\r\n                if (index < 0){index = Math.max(list.length - 1, 0)}\r\n                let record = list[index];\r\n                if (record){this.fetchPlay(record.id, record)}\r\n            }\r\n        }\r\n    };\r\n\r\n    fetchPlay = (id, record) => {\r\n        this.setState({loading: true, audioData: record});\r\n        Axios.get('/download', {\r\n            params: {id: id, source: record.source},\r\n            responseType: 'blob'\r\n        }).then(res => {\r\n            this.setState({loading: false});\r\n            if (res.data.size > 17){\r\n                this.setState({audioSrc: res})\r\n            } else {\r\n                notification.error({message: '网络错误 获取失败', duration: null})\r\n            }\r\n        })\r\n    };\r\n\r\n    fetchDownload = (id, record) => {\r\n        this.setState({loading: true});\r\n        Axios.get('/download', {\r\n            params: {id: id, source: record.source},\r\n            responseType: 'blob'\r\n        }).then(res => {\r\n            this.setState({loading: false});\r\n            if (res.data.size > 17){\r\n                DownloadBlob(res, record.name+'.mp3');\r\n            } else {\r\n                notification.error({message: '网络错误 获取失败', duration: null})\r\n            }\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const { loading, playMod, recentList, customList, audioData, currentPlayList } = this.state;\r\n        const TabExtra = (\r\n            <AudioControl src={this.state.audioSrc} audioData={audioData} playMod={playMod}\r\n                          onAudioEnd={this.onAudioEnd}/>\r\n        );\r\n        return (\r\n            <div className={style.music}>\r\n                <Tabs activeKey={this.state.tab} tabBarExtraContent={TabExtra} \r\n                        onChange={(v)=>this.setState({tab: v})}>\r\n                    <TabPane tab=\"歌曲\" key=\"music\" forceRender>\r\n                        <MusicList loading={loading}\r\n                                   onUpdate={()=>this.setState({tab: 'music'})}\r\n                                   onPlay={this.onPlay} onAddList={this.onAddList} onDownload={this.fetchDownload}\r\n                                   onAlbum={this.onAlbum} onArtist={this.onArtist}/>\r\n                    </TabPane>\r\n                    <TabPane tab=\"专辑\" key=\"album\" forceRender>\r\n                        <AlbumList loading={loading}\r\n                                   album={this.state.album}\r\n                                   onPlay={this.onPlay} onAddList={this.onAddList} onDownload={this.fetchDownload}\r\n                                   onArtist={this.onArtist} onAddAlbum={this.onAddAlbum}/>\r\n                    </TabPane>\r\n                    <TabPane tab=\"歌手\" key=\"artist\" forceRender>\r\n                        <ArtistList loading={loading} \r\n                                    artist={this.state.artist}\r\n                                    onPlay={this.onPlay} onAddList={this.onAddList} onDownload={this.fetchDownload}\r\n                                    onAlbum={this.onAlbum}/>\r\n                    </TabPane>\r\n                    <TabPane tab=\"播放列表\" key=\"play\" forceRender>\r\n                        <PlayList loading={loading}\r\n                                  recentList={recentList}\r\n                                  customList={customList}\r\n                                  currentType={currentPlayList} audioData={audioData}\r\n                                  onPlay={this.onPlay} onAddList={this.onAddList} onDownload={this.fetchDownload}\r\n                                  onArtist={this.onArtist} onUpdate={this.updatePlayList}\r\n                                  onModChange={(v)=>this.setState({playMod: v})}/>\r\n                    </TabPane>\r\n                </Tabs>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport { Input, Select } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { searchMusic } from \"@/redux/action\";\r\nimport Axios from 'axios';\r\nimport Music from '@/pages/music/Music';\r\nimport style from './Main.module.scss';\r\n\r\nconst { Search } = Input;\r\nconst { Option } = Select;\r\n\r\nconst mapStateToProps = state => {return state};\r\n\r\nclass Main extends Component{\r\n    state = {\r\n        keyword: '',\r\n        searchType: 'net',\r\n    };\r\n\r\n    onTest = () => {\r\n        Axios.get('/test')\r\n            .then(res => { \r\n                console.log(res);\r\n            })\r\n    };\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    onSearch = () => {\r\n        const { keyword, searchType } = this.state;\r\n        this.props.dispatch(searchMusic(keyword, searchType))\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className={style.main}>\r\n            \t<div className={style.topBar}>\r\n                    <div className={style.content}>\r\n                        <div className={style.left}>\r\n                            <div className={style.title}>AEON</div>\r\n                            <Select defaultValue='net' onChange={(v)=>this.setState({searchType: v})} className={style.select}>\r\n                                <Option value='net'>网易云</Option>\r\n                                <Option value='qq'>qq音乐</Option>\r\n                            </Select>\r\n                            <Search onSearch={this.onSearch} value={this.state.keyword}\r\n                                    onChange={(v)=>this.setState({keyword: v.target.value})}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            \t<div className={style.container}>\r\n                    <div className={style.content}>\r\n                        <Music/>\r\n                    </div>\r\n            \t</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Main)","import React from 'react';\r\nimport Main from '@/pages/main/Main';\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Switch>\r\n            <Route exact path={['/']} component={Main}/>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport reducer from '@/redux/reducer';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nlet store = createStore(reducer)\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"audioControl\":\"AudioControl_audioControl__3PBFB\",\"interface\":\"AudioControl_interface__1yWJv\",\"progressBar\":\"AudioControl_progressBar__1aRaD\",\"current\":\"AudioControl_current__3wQJK\",\"progress\":\"AudioControl_progress__1eppT\",\"item\":\"AudioControl_item__14sVw\",\"extend\":\"AudioControl_extend__FOHUT\",\"info\":\"AudioControl_info__1467a\",\"action\":\"AudioControl_action__20Qtg\",\"volumePop\":\"AudioControl_volumePop__3QILr\",\"slider\":\"AudioControl_slider__35dJX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Main_main__QTuXY\",\"topBar\":\"Main_topBar__2JKae\",\"content\":\"Main_content__22KMh\",\"left\":\"Main_left__xU9bH\",\"select\":\"Main_select__2CJHC\",\"title\":\"Main_title__3cw8a\",\"container\":\"Main_container__1fmOv\"};"],"sourceRoot":""}