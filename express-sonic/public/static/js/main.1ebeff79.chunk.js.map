{"version":3,"sources":["pages/music/Music.module.scss","redux/action/index.js","redux/reducer/searchMusic.js","redux/reducer/index.js","utils/index.js","pages/music/AudioControl.jsx","settings/Pagination.js","lib/MusicAction.jsx","pages/music/MusicList.jsx","lib/LoadingImg.jsx","pages/music/AlbumList.jsx","pages/music/ArtistList.jsx","pages/music/PlayList.jsx","pages/music/Music.jsx","pages/main/Main.jsx","App.js","serviceWorker.js","index.js","pages/music/AudioControl.module.scss","pages/main/Main.module.scss"],"names":["module","exports","searchMusic","searchKey","searchType","type","initialState","state","action","Object","assign","combineReducers","DownloadBlob","data","name","fileName","blob","Blob","objectUrl","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","GetDuration","str","unit","duration","moment","hour","hours","minute","minutes","second","seconds","toString","length","AudioControl","audioSource","current","paused","volume","loop","actMenuVisible","extendVisible","initAudio","props","src","source","setState","interval","setInterval","isNaN","audio","clearInterval","play","Math","floor","removeEventListener","onTimeUpdate","addEventListener","progressBar","onmousedown","onDrageProgress","onEndEvent","newCurrent","currentTime","onPlay","pause","onVolumeChange","v","event","preventDefault","totalWidth","getElementById","offsetWidth","offsetX","onmousemove","e","onmouseup","onAudioEnd","next","onDownload","suffix","audioData","this","prevProps","prevState","snapshot","extendAction","className","style","extend","info","join","artist","StepBackwardOutlined","onClick","StepForwardOutlined","ActMenu","key","Item","disabled","checkedChildren","unCheckedChildren","onChange","Volume","volumePop","slider","vertical","value","audioControl","content","placement","onVisibleChange","interface","boxShadow","id","item","shape","size","icon","CaretRightOutlined","PauseOutlined","progress","width","round","NotificationOutlined","cursor","overlay","visible","Component","Pagination","defaultCurrent","defaultPageSize","hideOnSinglePage","pageSize","pageSizeOptions","showSizeChanger","showTotal","total","range","MusicAction","btnList","indexOf","title","PlayCircleOutlined","PlusCircleOutlined","onAddList","CloudDownloadOutlined","MusicList","loading","musicList","keyword","pagination","onSearch","fetchMusicList","onUpdate","onAlbumClick","record","onAlbum","onArtistClick","onArtist","limit","page","Axios","get","params","then","res","success","songs","notification","error","message","columns","dataIndex","render","text","album","table","dataSource","scroll","y","window","innerHeight","rowKey","connect","LoadingImg","imageErr","minHeight","minWidth","minWIdth","spinning","alt","opacity","onLoad","onError","onDragStart","AlbumList","albumInfo","onAddAlbum","fetchAlbumDetail","albumId","img","emphasize","company","publishTime","format","DashOutlined","TabPane","artistList","hotList","albumList","artistInfo","fetchArtistDetail","artistId","fetchArtistAlbum","albums","albumSize","musicColumns","albumColumns","tabPosition","tab","PlayList","editMod","listType","customPagination","recentPagination","onRemove","onModChange","onPositionChange","num","customList","recentList","currentType","rowAct","onArrow","CloseOutlined","SyncOutlined","spin","tableColIcon","playList","header","activeKey","rowClassName","ArrowAction","CaretUpOutlined","CaretDownOutlined","arrow","Music","audioSrc","currentPlayList","playMod","playingList","updatePlayList","records","list","JSON","parse","localStorage","getItem","result","forEach","index","i","splice","push","setItem","stringify","fetchPlay","warning","max","responseType","fetchDownload","TabExtra","music","tabBarExtraContent","forceRender","Search","Option","Main","onTest","console","log","dispatch","main","topBar","left","defaultValue","select","target","container","App","exact","path","component","Boolean","location","hostname","match","store","createStore","reducer","ReactDOM","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.1ebeff79.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"music\":\"Music_music__1jVhh\",\"header\":\"Music_header__4rzex\",\"input\":\"Music_input__2yrdG\",\"select\":\"Music_select__2D_Bt\",\"item\":\"Music_item__1W2Hr\",\"text\":\"Music_text__2wKo5\",\"table\":\"Music_table__uDKNk\",\"album\":\"Music_album__32saU\",\"info\":\"Music_info__2Stfu\",\"emphasize\":\"Music_emphasize__1Ds_r\",\"playList\":\"Music_playList__3glR-\",\"rowAct\":\"Music_rowAct__Qd3lg\",\"arrow\":\"Music_arrow__3okJl\"};","export const SEARCH_MUSIC = 'SEARCH_MUSIC';\n\nexport const searchMusic = (searchKey, searchType) => {\n    return {type: SEARCH_MUSIC, searchKey, searchType}\n};","import { SEARCH_MUSIC } from \"../action\";\n\nconst initialState = {\n\tsearchKey: '',\n\tsearchType: '',\n};\n\nconst searchMusic = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase SEARCH_MUSIC:\n\t\t\treturn Object.assign({}, state, {\n\t\t\t\tsearchKey: action.searchKey,\n\t\t\t\tsearchType: action.searchType,\n\t\t\t});\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default searchMusic;","import { combineReducers } from 'redux';\nimport searchMusic from './searchMusic';\n\nexport default combineReducers({\n\tsearchMusic\n})","import moment from 'moment';\n\nconst DownloadBlob = (data, name='') => {\n    let fileName = name || 'test';\n    let blob = new Blob([data.data]);\n    let objectUrl = URL.createObjectURL(blob);\n    let a = document.createElement('a');\n    a.href = objectUrl;\n    a.download = fileName;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(objectUrl);\n};\n\nconst GetDuration = (str, unit='milliseconds') => {\n    let duration = moment.duration(str, unit);\n    let hour = duration.hours() > 1 ? duration.hours() + 'h' : '';\n    let minute = duration.minutes() + ':';\n    let second = duration.seconds().toString();\n    if (minute.length < 3){minute = '0' + minute}\n    if (second.length < 2){second = '0' + second}\n    return hour + minute + second;\n}\n\nconst getParams = (url) => {\n    try {\n        url = url.match(/\\?([^#]+)/)[1];\n        url = decodeURIComponent(url);\n        let obj = {}, arr = url.split('&');\n        for (let i = 0; i < arr.length; i++) {\n            let subArr = arr[i].split('=');\n            obj[subArr[0]] = subArr[1];\n        }\n        return obj;\n    } catch (err) {\n        return null;\n    }\n};\n\nexport {\n    DownloadBlob,\n    GetDuration,\n    getParams\n}","import React, { Component } from \"react\";\nimport { Menu, Dropdown, Space, Popover, Slider, Switch, Button } from 'antd';\nimport { CaretRightOutlined, PauseOutlined, NotificationOutlined, StepBackwardOutlined, StepForwardOutlined } from '@ant-design/icons';\nimport { GetDuration, DownloadBlob } from '@/utils'\nimport style from './AudioControl.module.scss';\n\nexport default class AudioControl extends Component{\n    state = {\n        audioSource: '',\n        duration: '0:00',\n        current: '0:00',\n        paused: true,\n        volume: 100,\n        loop: false,\n        actMenuVisible: false,\n        extendVisible: false,\n    };\n\n    componentDidMount(){\n        this.audio = document.getElementById('audioTag');\n        this.progressBar = document.getElementById('progressBar');\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot){\n        if (this.props.src !== prevProps.src){\n            this.initAudio();\n        }\n    }\n\n    initAudio = () => {\n        let blob = new Blob([this.props.src.data]);\n        let source = URL.createObjectURL(blob);\n        this.setState({audioSource: source}, () => {\n            let interval = setInterval(()=>{\n                if (!isNaN(this.audio.duration)){\n                    clearInterval(interval);\n                    this.audio.play();\n                    this.setState({\n                        duration: Math.floor(this.audio.duration),\n                        paused: false\n                    })\n                }\n            }, 100);\n            this.audio.removeEventListener('timeupdate', this.onTimeUpdate);\n            this.audio.addEventListener('timeupdate', this.onTimeUpdate);\n            this.progressBar.onmousedown = this.onDrageProgress;\n            this.audio.removeEventListener('ended', this.onEndEvent);\n            this.audio.addEventListener('ended', this.onEndEvent);\n        })\n    };\n\n    onTimeUpdate = () => {\n        let { current } = this.state;\n        let newCurrent = Math.floor(this.audio.currentTime);\n        if (newCurrent !== current){\n            this.setState({current: newCurrent})\n        }\n    };\n\n    onPlay = () => {\n        if (this.audio.paused){\n            this.audio.play();\n        } else {\n            this.audio.pause();\n        }\n        this.setState({paused: this.audio.paused});\n    };\n\n    onVolumeChange = (v) => {\n        this.setState({volume: v}, () => {\n            this.audio.volume = this.state.volume / 100;\n        })\n    };\n\n    onDrageProgress = (event) => {\n        event.preventDefault();\n        let totalWidth = document.getElementById('progressBar').offsetWidth;\n\n        this.audio.currentTime = this.audio.duration * event.offsetX / totalWidth;\n        this.progressBar.onmousemove = (e => {\n            this.audio.currentTime = this.audio.duration * e.offsetX / totalWidth\n        });\n        document.body.onmouseup = () => {\n            this.progressBar.onmousemove = null;\n            document.body.onmouseup = null;\n        }\n    };\n\n    onEndEvent = () => {\n        this.onAudioEnd(0);\n    }\n\n    onAudioEnd = (next = 0) => {\n        this.audio.currentTime = 0;\n        if (this.state.loop){\n            this.audio.play();\n        } else {\n            this.audio.pause();\n            this.setState({paused: true});\n            this.props.onAudioEnd(next);\n        }\n    };\n\n    onDownload = () => {\n        let suffix = this.props.audioData.source === 'qq' ? '.m4a' : '.mp3';\n        DownloadBlob(this.props.src, this.props.audioData.name + suffix);\n    };\n\n    render() {\n        const { paused, duration, current, volume, audioSource, actMenuVisible, extendVisible } = this.state;\n        const extendAction = (\n            <div className={style.extend}>\n                <div className={[style.info, 'ellipsis'].join(' ')}>\n                    当前播放: {this.props.audioData.name ? `${this.props.audioData.name} - ${this.props.audioData.artist}` : '无'}\n                </div>\n                <div className={style.action}>\n                    <StepBackwardOutlined className='link' onClick={()=>this.onAudioEnd(-1)}/>\n                    <StepForwardOutlined className='link' onClick={()=>this.onAudioEnd(1)}/>\n                </div>\n            </div>\n        );\n        const ActMenu = (\n            <Menu onClick={(e)=>{if (e.key !== 'loopBtn'){this.setState({actMenuVisible: false})}}}>\n                <Menu.Item key='downloadBtn' disabled={!audioSource} onClick={this.onDownload}>\n                    下载\n                </Menu.Item>\n                <Menu.Item key='loopBtn'>\n                    <Space>\n                        循环<Switch checkedChildren=\"开\" unCheckedChildren=\"关\"\n                                    onChange={(v)=>this.setState({loop: v})}/>\n                    </Space>\n                </Menu.Item>\n            </Menu>\n        );\n        const Volume = (\n            <div className={style.volumePop}>\n                <Slider className={style.slider} vertical value={volume} onChange={this.onVolumeChange}/>\n            </div>\n        );\n\n        return (\n            <div className={style.audioControl}>\n                <Popover content={extendAction} placement=\"bottomLeft\"\n                          onVisibleChange={(v)=>this.setState({extendVisible: v})}>\n                    <Space className={style.interface} style={{boxShadow: extendVisible ? '0 0 5px #e5ce00' : 'none'}}>\n                        <audio id=\"audioTag\" src={audioSource}></audio>\n                        <div className={style.item}>\n                            <Button shape=\"circle\" onClick={this.onPlay} size='small' disabled={!audioSource}\n                                    icon={paused ? <CaretRightOutlined /> : <PauseOutlined />} />\n                        </div>\n                        <div className={style.item}>{GetDuration(current, 'seconds')}/{GetDuration(duration, 'seconds')}</div>\n                        <div className={style.progressBar}>\n                            <div id='progressBar' className={style.current}>\n                                <div id='currentProgressBar' className={style.progress}\n                                    style={{width: Math.round(100*current/duration, 0)+'%' || '0%'}}>\n                                </div>\n                            </div>\n                        </div>\n                        <div className={style.item}>\n                            <Popover placement=\"bottom\" content={Volume}>\n                                <NotificationOutlined style={{cursor: 'pointer'}}/>\n                            </Popover>\n                        </div>\n                        <div className={style.item}>\n                            <Dropdown overlay={ActMenu} visible={actMenuVisible}\n                                    onVisibleChange={(v)=>this.setState({actMenuVisible: v})}>\n                                <Button size='small'>更多</Button>\n                            </Dropdown>\n                        </div>\n                    </Space>\n                </Popover>\n            </div>\n        )\n    }\n\n}","const Pagination = () => {\n    return {\n        defaultCurrent: 1,\n        defaultPageSize: 10,\n        hideOnSinglePage: false,\n        current: 1,\n        pageSize: 10,\n        pageSizeOptions: ['10', '20', '50', '100'],\n        showSizeChanger: true,\n        showTotal: function (total, range) {\n            return `共${total}条`;\n        },\n        total: 0\n    };\n};\n\nexport default Pagination;","import React, {Component} from 'react';\nimport { Tooltip } from 'antd';\nimport { PlusCircleOutlined, PlayCircleOutlined, CloudDownloadOutlined  } from '@ant-design/icons';\n\nexport default class MusicAction extends Component{\n    state = {\n        btnList: this.props.btnList || ['play', 'add', 'download']\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.btnList !== prevProps.btnList){\n            this.setState({btnList: this.props.btnList || ['play', 'add', 'download']})\n        }\n    }\n\n    render() {\n        const { btnList } = this.state;\n        return (\n            <div>\n                {btnList.indexOf('play') >= 0 && <Tooltip title='播放'>\n                    <PlayCircleOutlined className='link' onClick={this.props.onPlay}/>\n                </Tooltip>}\n                {btnList.indexOf('add') >= 0 && <Tooltip title='加入歌单'>\n                    <PlusCircleOutlined className='link' onClick={this.props.onAddList}/>\n                </Tooltip>}\n                {btnList.indexOf('download') >= 0 && <Tooltip title='下载'>\n                    <CloudDownloadOutlined className='link' onClick={this.props.onDownload}/>\n                </Tooltip>}\n            </div>\n\n        )\n    }\n}","import React, {Component} from 'react';\nimport { Table, notification } from 'antd';\nimport { connect } from 'react-redux';\nimport Axios from 'axios';\nimport Pagination from '@/settings/Pagination';\nimport MusicAction from \"@/lib/MusicAction\";\nimport { GetDuration } from \"@/utils\";\nimport style from './Music.module.scss';\n\nconst mapStateToProps = state => {return state};\n\nclass MusicList extends Component{\n    state = {\n        loading: false,\n        musicList: [],\n        keyword: '',\n        type: 'net',\n        audio: '',\n        pagination: Pagination(),\n        audioData: {},\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.searchMusic !== prevProps.searchMusic && this.props.searchMusic){\n            this.onSearch(this.props.searchMusic.searchKey, this.props.searchMusic.searchType);\n        }\n    }\n\n    onSearch = (keyword, type) => {\n        this.setState({\n            keyword: keyword,\n            type: type,\n            pagination: {...this.state.pagination, current: 1}\n        }, () => {this.fetchMusicList()});\n        this.props.onUpdate();\n    };\n\n    onAlbumClick = (record) => {\n        this.props.onAlbum(record);\n    };\n\n    onArtistClick = (record) => {\n        this.props.onArtist(record);\n    };\n\n    onPlay = (record) => {\n        this.props.onPlay(record.id, record)\n    };\n\n    onAddList = (record) => {\n        this.props.onAddList(record);\n    };\n\n    onDownload = (record) => {\n        this.props.onDownload(record.id, record)\n    };\n\n    fetchMusicList = () => {\n        const { pagination, keyword, type } = this.state;\n        let limit = pagination.pageSize;\n        let page = pagination.current;\n        this.setState({loading: true});\n        Axios.get('/search', {params: {source: type, keyword: keyword, limit: limit, page: page}})\n            .then(res => { \n                this.setState({loading: false});\n                if (res.data.success){\n                    this.setState({\n                        musicList: res.data.songs,\n                        pagination: {...pagination, total: res.data.total},\n                    })\n                } else {\n                    notification.error({message: '网络错误 获取失败', duration: null})\n                }\n            })\n    };\n\n    render() {\n        const loading = this.props.loading || this.state.loading;\n        const columns = [\n            {title: '歌曲名', dataIndex: 'name', key: 'name'},\n            {title: '时长', dataIndex: 'duration', key: 'duration', width: 75, render: (text) => (<div>{GetDuration(text)}</div>)},\n            {title: '歌手', dataIndex: 'artist', key: 'artist', \n                render: (text, record) => (\n                    <span className='link' onClick={()=>this.onArtistClick(record)}>\n                        {record.artist}</span>\n                )},\n            {title: '专辑', dataIndex: 'album', key: 'album', \n                render: (text, record) => (\n                    <span className='link' onClick={()=>this.onAlbumClick(record)}>\n                        《{record.album}》</span>\n                )},\n            {title: '操作', dataIndex: 'id', key: 'action', width: 150,\n                render: (text, record) => (<MusicAction onPlay={()=>{this.onPlay(record)}}\n                                                        onAddList={()=>{this.onAddList(record)}}\n                                                        onDownload={()=>this.onDownload(record)}/>\n                )},\n        ];\n        return (\n            <div className={style.table}>\n                <Table dataSource={this.state.musicList}\n                       loading={loading}\n                       pagination={this.state.pagination}\n                       onChange={(pagination) => {\n                           this.setState({\n                               pagination: {\n                                   ...this.state.pagination,\n                                   current: pagination.current,\n                                   pageSize: pagination.pageSize\n                               }\n                           }, () => {this.fetchMusicList()})\n                       }}\n                       scroll={{y:window.innerHeight-268}}\n                       size='small'\n                       columns={columns} rowKey='id'/>\n            </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(MusicList)","import React, {Component} from 'react';\nimport { Spin, Empty } from 'antd';\n\nexport default class LoadingImg extends Component{\n    state = {\n        loading: true,\n        imageErr: false,\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.src !== prevProps.src){\n            this.setState({loading: true, imageErr: false})\n        }\n    }\n\n    render() {\n        const { loading, imageErr } = this.state;\n        return (\n            <div style={{minHeight: this.props.minHeight || 0, minWidth: this.props.minWIdth || 0}}>\n                <Spin style={{width: '100%', minHeight: this.props.minHeight || 0}} spinning={loading}>\n                    {imageErr === false && \n                        <img src={this.props.src} alt={this.props.alt || 'logo'} \n                             style={{opacity: loading ? '0' : '1', width: \"100%\"}}\n                             onLoad={()=>{this.setState({loading: false})}}\n                             onError={()=>this.setState({imageErr: true, loading: false})}\n                             onDragStart={e=>e.preventDefault()}\n                             />}\n                    {imageErr === true && <Empty />}\n                </Spin>\n            </div>\n            \n        )\n    }\n}","import React, {Component} from 'react';\nimport { Table, notification, Tooltip, Popover } from 'antd';\nimport { PlusCircleOutlined, DashOutlined } from '@ant-design/icons';\nimport Axios from 'axios';\nimport moment from 'moment';\nimport Pagination from '@/settings/Pagination';\nimport LoadingImg from '@/lib/LoadingImg';\nimport MusicAction from \"@/lib/MusicAction\";\nimport { GetDuration } from \"@/utils\";\nimport style from \"./Music.module.scss\";\n\nexport default class AlbumList extends Component{\n    state = {\n        loading: false,\n        pagination: Pagination(),\n        musicList: [],\n        albumInfo: {},\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.album.albumId !== prevProps.album.albumId){\n            this.fetchAlbumDetail();\n        }\n    }\n\n    onPlay = (record) => {\n        this.props.onPlay(record.id, record)\n    };\n\n    onAddList = (record) => {\n        this.props.onAddList(record);\n    };\n\n    onAddAlbum = () => {\n        this.props.onAddAlbum(this.state.musicList);\n    };\n\n    onDownload = (record) => {\n        this.props.onDownload(record.id, record)\n    };\n\n    onArtistClick = (record) => {\n        this.props.onArtist(record);\n    };\n\n    fetchAlbumDetail = () => {\n        this.setState({loading: true, albumInfo: {}});\n        Axios.get('/albumMusic', {params: {id: this.props.album.albumId, source: this.props.album.source}})\n            .then(res => {\n                this.setState({loading: false});\n                if (res.data.success){\n                    this.setState({\n                        musicList: res.data.songs,\n                        albumInfo: res.data.album,\n                    })\n                } else {\n                    notification.error({message: '网络错误 获取失败', duration: null})\n                }\n            })\n    };\n\n    render() {\n        const loading = this.props.loading || this.state.loading;\n        const { albumInfo } = this.state;\n        const columns = [\n            {title: '歌曲名', dataIndex: 'name', key: 'name'},\n            {title: '时长', dataIndex: 'duration', key: 'duration', width: 75, render: (text) => (<div>{GetDuration(text)}</div>)},\n            {title: '歌手', dataIndex: 'artist', key: 'artist', \n                render: (text, record) => (\n                    <span className='link' onClick={()=>this.onArtistClick(record)}>{record.artist}</span>\n                )},\n            {title: '操作', dataIndex: 'id', key: 'action', width: 150,\n                render: (text, record) => (<MusicAction onPlay={()=>{this.onPlay(record)}}\n                                                        onAddList={()=>{this.onAddList(record)}}\n                                                        onDownload={()=>this.onDownload(record)}/>\n                )},\n        ];\n\n        return (\n            <div className={style.album}>\n                {this.props.album.albumId && <div className={style.info}>\n                    <LoadingImg minHeight={100} src={albumInfo.img}/>\n                    <div className={style.emphasize}>《{albumInfo.name}》</div>\n                    <div>歌手: {albumInfo.artist}</div>\n                    <div>公司: {albumInfo.company}</div>\n                    <div>发行时间: {moment(albumInfo.publishTime).format('YYYY-MM-DD')}</div>\n                    <Popover content={\n                        <Tooltip title='添加专辑中的歌曲到歌单'>\n                            <PlusCircleOutlined className='link' onClick={this.onAddAlbum}/>\n                        </Tooltip>}>\n                        <DashOutlined className='link'/>\n                    </Popover>\n                </div>}\n                <Table dataSource={this.state.musicList}\n                       loading={loading}\n                       pagination={this.state.pagination}\n                       onChange={(pagination) => {\n                           this.setState({\n                               pagination: {\n                                   ...this.state.pagination,\n                                   current: pagination.current,\n                                   pageSize: pagination.pageSize\n                               }\n                           })\n                       }}\n                       scroll={{y:window.innerHeight-268}}\n                       size='small'\n                       columns={columns} rowKey='id'/>\n            </div>\n        )\n    }\n}","import React, {Component} from 'react';\nimport { Table, notification, Tabs } from 'antd';\nimport Axios from 'axios';\nimport moment from 'moment';\nimport Pagination from '@/settings/Pagination';\nimport LoadingImg from '@/lib/LoadingImg';\nimport MusicAction from \"@/lib/MusicAction\";\nimport { GetDuration } from \"@/utils\";\nimport style from \"./Music.module.scss\";\n\nconst { TabPane } = Tabs;\n\nexport default class artistList extends Component{\n    state = {\n        loading: false,\n        pagination: Pagination(),\n        hotList: [],\n        albumList: [],\n        artistInfo: {},\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.artist.artistId !== prevProps.artist.artistId){\n            this.fetchArtistDetail();\n            this.fetchArtistAlbum();\n        }\n    }\n\n    onPlay = (record) => {\n        this.props.onPlay(record.id, record)\n    };\n\n    onAddList = (record) => {\n        this.props.onAddList(record);\n    };\n\n    onDownload = (record) => {\n        this.props.onDownload(record.id, record)\n    };\n\n    onAlbumClick = (record) => {\n    \tthis.props.onAlbum(record);\n    };\n\n    fetchArtistDetail = () => {\n        this.setState({loading: true, artistInfo: {}});\n        Axios.get('/artistMusic', {params: {id: this.props.artist.artistId, source: this.props.artist.source}})\n            .then(res => {\n                this.setState({loading: false});\n                if (res.data.success){\n                   \tthis.setState({\n                   \t\thotList: res.data.songs,\n                   \t\tartistInfo: res.data.artist,\n                   \t})\n                } else {\n                    notification.error({message: '网络错误 获取歌手信息失败', duration: null})\n                }\n            })\n    };\n\n    fetchArtistAlbum = () => {\n    \tconst { pagination } = this.state;\n    \tlet limit = pagination.pageSize;\n    \tlet page = pagination.current;\n        this.setState({loading: true});\n        Axios.get('/artistAlbum', {params: {id: this.props.artist.artistId, limit: limit, page: page, source: this.props.artist.source}})\n            .then(res => {\n                this.setState({loading: false});\n                if (res.data.success){\n                   \tthis.setState({\n                   \t\talbumList: res.data.albums,\n                   \t\tpagination: {...pagination, total: res.data.albumSize}\n                   \t})\n                } else {\n                    notification.error({message: '网络错误 获取歌手专辑失败', duration: null})\n                }\n            })\n    };\n\n    render() {\n        const loading = this.props.loading || this.state.loading;\n        const { artistInfo } = this.state;\n        const musicColumns = [\n            {title: '歌曲名', dataIndex: 'name', key: 'name'},\n            {title: '时长', dataIndex: 'duration', key: 'duration', width: 75, render: (text) => (<div>{GetDuration(text)}</div>)},\n            {title: '专辑', dataIndex: 'album', key: 'album', \n            \trender: (text, record) => (\n            \t\t<span className='link' onClick={()=>this.onAlbumClick(record)}>《{record.album}》</span>\n            \t)},\n            {title: '操作', dataIndex: 'id', key: 'action', width: 150,\n                render: (text, record) => (<MusicAction onPlay={()=>{this.onPlay(record)}}\n                                                        onAddList={()=>{this.onAddList(record)}}\n                                                        onDownload={()=>this.onDownload(record)}/>\n                )},\n        ];\n\n        const albumColumns = [\n            {title: '专辑名', dataIndex: 'album', key: 'album', \n            \trender: (text, record) => (\n            \t\t<span className='link' onClick={()=>this.onAlbumClick(record)}>《{text}》</span>\n            \t)},\n            {title: '发行日期', dataIndex: 'publishTime', key: 'publishTime', render: (text) => (moment(text).format('YYYY-MM-DD'))},\n            {title: '公司', dataIndex: 'company', key: 'company'},\n            {title: '歌曲数量', dataIndex: 'size', key: 'size'},\n        ];\n\n        return (\n            <div className={style.album}>\n                {this.props.artist.artistId && <div className={style.info}>\n                \t<LoadingImg minHeight={100} src={artistInfo.img}/>\n                    <div className={style.emphasize}>{artistInfo.name}</div>\n                </div>}\n                <Tabs type=\"card\" tabPosition='left' size='small'>\n\t\t          \t<TabPane tab=\"Top50\" key=\"music\">\n\t\t            \t<Table dataSource={this.state.hotList}\n\t\t                       loading={loading}\n\t\t                       pagination={false}\n\t\t                       scroll={{y:window.innerHeight-268}}\n\t\t                       size='small'\n\t\t                       columns={musicColumns} rowKey='id'/>\n\t\t          \t</TabPane>\n\t\t          \t<TabPane tab=\"专辑\" key=\"album\">\n\t\t          \t  \t<Table dataSource={this.state.albumList}\n\t\t                       loading={loading}\n\t\t                       pagination={this.state.pagination}\n\t\t                       onChange={(pagination) => {\n\t\t                            this.setState({\n\t\t                                pagination: {\n\t\t                                    ...this.state.pagination,\n\t\t                                    current: pagination.current,\n\t\t                                    pageSize: pagination.pageSize\n\t\t                                }\n\t\t                            }, () => {this.fetchArtistAlbum()})\n\t\t                       }}\n\t\t                       size='small'\n\t\t                       scroll={{y:window.innerHeight-268}}\n\t\t                       columns={albumColumns} rowKey='albumId'/>\n\t\t         \t</TabPane>\n\t\t        </Tabs>\n            </div>\n        )\n    }\n}","import React, {Component} from 'react';\nimport { Table, Tabs, Switch } from 'antd';\nimport { CloseOutlined, SyncOutlined, CaretUpOutlined, CaretDownOutlined } from '@ant-design/icons';\nimport Pagination from '@/settings/Pagination';\nimport MusicAction from \"@/lib/MusicAction\";\nimport { GetDuration } from \"@/utils\";\nimport style from './Music.module.scss';\n\nconst { TabPane } = Tabs;\n\nexport default class PlayList extends Component{\n    state = {\n        loading: false,\n        editMod: false,\n        listType: 'customList',\n        customPagination: Pagination(),\n        recentPagination: Pagination(),\n    };\n\n    componentDidMount() {\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n    }\n\n    onRemove = (record) => {\n        const { listType } = this.state;\n        this.props.onUpdate(listType, 'remove', record);\n    };\n\n    onPlay = (record) => {\n        this.props.onPlay(record.id, record, this.state.listType)\n    };\n\n    onAddList = (record) => {\n        this.props.onAddList(record);\n    };\n\n    onDownload = (record) => {\n        this.props.onDownload(record.id, record)\n    };\n\n    onArtistClick = (record) => {\n        this.props.onArtist(record);\n    };\n\n    onModChange = (v) => {\n        this.props.onModChange(v);\n    };\n\n    onPositionChange = (record, num) => {\n        const { listType } = this.state;\n        this.props.onUpdate(listType, 'move', record, num);\n    }\n\n    render() {\n        const { customList, recentList, currentType, audioData } = this.props;\n        const { editMod, listType } = this.state;\n        const loading = this.props.loading || this.state.loading;\n        const columns = [\n            {title: '', dataIndex: 'name', key: 'remove', width: 64,\n                render: (text, record) => (\n                    <div>\n                        {editMod && \n                            <div className={style.rowAct}>\n                                <ArrowAction onArrow={(num)=>this.onPositionChange([record], num)}/>\n                                <CloseOutlined className='link' onClick={()=>this.onRemove([record])}/>\n                            </div>\n                        }\n                    </div>\n                )},\n            {title: '', dataIndex: 'name', key: 'playing', width: 30,\n                render: (text, record) => (\n                    <div>\n                        {listType === currentType && record.id === audioData.id &&\n                        <SyncOutlined spin className={style.tableColIcon}/>}\n                    </div>\n                )},\n            {title: '歌曲名', dataIndex: 'name', key: 'name'},\n            {title: '时长', dataIndex: 'duration', key: 'duration', width: 75, render: (text) => (<div>{GetDuration(text)}</div>)},\n            {title: '歌手', dataIndex: 'artist', key: 'artist',\n                render: (text, record) => (\n                    <span className='link' onClick={()=>this.onArtistClick(record)}>{record.artist}</span>\n                )},\n            {title: '操作', dataIndex: 'id', key: 'action', width: 150,\n                render: (text, record) => (\n                    <MusicAction btnList={listType === 'customList' ? ['play', 'download'] : ['play', 'add', 'download']}\n                                 onPlay={()=>{this.onPlay(record)}}\n                                 onAddList={()=>{this.onAddList(record)}}\n                                 onDownload={()=>this.onDownload(record)}/>\n                )},\n        ];\n\n        return (\n            <div className={style.playList}>\n                <div className={style.header}>\n                    <div className={style.item}>\n                        <div className={style.text}>编辑</div>\n                        <Switch size='middle' onChange={(v)=>this.setState({editMod: v})}/>\n                    </div>\n                    <div className={style.item}>\n                        <div className={style.text}>列表播放</div>\n                        <Switch size='middle' onChange={(v)=>this.onModChange(v ? 'list' : 'solo')}/>\n                    </div>\n                </div>\n                <Tabs type=\"card\" tabPosition='left' size='small' activeKey={this.state.listType}\n                      onChange={(v)=>this.setState({listType: v})}>\n                    <TabPane tab=\"歌单\" key=\"customList\">\n                        <Table dataSource={customList}\n                               loading={loading}\n                               rowClassName={(record) => {\n                                   return (listType === currentType && record.id === audioData.id) ? 'highlightRow' : ''\n                               }}\n                               pagination={this.state.customPagination}\n                               onChange={(pagination) => {\n                                   this.setState({\n                                       customPagination: {\n                                           ...this.state.customPagination,\n                                           current: pagination.current,\n                                           pageSize: pagination.pageSize\n                                       }\n                                   })\n                               }}\n                               scroll={{y:window.innerHeight-268}}\n                               size='small'\n                               columns={columns} rowKey='id'/>\n                    </TabPane>\n                    <TabPane tab=\"最近播放\" key=\"recentList\">\n                        <Table dataSource={recentList}\n                               loading={loading}\n                               rowClassName={(record) => {\n                                   return (listType === currentType && record.id === audioData.id) ? 'highlightRow' : ''\n                               }}\n                               pagination={this.state.recentPagination}\n                               onChange={(pagination) => {\n                                   this.setState({\n                                       recentPagination: {\n                                           ...this.state.recentPagination,\n                                           current: pagination.current,\n                                           pageSize: pagination.pageSize\n                                       }\n                                   })\n                               }}\n                               scroll={{y:window.innerHeight-268}}\n                               size='small'\n                               columns={columns} rowKey='id'/>\n                    </TabPane>\n                </Tabs>\n            </div>\n        )\n    }\n}\n\nclass ArrowAction extends Component{\n    state = {};\n    render(){\n        return (\n            <div>\n                <CaretUpOutlined onClick={()=>this.props.onArrow(-1)} className='link'/>\n                <CaretDownOutlined onClick={()=>this.props.onArrow(1)} className={[style.arrow, 'link'].join(' ')}/>\n            </div>\n        )\n    }\n}","import React, {Component} from 'react';\nimport Axios from 'axios';\nimport AudioControl from \"./AudioControl\";\nimport MusicList from \"./MusicList\";\nimport AlbumList from \"./AlbumList\";\nimport ArtistList from \"./ArtistList\";\nimport PlayList from \"./PlayList\";\nimport { notification, Tabs } from 'antd';\nimport { DownloadBlob } from \"@/utils\";\nimport style from './Music.module.scss';\n\nconst { TabPane } = Tabs;\n\nexport default class Music extends Component{\n    state = {\n        tab: 'music',\n        loading: false,\n        audioSrc: '',\n        audioData: {},\n        album: {},\n        artist: {},\n        recentList: [],\n        customList: [],\n        currentPlayList: 'recentList',\n        playMod: 'soloSingle',\n        playingList: [],\n    };\n\n    componentDidMount(){\n        this.setState({\n            recentList: JSON.parse(window.localStorage.getItem('recentList')) || [],\n            customList: JSON.parse(window.localStorage.getItem('customList')) || [],\n        })\n    }\n\n    updatePlayList = (listType, action, records, num=0) => {\n        let list = JSON.parse(window.localStorage.getItem(listType)) || [];\n        let result = {};\n        records.forEach(record => {\n            let index = -1;\n            list.forEach((item, i) => {\n                if (item.id === record.id){\n                    index = i;\n                }\n            });\n            switch (action) {\n                case 'remove':\n                    if (index >= 0){list.splice(index, 1)}\n                    break;\n                case 'add':\n                    if (index === -1){list.push(record)}\n                    break;\n                case 'toTop':\n                    if (index >= 0){\n                        list.splice(index, 1)\n                    }\n                    list.splice(0, 0, record);\n                    break;\n                case 'move':\n                    if (index >= 0){\n                        list.splice(index, 1)\n                        list.splice(index + num, 0, record);\n                    }\n                    break;\n                default:\n                    break;\n            }\n        });\n        window.localStorage.setItem(listType, JSON.stringify(list));\n        result[listType] = list;\n        this.setState({...result})\n    };\n\n    onAlbum = (album) => {\n        this.setState({tab: 'album', album: album});\n    };\n\n    onArtist = (artist) => {\n        this.setState({tab: 'artist', artist: artist})\n    };\n\n    onPlay = (id, record, listType='recentList') => {\n        this.updatePlayList('recentList', 'toTop', [record]);\n        this.setState({currentPlayList: listType});\n        this.fetchPlay(id, record);\n    };\n\n    onAddList = (record) => {\n        const { customList } = this.state;\n        let index = -1;\n        customList.forEach((item, i) => {\n            if (item.id === record.id){index = i}\n        });\n        if (index >= 0){\n            notification.warning({message: '歌曲已在歌单中', duration: 4})\n        } else {\n            this.updatePlayList('customList', 'add', [record]);\n            notification.success({message: '添加成功', duration: 4});\n        }\n    };\n\n    onAddAlbum = (records) => {\n        this.updatePlayList('customList', 'add', records);\n        notification.success({message: '添加成功', duration: 4})\n    };\n\n    onAudioEnd = (next=0) => {\n        if (this.state.playMod === 'list' || next !== 0){\n            let list = JSON.parse(window.localStorage.getItem(this.state.currentPlayList)) || [];\n            let index = -1;\n            list.forEach((item, i) => {\n                if (item.id === this.state.audioData.id){index = i}\n            });\n            if (index >= 0){\n                index += next >= 0 ? 1 : -1;\n                if (index >= list.length){index = 0}\n                if (index < 0){index = Math.max(list.length - 1, 0)}\n                let record = list[index];\n                if (record){this.fetchPlay(record.id, record)}\n            }\n        }\n    };\n\n    fetchPlay = (id, record) => {\n        this.setState({loading: true, audioData: record, audioSrc: ''});\n        Axios.get('/download', {\n            params: {id: id, source: record.source},\n            responseType: 'blob'\n        }).then(res => {\n            this.setState({loading: false});\n            if (res.data.size > 17){\n                this.setState({audioSrc: res})\n            } else {\n                notification.error({message: '网络错误 获取失败', duration: null})\n            }\n        })\n    };\n\n    fetchDownload = (id, record) => {\n        this.setState({loading: true});\n        Axios.get('/download', {\n            params: {id: id, source: record.source},\n            responseType: 'blob'\n        }).then(res => {\n            this.setState({loading: false});\n            if (res.data.size > 17){\n                let suffix = record.source === 'qq' ? '.m4a' : '.mp3';\n                DownloadBlob(res, record.name+suffix);\n            } else {\n                notification.error({message: '网络错误 获取失败', duration: null})\n            }\n        })\n    };\n\n    render() {\n        const { loading, playMod, recentList, customList, audioData, currentPlayList } = this.state;\n        const TabExtra = (\n            <AudioControl src={this.state.audioSrc} audioData={audioData} playMod={playMod}\n                          onAudioEnd={this.onAudioEnd}/>\n        );\n        return (\n            <div className={style.music}>\n                <Tabs activeKey={this.state.tab} tabBarExtraContent={TabExtra} \n                        onChange={(v)=>this.setState({tab: v})}>\n                    <TabPane tab=\"歌曲\" key=\"music\" forceRender>\n                        <MusicList loading={loading}\n                                   onUpdate={()=>this.setState({tab: 'music'})}\n                                   onPlay={this.onPlay} onAddList={this.onAddList} onDownload={this.fetchDownload}\n                                   onAlbum={this.onAlbum} onArtist={this.onArtist}/>\n                    </TabPane>\n                    <TabPane tab=\"专辑\" key=\"album\" forceRender>\n                        <AlbumList loading={loading}\n                                   album={this.state.album}\n                                   onPlay={this.onPlay} onAddList={this.onAddList} onDownload={this.fetchDownload}\n                                   onArtist={this.onArtist} onAddAlbum={this.onAddAlbum}/>\n                    </TabPane>\n                    <TabPane tab=\"歌手\" key=\"artist\" forceRender>\n                        <ArtistList loading={loading} \n                                    artist={this.state.artist}\n                                    onPlay={this.onPlay} onAddList={this.onAddList} onDownload={this.fetchDownload}\n                                    onAlbum={this.onAlbum}/>\n                    </TabPane>\n                    <TabPane tab=\"播放列表\" key=\"play\" forceRender>\n                        <PlayList loading={loading}\n                                  recentList={recentList}\n                                  customList={customList}\n                                  currentType={currentPlayList} audioData={audioData}\n                                  onPlay={this.onPlay} onAddList={this.onAddList} onDownload={this.fetchDownload}\n                                  onArtist={this.onArtist} onUpdate={this.updatePlayList}\n                                  onModChange={(v)=>this.setState({playMod: v})}/>\n                    </TabPane>\n                </Tabs>\n            </div>\n        )\n    }\n}\n","import React, {Component} from 'react';\nimport { Input, Select } from 'antd';\nimport { connect } from 'react-redux';\nimport { searchMusic } from \"@/redux/action\";\nimport Axios from 'axios';\nimport Music from '@/pages/music/Music';\nimport style from './Main.module.scss';\n\nconst { Search } = Input;\nconst { Option } = Select;\n\nconst mapStateToProps = state => {return state};\n\nclass Main extends Component{\n    state = {\n        keyword: '',\n        searchType: 'net',\n    };\n\n    onTest = () => {\n        Axios.get('/test')\n            .then(res => { \n                console.log(res);\n            })\n    };\n\n    componentDidMount() {\n    }\n\n    onSearch = () => {\n        const { keyword, searchType } = this.state;\n        this.props.dispatch(searchMusic(keyword, searchType))\n    };\n\n    render() {\n        return (\n            <div className={style.main}>\n            \t<div className={style.topBar}>\n                    <div className={style.content}>\n                        <div className={style.left}>\n                            <div className={style.title}>AEON</div>\n                            <Select defaultValue='net' onChange={(v)=>this.setState({searchType: v})} className={style.select}>\n                                <Option value='net'>网易云</Option>\n                                <Option value='qq'>qq音乐</Option>\n                            </Select>\n                            <Search onSearch={this.onSearch} value={this.state.keyword}\n                                    onChange={(v)=>this.setState({keyword: v.target.value})}/>\n                        </div>\n                    </div>\n                </div>\n            \t<div className={style.container}>\n                    <div className={style.content}>\n                        <Music/>\n                    </div>\n            \t</div>\n            </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(Main)","import React from 'react';\nimport Main from '@/pages/main/Main';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n            <Route exact path={['/']} component={Main}/>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport reducer from '@/redux/reducer';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nlet store = createStore(reducer)\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"audioControl\":\"AudioControl_audioControl__1ARvq\",\"interface\":\"AudioControl_interface__1WUqc\",\"progressBar\":\"AudioControl_progressBar__Qb42T\",\"current\":\"AudioControl_current__1cu3t\",\"progress\":\"AudioControl_progress__2kl9g\",\"item\":\"AudioControl_item__TWECM\",\"extend\":\"AudioControl_extend__3BScH\",\"info\":\"AudioControl_info__2HSPC\",\"action\":\"AudioControl_action__1yQ3M\",\"volumePop\":\"AudioControl_volumePop__aED7h\",\"slider\":\"AudioControl_slider__3E3tP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Main_main__2eEIG\",\"topBar\":\"Main_topBar__1rJsz\",\"content\":\"Main_content__Gtd0O\",\"left\":\"Main_left__2BvH3\",\"select\":\"Main_select__Js6Cp\",\"title\":\"Main_title__3R2dg\",\"container\":\"Main_container__3YkPS\"};"],"sourceRoot":""}