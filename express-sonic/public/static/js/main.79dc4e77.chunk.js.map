{"version":3,"sources":["pages/music/Music.module.scss","redux/action/index.js","redux/reducer/searchMusic.js","redux/reducer/index.js","utils/index.js","pages/music/AudioControl.jsx","settings/Pagination.js","lib/MusicAction.jsx","pages/music/MusicList.jsx","lib/LoadingImg.jsx","pages/music/AlbumList.jsx","pages/music/ArtistList.jsx","pages/music/PlayList.jsx","pages/music/Music.jsx","pages/main/Main.jsx","App.js","serviceWorker.js","index.js","pages/music/AudioControl.module.scss","pages/main/Main.module.scss"],"names":["module","exports","searchMusic","searchKey","searchType","type","initialState","state","action","Object","assign","combineReducers","DownloadBlob","data","name","fileName","blob","Blob","objectUrl","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","GetDuration","str","unit","duration","moment","hour","hours","minute","minutes","second","seconds","toString","length","AudioControl","audioSource","current","paused","volume","loop","visual","actMenuVisible","extendVisible","initAudio","props","src","audioCtx","window","AudioContext","webkitAudioContext","createMediaElementSource","querySelector","analyser","createAnalyser","fftSize","connect","destination","source","setState","interval","setInterval","isNaN","audio","clearInterval","playMusic","Math","floor","removeEventListener","onTimeUpdate","addEventListener","progressBar","onmousedown","onDragProgress","onEndEvent","drawVisualEffect","array","Uint8Array","frequencyBinCount","getByteFrequencyData","c_width","canvas","width","c_height","height","ctx","clearRect","rec_width","i","rec_height","fillRect","animationEnd","animationEnded","requestAnimationFrame","OfflineAudioContext","webkitOfflineAudioContext","clearTimeout","animationEndTimer","BeatDetector","analysisFin","onBeat","onBigBeat","console","log","play","pauseMusic","pause","setTimeout","newCurrent","currentTime","onPlay","onVolumeChange","v","event","preventDefault","totalWidth","getElementById","offsetWidth","offsetX","onmousemove","e","onmouseup","onAudioEnd","next","onDownload","suffix","audioData","onVisualChange","this","container","clientWidth","clientHeight","getContext","fillStyle","prevProps","prevState","snapshot","extendAction","className","style","extend","info","join","artist","StepBackwardOutlined","onClick","StepForwardOutlined","ActMenu","key","Item","disabled","checkedChildren","unCheckedChildren","onChange","Volume","volumePop","slider","vertical","value","audioControl","content","placement","onVisibleChange","interface","boxShadow","id","item","shape","size","icon","CaretRightOutlined","PauseOutlined","progress","round","NotificationOutlined","cursor","overlay","visible","canvasContainer","Component","Pagination","defaultCurrent","defaultPageSize","hideOnSinglePage","pageSize","pageSizeOptions","showSizeChanger","showTotal","total","range","MusicAction","btnList","indexOf","title","PlayCircleOutlined","PlusCircleOutlined","onAddList","CloudDownloadOutlined","MusicList","loading","musicList","keyword","pagination","onSearch","fetchMusicList","onUpdate","onAlbumClick","record","onAlbum","onArtistClick","onArtist","limit","page","Axios","get","params","then","res","success","songs","notification","error","message","columns","dataIndex","render","text","album","table","dataSource","scroll","y","innerHeight","rowKey","LoadingImg","imageErr","minHeight","minWidth","minWIdth","spinning","alt","opacity","onLoad","onError","onDragStart","AlbumList","albumInfo","onAddAlbum","fetchAlbumDetail","albumId","img","emphasize","company","publishTime","format","DashOutlined","TabPane","artistList","hotList","albumList","artistInfo","fetchArtistDetail","artistId","fetchArtistAlbum","albums","albumSize","musicColumns","albumColumns","tabPosition","tab","PlayList","editMod","listType","customPagination","recentPagination","onRemove","onModChange","onPositionChange","num","customList","recentList","currentType","rowAct","onArrow","CloseOutlined","SyncOutlined","spin","tableColIcon","playList","header","activeKey","rowClassName","ArrowAction","CaretUpOutlined","CaretDownOutlined","arrow","Music","audioSrc","currentPlayList","playMod","playingList","updatePlayList","records","maxLength","list","JSON","parse","localStorage","getItem","result","forEach","index","splice","push","pop","setItem","stringify","fetchPlay","warning","max","responseType","fetchDownload","TabExtra","music","tabBarExtraContent","forceRender","Search","Option","Main","onTest","dispatch","main","topBar","left","defaultValue","select","target","App","exact","path","component","Boolean","location","hostname","match","store","createStore","reducer","ReactDOM","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.79dc4e77.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"music\":\"Music_music__1jVhh\",\"header\":\"Music_header__4rzex\",\"input\":\"Music_input__2yrdG\",\"select\":\"Music_select__2D_Bt\",\"item\":\"Music_item__1W2Hr\",\"text\":\"Music_text__2wKo5\",\"table\":\"Music_table__uDKNk\",\"album\":\"Music_album__32saU\",\"info\":\"Music_info__2Stfu\",\"emphasize\":\"Music_emphasize__1Ds_r\",\"playList\":\"Music_playList__3glR-\",\"rowAct\":\"Music_rowAct__Qd3lg\",\"arrow\":\"Music_arrow__3okJl\"};","export const SEARCH_MUSIC = 'SEARCH_MUSIC';\n\nexport const searchMusic = (searchKey, searchType) => {\n    return {type: SEARCH_MUSIC, searchKey, searchType}\n};","import { SEARCH_MUSIC } from \"../action\";\n\nconst initialState = {\n\tsearchKey: '',\n\tsearchType: '',\n};\n\nconst searchMusic = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase SEARCH_MUSIC:\n\t\t\treturn Object.assign({}, state, {\n\t\t\t\tsearchKey: action.searchKey,\n\t\t\t\tsearchType: action.searchType,\n\t\t\t});\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default searchMusic;","import { combineReducers } from 'redux';\nimport searchMusic from './searchMusic';\n\nexport default combineReducers({\n\tsearchMusic\n})","import moment from 'moment';\n\nconst DownloadBlob = (data, name='') => {\n    let fileName = name || 'test';\n    let blob = new Blob([data.data]);\n    let objectUrl = URL.createObjectURL(blob);\n    let a = document.createElement('a');\n    a.href = objectUrl;\n    a.download = fileName;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(objectUrl);\n};\n\nconst GetDuration = (str, unit='milliseconds') => {\n    let duration = moment.duration(str, unit);\n    let hour = duration.hours() > 1 ? duration.hours() + 'h' : '';\n    let minute = duration.minutes() + ':';\n    let second = duration.seconds().toString();\n    if (minute.length < 3){minute = '0' + minute}\n    if (second.length < 2){second = '0' + second}\n    return hour + minute + second;\n}\n\nconst getParams = (url) => {\n    try {\n        url = url.match(/\\?([^#]+)/)[1];\n        url = decodeURIComponent(url);\n        let obj = {}, arr = url.split('&');\n        for (let i = 0; i < arr.length; i++) {\n            let subArr = arr[i].split('=');\n            obj[subArr[0]] = subArr[1];\n        }\n        return obj;\n    } catch (err) {\n        return null;\n    }\n};\n\nexport {\n    DownloadBlob,\n    GetDuration,\n    getParams\n}","import React, { Component } from \"react\";\nimport { Menu, Dropdown, Space, Popover, Slider, Switch, Button } from 'antd';\nimport { CaretRightOutlined, PauseOutlined, NotificationOutlined, StepBackwardOutlined, StepForwardOutlined } from '@ant-design/icons';\nimport { GetDuration, DownloadBlob } from '@/utils';\nimport BeatDetector from 'beatdetector';\nimport style from './AudioControl.module.scss';\n\nexport default class AudioControl extends Component{\n    state = {\n        audioSource: '',\n        duration: '0:00',\n        current: '0:00',\n        paused: true,\n        volume: 100,\n        loop: false,\n        visual: false,\n        actMenuVisible: false,\n        extendVisible: false,\n    };\n\n    componentDidMount(){\n        this.audio = document.getElementById('audioTag');\n        this.progressBar = document.getElementById('progressBar');\n        this.animationEnded = true;\n\n        this.canvas = document.getElementById('audioCanvas');\n        let container = document.getElementById('canvasContainer');\n        this.canvas.width = container.clientWidth;\n        this.canvas.height = container.clientHeight;\n        this.ctx = this.canvas.getContext('2d');\n        this.ctx.fillStyle = 'rgba(229, 206, 0, 0.3)';\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot){\n        if (this.props.src !== prevProps.src){\n            this.initAudio();\n        }\n    }\n\n    initAudio = () => {\n        let blob = new Blob([this.props.src.data]);\n        if (!this.audioCtx){\n            this.audioCtx = new (window.AudioContext || window.webkitAudioContext)();\n            this.audioSource = this.audioCtx.createMediaElementSource(document.querySelector('audio'));\n            this.analyser = this.audioCtx.createAnalyser();\n            this.analyser.fftSize = 256;\n            this.audioSource.connect(this.analyser);\n            this.analyser.connect(this.audioCtx.destination);\n        }\n        let source = URL.createObjectURL(blob);\n        this.setState({audioSource: source}, () => {\n            let interval = setInterval(()=>{\n                if (!isNaN(this.audio.duration)){\n                    clearInterval(interval);\n                    this.playMusic();\n                    this.setState({\n                        duration: Math.floor(this.audio.duration),\n                    })\n                }\n            }, 100);\n            this.audio.removeEventListener('timeupdate', this.onTimeUpdate);\n            this.audio.addEventListener('timeupdate', this.onTimeUpdate);\n            this.progressBar.onmousedown = this.onDragProgress;\n            this.audio.removeEventListener('ended', this.onEndEvent);\n            this.audio.addEventListener('ended', this.onEndEvent);\n        })\n    };\n\n    drawVisualEffect = () => {\n        let array = new Uint8Array(this.analyser.frequencyBinCount);\n        this.analyser.getByteFrequencyData(array);\n        let c_width = this.canvas.width;\n        let c_height = this.canvas.height;\n\n        this.ctx.clearRect(0, 0, c_width, c_height);\n        if (this.state.visual){\n            let rec_width = c_width / 2 / array.length;\n            for (let i=0; i<array.length; i++){\n                let rec_height = (array[i]/256 * c_height) * 0.3;\n                this.ctx.fillRect(rec_width * i, c_height - rec_height, rec_width * 0.7, rec_height)\n                this.ctx.fillRect(c_width - rec_width * i, c_height - rec_height, rec_width * 0.7, rec_height)\n            }\n            if (!this.animationEnd){\n                window.requestAnimationFrame(this.drawVisualEffect);\n            } else {\n                this.animationEnded = true;\n                this.ctx.clearRect(0, 0, c_width, c_height);\n            }\n        }\n    };\n\n    playMusic = () => {\n        window.AudioContext = window.AudioContext || window.webkitAudioContext;\n        window.OfflineAudioContext = window.OfflineAudioContext || window.webkitOfflineAudioContext\n        clearTimeout(this.animationEndTimer);\n        this.animationEnd = false;\n        new BeatDetector(this.audio, this.analysisFin, this.onBeat, this.onBigBeat);        \n        \n        this.setState({paused: false});\n        if (this.animationEnded){\n            this.animationEnded = false;\n            window.requestAnimationFrame(this.drawVisualEffect);\n        }\n        \n\n    };\n\n    analysisFin = () => {\n        console.log('play');\n        this.audio.play();\n    };\n\n    onBeat = () => {\n        console.log(\"Emit Beat\");\n    };\n     \n    onBigBeat = () => {\n        console.log(\"Wow!! Emit BigBeat\");\n    };\n\n    pauseMusic = () => {\n        this.audio.pause();\n        this.animationEndTimer = setTimeout(()=>this.animationEnd = true, 2000);\n        this.setState({paused: true})\n    };\n\n    onTimeUpdate = () => {\n        let { current } = this.state;\n        let newCurrent = Math.floor(this.audio.currentTime);\n        if (newCurrent !== current){\n            this.setState({current: newCurrent})\n        }\n    };\n\n    onPlay = () => {\n        if (this.audio.paused){\n            this.playMusic();\n        } else {\n            this.pauseMusic();\n        }\n    };\n\n    onVolumeChange = (v) => {\n        this.setState({volume: v}, () => {\n            this.audio.volume = this.state.volume / 100;\n        })\n    };\n\n    onDragProgress = (event) => {\n        event.preventDefault();\n        let totalWidth = document.getElementById('progressBar').offsetWidth;\n\n        this.audio.currentTime = this.audio.duration * event.offsetX / totalWidth;\n        this.progressBar.onmousemove = (e => {\n            this.audio.currentTime = this.audio.duration * e.offsetX / totalWidth\n        });\n        document.body.onmouseup = () => {\n            this.progressBar.onmousemove = null;\n            document.body.onmouseup = null;\n        }\n    };\n\n    onEndEvent = () => {\n        this.audio.pause();\n        this.onAudioEnd(0);\n    };\n\n    onAudioEnd = (next = 0) => {\n        this.audio.currentTime = 0;\n        if (this.state.loop){\n            this.playMusic();\n        } else {\n            this.pauseMusic();\n            this.setState({paused: true});\n            this.props.onAudioEnd(next);\n        }\n    };\n\n    onDownload = () => {\n        let suffix = this.props.audioData.source === 'qq' ? '.m4a' : '.mp3';\n        DownloadBlob(this.props.src, this.props.audioData.name + suffix);\n    };\n\n    onVisualChange = (v) => {\n        this.setState({visual: v}, () => {\n            if (v && !this.state.paused){\n                window.requestAnimationFrame(this.drawVisualEffect);\n            }\n        })\n    };\n\n    render() {\n        const { paused, duration, current, volume, audioSource, actMenuVisible, extendVisible } = this.state;\n        const extendAction = (\n            <div className={style.extend}>\n                <div className={[style.info, 'ellipsis'].join(' ')}>\n                    当前播放: {this.props.audioData.name ? `${this.props.audioData.name} - ${this.props.audioData.artist}` : '无'}\n                </div>\n                <div className={style.action}>\n                    <StepBackwardOutlined className='link' onClick={()=>this.onAudioEnd(-1)}/>\n                    <StepForwardOutlined className='link' onClick={()=>this.onAudioEnd(1)}/>\n                </div>\n            </div>\n        );\n        const ActMenu = (\n            <Menu onClick={(e)=>{if (e.key === 'downloadBtn'){this.setState({actMenuVisible: false})}}}>\n                <Menu.Item key='downloadBtn' disabled={!audioSource} onClick={this.onDownload}>\n                    下载\n                </Menu.Item>\n                <Menu.Item key='loopBtn'>\n                    <Space>\n                        循环<Switch checkedChildren=\"开\" unCheckedChildren=\"关\"\n                                  onChange={(v)=>this.setState({loop: v})}/>\n                    </Space>\n                </Menu.Item>\n                <Menu.Item key='visualBtn'>\n                    <Space>\n                        效果<Switch checkedChildren=\"开\" unCheckedChildren=\"关\"\n                                  onChange={this.onVisualChange}/>\n                    </Space>\n                </Menu.Item>\n            </Menu>\n        );\n        const Volume = (\n            <div className={style.volumePop}>\n                <Slider className={style.slider} vertical value={volume} onChange={this.onVolumeChange}/>\n            </div>\n        );\n\n        return (\n            <div className={style.audioControl}>\n                <Popover content={extendAction} placement=\"bottomLeft\"\n                          onVisibleChange={(v)=>this.setState({extendVisible: v})}>\n                    <Space className={style.interface} style={{boxShadow: extendVisible ? '0 0 5px #e5ce00' : 'none'}}>\n                        <audio id=\"audioTag\" src={audioSource}></audio>\n                        <div className={style.item}>\n                            <Button shape=\"circle\" onClick={this.onPlay} size='small' disabled={!audioSource}\n                                    icon={paused ? <CaretRightOutlined /> : <PauseOutlined />} />\n                        </div>\n                        <div className={style.item}>{GetDuration(current, 'seconds')}/{GetDuration(duration, 'seconds')}</div>\n                        <div className={style.progressBar}>\n                            <div id='progressBar' className={style.current}>\n                                <div id='currentProgressBar' className={style.progress}\n                                    style={{width: Math.round(100*current/duration, 0)+'%' || '0%'}}>\n                                </div>\n                            </div>\n                        </div>\n                        <div className={style.item}>\n                            <Popover placement=\"bottom\" content={Volume}>\n                                <NotificationOutlined style={{cursor: 'pointer'}}/>\n                            </Popover>\n                        </div>\n                        <div className={style.item}>\n                            <Dropdown overlay={ActMenu} visible={actMenuVisible}\n                                    onVisibleChange={(v)=>this.setState({actMenuVisible: v})}>\n                                <Button size='small'>更多</Button>\n                            </Dropdown>\n                        </div>\n                    </Space>\n                </Popover>\n                <div className={style.canvasContainer}>\n                    <div id='canvasContainer' style={{height: '100%', width: '100%'}}>\n                        <canvas id='audioCanvas'/>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n}","const Pagination = () => {\n    return {\n        defaultCurrent: 1,\n        defaultPageSize: 10,\n        hideOnSinglePage: false,\n        current: 1,\n        pageSize: 10,\n        pageSizeOptions: ['10', '20', '50', '100'],\n        showSizeChanger: true,\n        showTotal: function (total, range) {\n            return `共${total}条`;\n        },\n        total: 0\n    };\n};\n\nexport default Pagination;","import React, {Component} from 'react';\nimport { Tooltip } from 'antd';\nimport { PlusCircleOutlined, PlayCircleOutlined, CloudDownloadOutlined  } from '@ant-design/icons';\n\nexport default class MusicAction extends Component{\n    state = {\n        btnList: this.props.btnList || ['play', 'add', 'download']\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.btnList !== prevProps.btnList){\n            this.setState({btnList: this.props.btnList || ['play', 'add', 'download']})\n        }\n    }\n\n    render() {\n        const { btnList } = this.state;\n        return (\n            <div>\n                {btnList.indexOf('play') >= 0 && <Tooltip title='播放'>\n                    <PlayCircleOutlined className='link' onClick={this.props.onPlay}/>\n                </Tooltip>}\n                {btnList.indexOf('add') >= 0 && <Tooltip title='加入歌单'>\n                    <PlusCircleOutlined className='link' onClick={this.props.onAddList}/>\n                </Tooltip>}\n                {btnList.indexOf('download') >= 0 && <Tooltip title='下载'>\n                    <CloudDownloadOutlined className='link' onClick={this.props.onDownload}/>\n                </Tooltip>}\n            </div>\n\n        )\n    }\n}","import React, {Component} from 'react';\nimport { Table, notification } from 'antd';\nimport { connect } from 'react-redux';\nimport Axios from 'axios';\nimport Pagination from '@/settings/Pagination';\nimport MusicAction from \"@/lib/MusicAction\";\nimport { GetDuration } from \"@/utils\";\nimport style from './Music.module.scss';\n\nconst mapStateToProps = state => {return state};\n\nclass MusicList extends Component{\n    state = {\n        loading: false,\n        musicList: [],\n        keyword: '',\n        type: 'net',\n        audio: '',\n        pagination: Pagination(),\n        audioData: {},\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.searchMusic !== prevProps.searchMusic && this.props.searchMusic){\n            this.onSearch(this.props.searchMusic.searchKey, this.props.searchMusic.searchType);\n        }\n    }\n\n    onSearch = (keyword, type) => {\n        this.setState({\n            keyword: keyword,\n            type: type,\n            pagination: {...this.state.pagination, current: 1}\n        }, () => {this.fetchMusicList()});\n        this.props.onUpdate();\n    };\n\n    onAlbumClick = (record) => {\n        this.props.onAlbum(record);\n    };\n\n    onArtistClick = (record) => {\n        this.props.onArtist(record);\n    };\n\n    onPlay = (record) => {\n        this.props.onPlay(record.id, record)\n    };\n\n    onAddList = (record) => {\n        this.props.onAddList(record);\n    };\n\n    onDownload = (record) => {\n        this.props.onDownload(record.id, record)\n    };\n\n    fetchMusicList = () => {\n        const { pagination, keyword, type } = this.state;\n        let limit = pagination.pageSize;\n        let page = pagination.current;\n        this.setState({loading: true});\n        Axios.get('/search', {params: {source: type, keyword: keyword, limit: limit, page: page}})\n            .then(res => { \n                this.setState({loading: false});\n                if (res.data.success){\n                    this.setState({\n                        musicList: res.data.songs,\n                        pagination: {...pagination, total: res.data.total},\n                    })\n                } else {\n                    notification.error({message: '网络错误 获取失败', duration: null})\n                }\n            })\n    };\n\n    render() {\n        const loading = this.props.loading || this.state.loading;\n        const columns = [\n            {title: '歌曲名', dataIndex: 'name', key: 'name'},\n            {title: '时长', dataIndex: 'duration', key: 'duration', width: 75, render: (text) => (<div>{GetDuration(text)}</div>)},\n            {title: '歌手', dataIndex: 'artist', key: 'artist', \n                render: (text, record) => (\n                    <span className='link' onClick={()=>this.onArtistClick(record)}>\n                        {record.artist}</span>\n                )},\n            {title: '专辑', dataIndex: 'album', key: 'album', \n                render: (text, record) => (\n                    <span className='link' onClick={()=>this.onAlbumClick(record)}>\n                        《{record.album}》</span>\n                )},\n            {title: '操作', dataIndex: 'id', key: 'action', width: 150,\n                render: (text, record) => (<MusicAction onPlay={()=>{this.onPlay(record)}}\n                                                        onAddList={()=>{this.onAddList(record)}}\n                                                        onDownload={()=>this.onDownload(record)}/>\n                )},\n        ];\n        return (\n            <div className={style.table}>\n                <Table dataSource={this.state.musicList}\n                       loading={loading}\n                       pagination={this.state.pagination}\n                       onChange={(pagination) => {\n                           this.setState({\n                               pagination: {\n                                   ...this.state.pagination,\n                                   current: pagination.current,\n                                   pageSize: pagination.pageSize\n                               }\n                           }, () => {this.fetchMusicList()})\n                       }}\n                       scroll={{y:window.innerHeight-268}}\n                       size='small'\n                       columns={columns} rowKey='id'/>\n            </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(MusicList)","import React, {Component} from 'react';\nimport { Spin, Empty } from 'antd';\n\nexport default class LoadingImg extends Component{\n    state = {\n        loading: true,\n        imageErr: false,\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.src !== prevProps.src){\n            this.setState({loading: true, imageErr: false})\n        }\n    }\n\n    render() {\n        const { loading, imageErr } = this.state;\n        return (\n            <div style={{minHeight: this.props.minHeight || 0, minWidth: this.props.minWIdth || 0}}>\n                <Spin style={{width: '100%', minHeight: this.props.minHeight || 0}} spinning={loading}>\n                    {imageErr === false && \n                        <img src={this.props.src} alt={this.props.alt || 'logo'} \n                             style={{opacity: loading ? '0' : '1', width: \"100%\"}}\n                             onLoad={()=>{this.setState({loading: false})}}\n                             onError={()=>this.setState({imageErr: true, loading: false})}\n                             onDragStart={e=>e.preventDefault()}\n                             />}\n                    {imageErr === true && <Empty />}\n                </Spin>\n            </div>\n            \n        )\n    }\n}","import React, {Component} from 'react';\nimport { Table, notification, Tooltip, Popover } from 'antd';\nimport { PlusCircleOutlined, DashOutlined } from '@ant-design/icons';\nimport Axios from 'axios';\nimport moment from 'moment';\nimport Pagination from '@/settings/Pagination';\nimport LoadingImg from '@/lib/LoadingImg';\nimport MusicAction from \"@/lib/MusicAction\";\nimport { GetDuration } from \"@/utils\";\nimport style from \"./Music.module.scss\";\n\nexport default class AlbumList extends Component{\n    state = {\n        loading: false,\n        pagination: Pagination(),\n        musicList: [],\n        albumInfo: {},\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.album.albumId !== prevProps.album.albumId){\n            this.fetchAlbumDetail();\n        }\n    }\n\n    onPlay = (record) => {\n        this.props.onPlay(record.id, record)\n    };\n\n    onAddList = (record) => {\n        this.props.onAddList(record);\n    };\n\n    onAddAlbum = () => {\n        this.props.onAddAlbum(this.state.musicList);\n    };\n\n    onDownload = (record) => {\n        this.props.onDownload(record.id, record)\n    };\n\n    onArtistClick = (record) => {\n        this.props.onArtist(record);\n    };\n\n    fetchAlbumDetail = () => {\n        this.setState({loading: true, albumInfo: {}});\n        Axios.get('/albumMusic', {params: {id: this.props.album.albumId, source: this.props.album.source}})\n            .then(res => {\n                this.setState({loading: false});\n                if (res.data.success){\n                    this.setState({\n                        musicList: res.data.songs,\n                        albumInfo: res.data.album,\n                    })\n                } else {\n                    notification.error({message: '网络错误 获取失败', duration: null})\n                }\n            })\n    };\n\n    render() {\n        const loading = this.props.loading || this.state.loading;\n        const { albumInfo } = this.state;\n        const columns = [\n            {title: '歌曲名', dataIndex: 'name', key: 'name'},\n            {title: '时长', dataIndex: 'duration', key: 'duration', width: 75, render: (text) => (<div>{GetDuration(text)}</div>)},\n            {title: '歌手', dataIndex: 'artist', key: 'artist', \n                render: (text, record) => (\n                    <span className='link' onClick={()=>this.onArtistClick(record)}>{record.artist}</span>\n                )},\n            {title: '操作', dataIndex: 'id', key: 'action', width: 150,\n                render: (text, record) => (<MusicAction onPlay={()=>{this.onPlay(record)}}\n                                                        onAddList={()=>{this.onAddList(record)}}\n                                                        onDownload={()=>this.onDownload(record)}/>\n                )},\n        ];\n\n        return (\n            <div className={style.album}>\n                {this.props.album.albumId && <div className={style.info}>\n                    <LoadingImg minHeight={100} src={albumInfo.img}/>\n                    <div className={style.emphasize}>《{albumInfo.name}》</div>\n                    <div>歌手: {albumInfo.artist}</div>\n                    <div>公司: {albumInfo.company}</div>\n                    <div>发行时间: {moment(albumInfo.publishTime).format('YYYY-MM-DD')}</div>\n                    <Popover content={\n                        <Tooltip title='添加专辑中的歌曲到歌单'>\n                            <PlusCircleOutlined className='link' onClick={this.onAddAlbum}/>\n                        </Tooltip>}>\n                        <DashOutlined className='link'/>\n                    </Popover>\n                </div>}\n                <div className={style.table}>\n                    <Table dataSource={this.state.musicList}\n                           loading={loading}\n                           pagination={this.state.pagination}\n                           onChange={(pagination) => {\n                               this.setState({\n                                   pagination: {\n                                       ...this.state.pagination,\n                                       current: pagination.current,\n                                       pageSize: pagination.pageSize\n                                   }\n                               })\n                           }}\n                           scroll={{y:window.innerHeight-268}}\n                           size='small'\n                           columns={columns} rowKey='id'/>\n                </div>\n            </div>\n        )\n    }\n}","import React, {Component} from 'react';\nimport { Table, notification, Tabs } from 'antd';\nimport Axios from 'axios';\nimport moment from 'moment';\nimport Pagination from '@/settings/Pagination';\nimport LoadingImg from '@/lib/LoadingImg';\nimport MusicAction from \"@/lib/MusicAction\";\nimport { GetDuration } from \"@/utils\";\nimport style from \"./Music.module.scss\";\n\nconst { TabPane } = Tabs;\n\nexport default class artistList extends Component{\n    state = {\n        loading: false,\n        pagination: Pagination(),\n        hotList: [],\n        albumList: [],\n        artistInfo: {},\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.artist.artistId !== prevProps.artist.artistId){\n            this.fetchArtistDetail();\n            this.fetchArtistAlbum();\n        }\n    }\n\n    onPlay = (record) => {\n        this.props.onPlay(record.id, record)\n    };\n\n    onAddList = (record) => {\n        this.props.onAddList(record);\n    };\n\n    onDownload = (record) => {\n        this.props.onDownload(record.id, record)\n    };\n\n    onAlbumClick = (record) => {\n    \tthis.props.onAlbum(record);\n    };\n\n    fetchArtistDetail = () => {\n        this.setState({loading: true, artistInfo: {}});\n        Axios.get('/artistMusic', {params: {id: this.props.artist.artistId, source: this.props.artist.source}})\n            .then(res => {\n                this.setState({loading: false});\n                if (res.data.success){\n                   \tthis.setState({\n                   \t\thotList: res.data.songs,\n                   \t\tartistInfo: res.data.artist,\n                   \t})\n                } else {\n                    notification.error({message: '网络错误 获取歌手信息失败', duration: null})\n                }\n            })\n    };\n\n    fetchArtistAlbum = () => {\n    \tconst { pagination } = this.state;\n    \tlet limit = pagination.pageSize;\n    \tlet page = pagination.current;\n        this.setState({loading: true});\n        Axios.get('/artistAlbum', {params: {id: this.props.artist.artistId, limit: limit, page: page, source: this.props.artist.source}})\n            .then(res => {\n                this.setState({loading: false});\n                if (res.data.success){\n                   \tthis.setState({\n                   \t\talbumList: res.data.albums,\n                   \t\tpagination: {...pagination, total: res.data.albumSize}\n                   \t})\n                } else {\n                    notification.error({message: '网络错误 获取歌手专辑失败', duration: null})\n                }\n            })\n    };\n\n    render() {\n        const loading = this.props.loading || this.state.loading;\n        const { artistInfo } = this.state;\n        const musicColumns = [\n            {title: '歌曲名', dataIndex: 'name', key: 'name'},\n            {title: '时长', dataIndex: 'duration', key: 'duration', width: 75, render: (text) => (<div>{GetDuration(text)}</div>)},\n            {title: '专辑', dataIndex: 'album', key: 'album', \n            \trender: (text, record) => (\n            \t\t<span className='link' onClick={()=>this.onAlbumClick(record)}>《{record.album}》</span>\n            \t)},\n            {title: '操作', dataIndex: 'id', key: 'action', width: 150,\n                render: (text, record) => (<MusicAction onPlay={()=>{this.onPlay(record)}}\n                                                        onAddList={()=>{this.onAddList(record)}}\n                                                        onDownload={()=>this.onDownload(record)}/>\n                )},\n        ];\n\n        const albumColumns = [\n            {title: '专辑名', dataIndex: 'album', key: 'album', \n            \trender: (text, record) => (\n            \t\t<span className='link' onClick={()=>this.onAlbumClick(record)}>《{text}》</span>\n            \t)},\n            {title: '发行日期', dataIndex: 'publishTime', key: 'publishTime', render: (text) => (moment(text).format('YYYY-MM-DD'))},\n            {title: '公司', dataIndex: 'company', key: 'company'},\n            {title: '歌曲数量', dataIndex: 'size', key: 'size'},\n        ];\n\n        return (\n            <div className={style.album}>\n                {this.props.artist.artistId && <div className={style.info}>\n                \t<LoadingImg minHeight={100} src={artistInfo.img}/>\n                    <div className={style.emphasize}>{artistInfo.name}</div>\n                </div>}\n                <Tabs type=\"card\" tabPosition='left' size='small'>\n\t\t          \t<TabPane tab=\"Top50\" key=\"music\">\n\t\t            \t<Table dataSource={this.state.hotList}\n\t\t                       loading={loading}\n\t\t                       pagination={false}\n\t\t                       scroll={{y:window.innerHeight-268}}\n\t\t                       size='small'\n\t\t                       columns={musicColumns} rowKey='id'/>\n\t\t          \t</TabPane>\n\t\t          \t<TabPane tab=\"专辑\" key=\"album\">\n\t\t          \t  \t<Table dataSource={this.state.albumList}\n\t\t                       loading={loading}\n\t\t                       pagination={this.state.pagination}\n\t\t                       onChange={(pagination) => {\n\t\t                            this.setState({\n\t\t                                pagination: {\n\t\t                                    ...this.state.pagination,\n\t\t                                    current: pagination.current,\n\t\t                                    pageSize: pagination.pageSize\n\t\t                                }\n\t\t                            }, () => {this.fetchArtistAlbum()})\n\t\t                       }}\n\t\t                       size='small'\n\t\t                       scroll={{y:window.innerHeight-268}}\n\t\t                       columns={albumColumns} rowKey='albumId'/>\n\t\t         \t</TabPane>\n\t\t        </Tabs>\n            </div>\n        )\n    }\n}","import React, {Component} from 'react';\nimport { Table, Tabs, Switch } from 'antd';\nimport { CloseOutlined, SyncOutlined, CaretUpOutlined, CaretDownOutlined } from '@ant-design/icons';\nimport Pagination from '@/settings/Pagination';\nimport MusicAction from \"@/lib/MusicAction\";\nimport { GetDuration } from \"@/utils\";\nimport style from './Music.module.scss';\n\nconst { TabPane } = Tabs;\n\nexport default class PlayList extends Component{\n    state = {\n        loading: false,\n        editMod: false,\n        listType: 'customList',\n        customPagination: Pagination(),\n        recentPagination: Pagination(),\n    };\n\n    componentDidMount() {\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n    }\n\n    onRemove = (record) => {\n        const { listType } = this.state;\n        this.props.onUpdate(listType, 'remove', record);\n    };\n\n    onPlay = (record) => {\n        this.props.onPlay(record.id, record, this.state.listType)\n    };\n\n    onAddList = (record) => {\n        this.props.onAddList(record);\n    };\n\n    onDownload = (record) => {\n        this.props.onDownload(record.id, record)\n    };\n\n    onArtistClick = (record) => {\n        this.props.onArtist(record);\n    };\n\n    onModChange = (v) => {\n        this.props.onModChange(v);\n    };\n\n    onPositionChange = (record, num) => {\n        const { listType } = this.state;\n        this.props.onUpdate(listType, 'move', record, num);\n    }\n\n    render() {\n        const { customList, recentList, currentType, audioData } = this.props;\n        const { editMod, listType } = this.state;\n        const loading = this.props.loading || this.state.loading;\n        const columns = [\n            {title: '', dataIndex: 'name', key: 'remove', width: 64,\n                render: (text, record) => (\n                    <div>\n                        {editMod && \n                            <div className={style.rowAct}>\n                                <ArrowAction onArrow={(num)=>this.onPositionChange([record], num)}/>\n                                <CloseOutlined className='link' onClick={()=>this.onRemove([record])}/>\n                            </div>\n                        }\n                    </div>\n                )},\n            {title: '', dataIndex: 'name', key: 'playing', width: 30,\n                render: (text, record) => (\n                    <div>\n                        {listType === currentType && record.id === audioData.id &&\n                        <SyncOutlined spin className={style.tableColIcon}/>}\n                    </div>\n                )},\n            {title: '歌曲名', dataIndex: 'name', key: 'name'},\n            {title: '时长', dataIndex: 'duration', key: 'duration', width: 75, render: (text) => (<div>{GetDuration(text)}</div>)},\n            {title: '歌手', dataIndex: 'artist', key: 'artist',\n                render: (text, record) => (\n                    <span className='link' onClick={()=>this.onArtistClick(record)}>{record.artist}</span>\n                )},\n            {title: '操作', dataIndex: 'id', key: 'action', width: 150,\n                render: (text, record) => (\n                    <MusicAction btnList={listType === 'customList' ? ['play', 'download'] : ['play', 'add', 'download']}\n                                 onPlay={()=>{this.onPlay(record)}}\n                                 onAddList={()=>{this.onAddList(record)}}\n                                 onDownload={()=>this.onDownload(record)}/>\n                )},\n        ];\n\n        return (\n            <div className={style.playList}>\n                <div className={style.header}>\n                    <div className={style.item}>\n                        <div className={style.text}>编辑</div>\n                        <Switch size='middle' onChange={(v)=>this.setState({editMod: v})}/>\n                    </div>\n                    <div className={style.item}>\n                        <div className={style.text}>列表播放</div>\n                        <Switch size='middle' onChange={(v)=>this.onModChange(v ? 'list' : 'solo')}/>\n                    </div>\n                </div>\n                <Tabs type=\"card\" tabPosition='left' size='small' activeKey={this.state.listType}\n                      onChange={(v)=>this.setState({listType: v})}>\n                    <TabPane tab=\"歌单\" key=\"customList\">\n                        <div className={style.table}>\n                            <Table dataSource={customList}\n                                   loading={loading}\n                                   rowClassName={(record) => {\n                                       return (listType === currentType && record.id === audioData.id) ? 'highlightRow' : ''\n                                   }}\n                                   pagination={this.state.customPagination}\n                                   onChange={(pagination) => {\n                                       this.setState({\n                                           customPagination: {\n                                               ...this.state.customPagination,\n                                               current: pagination.current,\n                                               pageSize: pagination.pageSize\n                                           }\n                                       })\n                                   }}\n                                   scroll={{y:window.innerHeight-268}}\n                                   size='small'\n                                   columns={columns} rowKey='id'/>\n                        </div>\n                    </TabPane>\n                    <TabPane tab=\"最近播放\" key=\"recentList\">\n                        <div className={style.table}>\n                            <Table dataSource={recentList}\n                                   loading={loading}\n                                   rowClassName={(record) => {\n                                       return (listType === currentType && record.id === audioData.id) ? 'highlightRow' : ''\n                                   }}\n                                   pagination={this.state.recentPagination}\n                                   onChange={(pagination) => {\n                                       this.setState({\n                                           recentPagination: {\n                                               ...this.state.recentPagination,\n                                               current: pagination.current,\n                                               pageSize: pagination.pageSize\n                                           }\n                                       })\n                                   }}\n                                   scroll={{y:window.innerHeight-268}}\n                                   size='small'\n                                   columns={columns} rowKey='id'/>\n                        </div>\n                    </TabPane>\n                </Tabs>\n            </div>\n        )\n    }\n}\n\nclass ArrowAction extends Component{\n    state = {};\n    render(){\n        return (\n            <div>\n                <CaretUpOutlined onClick={()=>this.props.onArrow(-1)} className='link'/>\n                <CaretDownOutlined onClick={()=>this.props.onArrow(1)} className={[style.arrow, 'link'].join(' ')}/>\n            </div>\n        )\n    }\n}","import React, {Component} from 'react';\nimport Axios from 'axios';\nimport AudioControl from \"./AudioControl\";\nimport MusicList from \"./MusicList\";\nimport AlbumList from \"./AlbumList\";\nimport ArtistList from \"./ArtistList\";\nimport PlayList from \"./PlayList\";\nimport { notification, Tabs } from 'antd';\nimport { DownloadBlob } from \"@/utils\";\nimport style from './Music.module.scss';\n\nconst { TabPane } = Tabs;\n\nexport default class Music extends Component{\n    state = {\n        tab: 'music',\n        loading: false,\n        audioSrc: '',\n        audioData: {},\n        album: {},\n        artist: {},\n        recentList: [],\n        customList: [],\n        currentPlayList: 'recentList',\n        playMod: 'soloSingle',\n        playingList: [],\n    };\n\n    componentDidMount(){\n        this.setState({\n            recentList: JSON.parse(window.localStorage.getItem('recentList')) || [],\n            customList: JSON.parse(window.localStorage.getItem('customList')) || [],\n        })\n    }\n\n    updatePlayList = (listType, action, records, num=0, maxLength=-1) => {\n        let list = JSON.parse(window.localStorage.getItem(listType)) || [];\n        let result = {};\n        records.forEach(record => {\n            let index = -1;\n            list.forEach((item, i) => {\n                if (item.id === record.id){\n                    index = i;\n                }\n            });\n            switch (action) {\n                case 'remove':\n                    if (index >= 0){list.splice(index, 1)}\n                    break;\n                case 'add':\n                    if (index === -1){list.push(record)}\n                    break;\n                case 'toTop':\n                    if (index >= 0){\n                        list.splice(index, 1)\n                    }\n                    list.splice(0, 0, record);\n                    break;\n                case 'move':\n                    if (index >= 0){\n                        list.splice(index, 1)\n                        list.splice(index + num, 0, record);\n                    }\n                    break;\n                default:\n                    break;\n            }\n        });\n        if (maxLength >= 0 && list.length > 0){\n            while(list.length > maxLength){\n                list.pop();\n            }\n        }\n        window.localStorage.setItem(listType, JSON.stringify(list));\n        result[listType] = list;\n        this.setState({...result})\n    };\n\n    onAlbum = (album) => {\n        this.setState({tab: 'album', album: album});\n    };\n\n    onArtist = (artist) => {\n        this.setState({tab: 'artist', artist: artist})\n    };\n\n    onPlay = (id, record, listType='recentList') => {\n        this.updatePlayList('recentList', 'toTop', [record], 0, 50);\n        this.setState({currentPlayList: listType});\n        this.fetchPlay(id, record);\n    };\n\n    onAddList = (record) => {\n        const { customList } = this.state;\n        let index = -1;\n        customList.forEach((item, i) => {\n            if (item.id === record.id){index = i}\n        });\n        if (index >= 0){\n            notification.warning({message: '歌曲已在歌单中', duration: 4})\n        } else {\n            this.updatePlayList('customList', 'add', [record]);\n            notification.success({message: '添加成功', duration: 4});\n        }\n    };\n\n    onAddAlbum = (records) => {\n        this.updatePlayList('customList', 'add', records);\n        notification.success({message: '添加成功', duration: 4})\n    };\n\n    onAudioEnd = (next=0) => {\n        if (this.state.playMod === 'list' || next !== 0){\n            let list = JSON.parse(window.localStorage.getItem(this.state.currentPlayList)) || [];\n            let index = -1;\n            list.forEach((item, i) => {\n                if (item.id === this.state.audioData.id){index = i}\n            });\n            if (index >= 0){\n                index += next >= 0 ? 1 : -1;\n                if (index >= list.length){index = 0}\n                if (index < 0){index = Math.max(list.length - 1, 0)}\n                let record = list[index];\n                if (record){this.fetchPlay(record.id, record)}\n            }\n        }\n    };\n\n    fetchPlay = (id, record) => {\n        this.setState({loading: true, audioData: record, audioSrc: ''});\n        Axios.get('/download', {\n            params: {id: id, source: record.source},\n            responseType: 'blob'\n        }).then(res => {\n            this.setState({loading: false});\n            if (res.data.size > 17){\n                this.setState({audioSrc: res})\n            } else {\n                notification.error({message: '网络错误 获取失败', duration: null})\n            }\n        })\n    };\n\n    fetchDownload = (id, record) => {\n        this.setState({loading: true});\n        Axios.get('/download', {\n            params: {id: id, source: record.source},\n            responseType: 'blob'\n        }).then(res => {\n            this.setState({loading: false});\n            if (res.data.size > 17){\n                let suffix = record.source === 'qq' ? '.m4a' : '.mp3';\n                DownloadBlob(res, record.name+suffix);\n            } else {\n                notification.error({message: '网络错误 获取失败', duration: null})\n            }\n        })\n    };\n\n    render() {\n        const { loading, playMod, recentList, customList, audioData, currentPlayList } = this.state;\n        const TabExtra = (\n            <AudioControl src={this.state.audioSrc} audioData={audioData} playMod={playMod}\n                          onAudioEnd={this.onAudioEnd}/>\n        );\n        return (\n            <div className={style.music}>\n                <Tabs activeKey={this.state.tab} tabBarExtraContent={TabExtra}\n                        onChange={(v)=>this.setState({tab: v})}>\n                    <TabPane tab=\"歌曲\" key=\"music\" forceRender>\n                        <MusicList loading={loading}\n                                   onUpdate={()=>this.setState({tab: 'music'})}\n                                   onPlay={this.onPlay} onAddList={this.onAddList} onDownload={this.fetchDownload}\n                                   onAlbum={this.onAlbum} onArtist={this.onArtist}/>\n                    </TabPane>\n                    <TabPane tab=\"专辑\" key=\"album\" forceRender>\n                        <AlbumList loading={loading}\n                                   album={this.state.album}\n                                   onPlay={this.onPlay} onAddList={this.onAddList} onDownload={this.fetchDownload}\n                                   onArtist={this.onArtist} onAddAlbum={this.onAddAlbum}/>\n                    </TabPane>\n                    <TabPane tab=\"歌手\" key=\"artist\" forceRender>\n                        <ArtistList loading={loading} \n                                    artist={this.state.artist}\n                                    onPlay={this.onPlay} onAddList={this.onAddList} onDownload={this.fetchDownload}\n                                    onAlbum={this.onAlbum}/>\n                    </TabPane>\n                    <TabPane tab=\"播放列表\" key=\"play\" forceRender>\n                        <PlayList loading={loading}\n                                  recentList={recentList}\n                                  customList={customList}\n                                  currentType={currentPlayList} audioData={audioData}\n                                  onPlay={this.onPlay} onAddList={this.onAddList} onDownload={this.fetchDownload}\n                                  onArtist={this.onArtist} onUpdate={this.updatePlayList}\n                                  onModChange={(v)=>this.setState({playMod: v})}/>\n                    </TabPane>\n                </Tabs>\n            </div>\n        )\n    }\n}\n","import React, {Component} from 'react';\nimport { Input, Select } from 'antd';\nimport { connect } from 'react-redux';\nimport { searchMusic } from \"@/redux/action\";\nimport Axios from 'axios';\nimport Music from '@/pages/music/Music';\nimport style from './Main.module.scss';\n\nconst { Search } = Input;\nconst { Option } = Select;\n\nconst mapStateToProps = state => {return state};\n\nclass Main extends Component{\n    state = {\n        keyword: '',\n        searchType: 'net',\n    };\n\n    onTest = () => {\n        Axios.get('/test')\n            .then(res => { \n                console.log(res);\n            })\n    };\n\n    componentDidMount() {\n    }\n\n    onSearch = () => {\n        const { keyword, searchType } = this.state;\n        this.props.dispatch(searchMusic(keyword, searchType))\n    };\n\n    render() {\n        return (\n            <div className={style.main}>\n            \t<div className={style.topBar}>\n                    <div className={style.content}>\n                        <div className={style.left}>\n                            <div className={style.title}>AEON</div>\n                            <Select defaultValue='net' onChange={(v)=>this.setState({searchType: v})} className={style.select}>\n                                <Option value='net'>网易云</Option>\n                                <Option value='qq'>qq音乐</Option>\n                            </Select>\n                            <Search onSearch={this.onSearch} value={this.state.keyword}\n                                    onChange={(v)=>this.setState({keyword: v.target.value})}/>\n                        </div>\n                    </div>\n                </div>\n            \t<div className={style.container}>\n                    <div className={style.content}>\n                        <Music/>\n                    </div>\n            \t</div>\n            </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(Main)","import React from 'react';\nimport Main from '@/pages/main/Main';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n            <Route exact path={['/']} component={Main}/>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport reducer from '@/redux/reducer';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nlet store = createStore(reducer)\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"audioControl\":\"AudioControl_audioControl__1ARvq\",\"interface\":\"AudioControl_interface__1WUqc\",\"progressBar\":\"AudioControl_progressBar__Qb42T\",\"current\":\"AudioControl_current__1cu3t\",\"progress\":\"AudioControl_progress__2kl9g\",\"item\":\"AudioControl_item__TWECM\",\"extend\":\"AudioControl_extend__3BScH\",\"info\":\"AudioControl_info__2HSPC\",\"action\":\"AudioControl_action__1yQ3M\",\"volumePop\":\"AudioControl_volumePop__aED7h\",\"slider\":\"AudioControl_slider__3E3tP\",\"canvasContainer\":\"AudioControl_canvasContainer__3La-E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Main_main__2eEIG\",\"topBar\":\"Main_topBar__1rJsz\",\"content\":\"Main_content__Gtd0O\",\"left\":\"Main_left__2BvH3\",\"select\":\"Main_select__Js6Cp\",\"title\":\"Main_title__3R2dg\",\"container\":\"Main_container__3YkPS\"};"],"sourceRoot":""}